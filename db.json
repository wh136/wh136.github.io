{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1524965909112},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1524965909112},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1524965909113},{"_id":"themes/landscape/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1524965909114},{"_id":"themes/landscape/_config.yml","hash":"356bc255b641d56474d6f8b8def311ab733340c9","modified":1525350002525},{"_id":"themes/landscape/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1524965909145},{"_id":"source/_posts/201805面试总结.md","hash":"c65d7cbc18d55cf0df540c81004aae111356520f","modified":1526952710105},{"_id":"source/_posts/CSS编码规范.md","hash":"479199a9e55dceb1fff3cfb181c1798633516633","modified":1525270986492},{"_id":"source/_posts/HTML编码规范.md","hash":"a327930e3ff5267d1a7b718a8ddcee848ed805a7","modified":1525269585700},{"_id":"source/_posts/JavaScript深拷贝递归.md","hash":"c9fb06825fb5dc0f856b2213c15f98da05682c34","modified":1525258224115},{"_id":"source/_posts/Python代码笔记.md","hash":"1f242f07ae3a60476b621186ce86e9af55ba3401","modified":1525444510766},{"_id":"source/_posts/Python解析XML的方法.md","hash":"85270eb95bc3d160a03ea5b073e907a414a53c17","modified":1525258224144},{"_id":"source/_posts/flask.md","hash":"d6f025bdf73c995f1ff670719b6d6d25431a4cea","modified":1528099113375},{"_id":"source/_posts/hello-world.md","hash":"79065c348596e2253ed419391dfad7588aaea5be","modified":1525258399891},{"_id":"source/_posts/leetCode.md","hash":"1cf2236b5291255976425089ec11c78bc54956aa","modified":1527150943595},{"_id":"source/_posts/socketInPython.md","hash":"50a492f658d8bf94a6d008c5203133203f2b5f09","modified":1526953060463},{"_id":"source/_posts/使用ubuntu,kafka,zookeeper搭建集群服务器.md","hash":"4d64197d509fb8c7b788166fab2e911d5ec2c671","modified":1525267940310},{"_id":"source/_posts/协议分析和流量统计事关安全隐私.md","hash":"e50897e14196ec1491e363939da13e90269e7a6c","modified":1525258268768},{"_id":"source/_posts/多进程扫描服务器.md","hash":"f67c8a20ad2ec81e54eaefe196c39f4fd5f023a5","modified":1526730108704},{"_id":"source/_posts/简单对象访问协议SOAP.md","hash":"73d55d88bd46b8a68413450e577ef273289818ce","modified":1525258224079},{"_id":"source/_posts/读谢希仁版计算机网络感悟.md","hash":"31d5c3befafeb2157df789c0d91e74ebd3618aa9","modified":1692110620815},{"_id":"source/about/index.md","hash":"b4b859ff0a0013aff1995599e1640a20fb3b072a","modified":1526013695103},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1524965909116},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1524965909117},{"_id":"themes/landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1524965909118},{"_id":"themes/landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1524965909118},{"_id":"themes/landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1524965909119},{"_id":"themes/landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1524965909120},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1524965909120},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1524965909121},{"_id":"themes/landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1524965909122},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1524965909122},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1524965909123},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1524965909124},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1524965909140},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1524965909140},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1524965909141},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1524965909142},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1524965909143},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1524965909144},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1524965909145},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1524965909146},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"8a671a6efd48932bd6c4842140330f590d2668fe","modified":1525351498343},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1524965909126},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1524965909126},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1524965909127},{"_id":"themes/landscape/layout/_partial/baidu-analytics.ejs","hash":"1c6b53344da3e7f28fd423dc171ecec97593f2cf","modified":1525345863490},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1524965909128},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1524965909129},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1524965909129},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"8c3663c95e1f1a5ccc301bdc0fcf7f74697c2a81","modified":1525355115962},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"cf755454675d13a0813a922b575c06b6b74ab9fd","modified":1525351253860},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1524965909131},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1524965909136},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1524965909137},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1524965909137},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1524965909138},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1524965909138},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1524965909139},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1524965909147},{"_id":"themes/landscape/source/css/_variables.styl","hash":"b83b6d5abd6d51046b7fac826b2d18c34c421b73","modified":1524992185168},{"_id":"themes/landscape/source/css/style.styl","hash":"1fb29b587eefb4a9459d51d9d5254428c4068703","modified":1525061976269},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1524965909170},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1524965909171},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1524965909171},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1524965909172},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1524965909173},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1524965909174},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1524965909179},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1524965909180},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1524965909181},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1524965909182},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1524965909132},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1524965909133},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1524965909133},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1524965909134},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1524965909135},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1524965909135},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1524965909148},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1524965909149},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1524965909150},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1524965909151},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1524965909152},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1524965909153},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1524965909153},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1524965909154},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1524965909155},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1524965909156},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1524965909157},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1524965909157},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1524965909160},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1524965909161},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1524965909165},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1524965909175},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1524965909175},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1524965909176},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1524965909177},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1524965909177},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1524965909178},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1524965909165},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1524965909163},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1524965909168},{"_id":"public/search.xml","hash":"84bd7b66d0d4c4cbb53006157736e60340b9e98c","modified":1692110654948},{"_id":"public/about/index.html","hash":"d115681cfe0e2a3fb61250353e9f4dde43a801c7","modified":1692110655415},{"_id":"public/2018/05/10/201805面试总结/index.html","hash":"d6f551f4ac9d3128f222347bec1ae5f62a23556c","modified":1692110655483},{"_id":"public/2018/05/15/读谢希仁版计算机网络感悟/index.html","hash":"02a84572ceb37d99e8979c697e1d571f3960f2d1","modified":1692110655489},{"_id":"public/2016/06/10/协议分析和流量统计事关安全隐私/index.html","hash":"464c1edd736409aae9a3222772e829e53bc113ce","modified":1692110655489},{"_id":"public/archives/index.html","hash":"bb9ce4ea492547056d13b16cae8af15ae7a2fe9d","modified":1692110655489},{"_id":"public/2016/01/05/hello-world/index.html","hash":"58079c5ffb78bc1571cfee97346b31345cc26a4b","modified":1692110655489},{"_id":"public/archives/page/2/index.html","hash":"2fb0a9583f074251dc7288b0f2202a041c2803ab","modified":1692110655490},{"_id":"public/2018/05/10/leetCode/index.html","hash":"a20fa92f08dd49f26ba4ec97d27bf9fcce641a74","modified":1692110655490},{"_id":"public/2017/03/11/JavaScript深拷贝递归/index.html","hash":"249d6362d6afe79bac5ec555c3a3509e19773538","modified":1692110655490},{"_id":"public/2017/02/01/使用ubuntu,kafka,zookeeper搭建集群服务器/index.html","hash":"fd35438590a692e0f092fd4ff4d204d609d7de91","modified":1692110655490},{"_id":"public/2016/11/10/socketInPython/index.html","hash":"d7eb850bcf06db745aa45ae4b09d8f2182e488ab","modified":1692110655490},{"_id":"public/2016/09/16/Python解析XML的方法/index.html","hash":"34eefb93d1b8490195e6ed756fd360cf1535742e","modified":1692110655491},{"_id":"public/2016/10/16/简单对象访问协议SOAP/index.html","hash":"0a873374cb5107213440c3eebd222ce82dc8e3cc","modified":1692110655491},{"_id":"public/2016/08/14/多进程扫描服务器/index.html","hash":"5fe7af7ca6d968c9a69f3619a3b99fcf049aaed1","modified":1692110655491},{"_id":"public/2016/08/05/Python代码笔记/index.html","hash":"312917ce6711d5eca144910ab1532daaed53ea9c","modified":1692110655491},{"_id":"public/2016/03/05/CSS编码规范/index.html","hash":"b9a7f84ac5786150b220cb72e1f40a57c40ef9f6","modified":1692110655491},{"_id":"public/2016/03/06/HTML编码规范/index.html","hash":"05567e62e780ed8981366724c1f346bc79d33475","modified":1692110655492},{"_id":"public/2018/06/04/flask/index.html","hash":"697cf8cadad35089e7c2304c4337677886957fd0","modified":1692110655527},{"_id":"public/archives/2016/index.html","hash":"f7d5596ef6504900248c6621479a4005c2f7ef31","modified":1692110655544},{"_id":"public/archives/2016/03/index.html","hash":"0dc75c588fd0a014bfefc45261e93880ac972194","modified":1692110655544},{"_id":"public/archives/2016/01/index.html","hash":"2da7fe1496ab2806ab39bb90148205d01a0019e2","modified":1692110655545},{"_id":"public/archives/2016/06/index.html","hash":"2e22036d2b7ce82c9e9e9e61d19ea321ab49acb5","modified":1692110655545},{"_id":"public/archives/2016/08/index.html","hash":"626088d0690f80303c1662c95e94c6b4c51f67f9","modified":1692110655545},{"_id":"public/archives/2016/09/index.html","hash":"3c0b2f54db090f93efa45dcfcd386a70d057b193","modified":1692110655545},{"_id":"public/archives/2017/index.html","hash":"9b914ad8b58bd75cfee2f68b7edd74de742185df","modified":1692110655545},{"_id":"public/archives/2017/02/index.html","hash":"d3078102457f3d20e31d6337c517f37be3c321be","modified":1692110655545},{"_id":"public/archives/2016/10/index.html","hash":"7c6c4fbcbbbbc7d0a4c389401396f525cdc082cb","modified":1692110655545},{"_id":"public/archives/2016/11/index.html","hash":"b963f05be9cd77399e565ebb669c5bc2085f3ade","modified":1692110655546},{"_id":"public/archives/2017/03/index.html","hash":"367fce69a47998ccb94eb7a23d3a02a9cad209c8","modified":1692110655546},{"_id":"public/archives/2018/05/index.html","hash":"5ef4864b7b7b844312888cc0601a5126f9d28467","modified":1692110655546},{"_id":"public/archives/2018/index.html","hash":"856f51a7389fb28b3dc8fd9462e883fffd066ec2","modified":1692110655546},{"_id":"public/tags/面试日记/index.html","hash":"3f1d5c9f1d47cefa1540c56b1c67a83a76ee4332","modified":1692110655546},{"_id":"public/tags/CSS/index.html","hash":"0dcf12ed21b748648218d06305f59bc42375f369","modified":1692110655546},{"_id":"public/tags/HTML/index.html","hash":"0c67bb011e35b2295dbccbc65994097c0cd434db","modified":1692110655546},{"_id":"public/tags/JavaScript/index.html","hash":"527d4e720af9f177c4c5f2253822bddf89a25958","modified":1692110655547},{"_id":"public/tags/Python2-7/index.html","hash":"db121fc4af373bffb37ed945951682ad18ebffcb","modified":1692110655547},{"_id":"public/tags/面向对象程序设计/index.html","hash":"d9845131069eceb125b948272674ded11f3cb7c3","modified":1692110655547},{"_id":"public/tags/WebService/index.html","hash":"0e5107427f9a36ff27d8d5a86f64b3e34f13ccc4","modified":1692110655547},{"_id":"public/tags/XML/index.html","hash":"78faa9d743200ebf8cdb5a6185cb1c9e78bb33c4","modified":1692110655547},{"_id":"public/tags/socket/index.html","hash":"184899796b9be7e60e69c062047596f347bf002e","modified":1692110655547},{"_id":"public/tags/leetcode/index.html","hash":"ba68f72bc574917748fd712680975b1302aa9512","modified":1692110655547},{"_id":"public/tags/集群服务器/index.html","hash":"20c9995072f49ba02b41ea483e776db6b977ae25","modified":1692110655547},{"_id":"public/tags/多线程/index.html","hash":"8cf8d36e84934c5e17622c4c29983dcdc8642a17","modified":1692110655547},{"_id":"public/tags/分布式/index.html","hash":"762e1aa785e3b164f60550af1a42f95d8563930e","modified":1692110655548},{"_id":"public/tags/Vmware虚拟机/index.html","hash":"f9fc25d89748772b91db0d9862f44387550d04fb","modified":1692110655548},{"_id":"public/tags/Linux/index.html","hash":"e9ff3c35d99059d3d5e5dc373004f22e58cf2ab6","modified":1692110655548},{"_id":"public/tags/抓包/index.html","hash":"05d1da83325593867f00436462ddb8b2019cb3cb","modified":1692110655548},{"_id":"public/tags/fiddler-wireshark/index.html","hash":"bc452383d60248c938494fd9a0bcc1d38f797bff","modified":1692110655548},{"_id":"public/tags/协议分析/index.html","hash":"98d28e720b303c5de9a47e5cf0ef0d9d9e5c543b","modified":1692110655548},{"_id":"public/tags/流量统计/index.html","hash":"f0823dc2a4b249b2f3c95f7ba868302abfa255ab","modified":1692110655548},{"_id":"public/tags/多进程/index.html","hash":"cb7e04d51593afad951a2326dbd58580dc6fc297","modified":1692110655548},{"_id":"public/tags/HTTP协议/index.html","hash":"5aa1c59e5c76f30aacd457f3201b32c23fd02def","modified":1692110655548},{"_id":"public/tags/读书笔记，-计算机网络/index.html","hash":"dae5ac7e458c5eb609777003caeb9f99fc201a41","modified":1692110655549},{"_id":"public/index.html","hash":"886e8ad6b50b34abf234cab1747e0f5c946313d6","modified":1692110655549},{"_id":"public/page/2/index.html","hash":"03ba6dbf52569eb67e75fa7d9583d952bb521fe8","modified":1692110655549},{"_id":"public/archives/2018/06/index.html","hash":"e49707f97a753841bdfab2d517bb9d628cd6a358","modified":1692110655558},{"_id":"public/tags/Python3/index.html","hash":"7e47f595680d145002564b133d1e30b148eda18f","modified":1692110655559},{"_id":"public/tags/flask/index.html","hash":"ed9a3daaf49905dbc5cdff7ce68c18da9ba635a4","modified":1692110655559}],"Category":[],"Data":[],"Page":[{"title":"关于我","date":"2018-02-09T05:09:04.000Z","_content":"\n一个对机器学习沉迷不能自拔的全栈小能手，对使用哪种语言不感冒，不喜欢宅在家里，喜欢结交各种朋友（科学，人文，工程....）\n喜欢木工制作，梦想开一家木工店，制作各种符合人体工学的家具。\n\n\n\n\n我的作品：\n[弹性力学可视化计算系统](https://wh136.github.io/course/)  2018.3--2018.4\n[单因素方差分析](https://wh136.github.io/anova/)  2017.5.19--2017.5.29\n[农田对象的分类及语义标注方法研究](https://wh136.github.io/recoginze) 2016.1--2016.7\n\n\n电信科学第十技术研究所 Python后端 数据缓存服务组 2016.7.1-2017.1\n西北农林科技大学 计算机科学与技术毕业  2016.7.1\n\n[Github](https://github.com/wh136)   &emsp;&emsp;  [知乎](https://www.zhihu.com/people/TonySimon)    \n\n\n博客内容主要是学习工作过程中的一些技术总结和日志琐事，除非特殊声明，博客内容皆为个人原创，转载烦请标注文章来源。\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-2-9 13:09:04\n---\n\n一个对机器学习沉迷不能自拔的全栈小能手，对使用哪种语言不感冒，不喜欢宅在家里，喜欢结交各种朋友（科学，人文，工程....）\n喜欢木工制作，梦想开一家木工店，制作各种符合人体工学的家具。\n\n\n\n\n我的作品：\n[弹性力学可视化计算系统](https://wh136.github.io/course/)  2018.3--2018.4\n[单因素方差分析](https://wh136.github.io/anova/)  2017.5.19--2017.5.29\n[农田对象的分类及语义标注方法研究](https://wh136.github.io/recoginze) 2016.1--2016.7\n\n\n电信科学第十技术研究所 Python后端 数据缓存服务组 2016.7.1-2017.1\n西北农林科技大学 计算机科学与技术毕业  2016.7.1\n\n[Github](https://github.com/wh136)   &emsp;&emsp;  [知乎](https://www.zhihu.com/people/TonySimon)    \n\n\n博客内容主要是学习工作过程中的一些技术总结和日志琐事，除非特殊声明，博客内容皆为个人原创，转载烦请标注文章来源。\n","updated":"2018-05-11T04:41:35.103Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjoxv5g5l0001v4nb59gvqfai","content":"<p>一个对机器学习沉迷不能自拔的全栈小能手，对使用哪种语言不感冒，不喜欢宅在家里，喜欢结交各种朋友（科学，人文，工程….）<br>喜欢木工制作，梦想开一家木工店，制作各种符合人体工学的家具。</p>\n<p>我的作品：<br><a href=\"https://wh136.github.io/course/\">弹性力学可视化计算系统</a>  2018.3–2018.4<br><a href=\"https://wh136.github.io/anova/\">单因素方差分析</a>  2017.5.19–2017.5.29<br><a href=\"https://wh136.github.io/recoginze\">农田对象的分类及语义标注方法研究</a> 2016.1–2016.7</p>\n<p>电信科学第十技术研究所 Python后端 数据缓存服务组 2016.7.1-2017.1<br>西北农林科技大学 计算机科学与技术毕业  2016.7.1</p>\n<p><a href=\"https://github.com/wh136\" target=\"_blank\" rel=\"noopener\">Github</a>   &emsp;&emsp;  <a href=\"https://www.zhihu.com/people/TonySimon\" target=\"_blank\" rel=\"noopener\">知乎</a>    </p>\n<p>博客内容主要是学习工作过程中的一些技术总结和日志琐事，除非特殊声明，博客内容皆为个人原创，转载烦请标注文章来源。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一个对机器学习沉迷不能自拔的全栈小能手，对使用哪种语言不感冒，不喜欢宅在家里，喜欢结交各种朋友（科学，人文，工程….）<br>喜欢木工制作，梦想开一家木工店，制作各种符合人体工学的家具。</p>\n<p>我的作品：<br><a href=\"https://wh136.github.io/course/\">弹性力学可视化计算系统</a>  2018.3–2018.4<br><a href=\"https://wh136.github.io/anova/\">单因素方差分析</a>  2017.5.19–2017.5.29<br><a href=\"https://wh136.github.io/recoginze\">农田对象的分类及语义标注方法研究</a> 2016.1–2016.7</p>\n<p>电信科学第十技术研究所 Python后端 数据缓存服务组 2016.7.1-2017.1<br>西北农林科技大学 计算机科学与技术毕业  2016.7.1</p>\n<p><a href=\"https://github.com/wh136\" target=\"_blank\" rel=\"noopener\">Github</a>   &emsp;&emsp;  <a href=\"https://www.zhihu.com/people/TonySimon\" target=\"_blank\" rel=\"noopener\">知乎</a>    </p>\n<p>博客内容主要是学习工作过程中的一些技术总结和日志琐事，除非特殊声明，博客内容皆为个人原创，转载烦请标注文章来源。</p>\n"}],"Post":[{"title":"201805面试总结","date":"2018-05-10T05:09:04.000Z","_content":"考研复试被刷，然后准备找工作。把简历挂到了前程无忧，投递了2家公司。刚刚把4个网站都撸完，就收到了新华三公司的电话面试邀请，岗位是网络操作系统软件开发工程师\n## 网络操作系统软件开发工程师\n所属部门：H3C-Comware开发部\n工作地点：杭州\n面试地点：杭州\n岗位职责：负责网络操作系统架构及协议设计与开发工作\n任职要求：\n1） 计算机、通信或相关专业本科及以上学历，具备较强的英文阅读能力。\n2） 精通C/C++编程语言，熟悉linux/Unix系统，具有多线程开发经验。\n3） 熟悉TCP/IP网络协议，具有交换机、路由器开发经验者优先。\n4） 对虚拟化技术有研究者优先。\n5） 具备良好的沟通协调能力和团队合作精神，较强的工作责任，能够在一定的压力下独立解决问题\n<!-- more -->\n### 怎么办？\n我的情况不乐观，大企业就像一个收割机，各人负责各人的工作，没有人听太多闲言碎语。\n先介绍自己目前的处境。技术方面讲一下，以及要准备些什么。不要考虑成败。只是思考自己要做什么。\n目前掌握的技术有年久失修（1年多）的Python，不太乐观的计算机网络协议。由于数据结构和操作系统刚考完，还可以笔试下。\n最近兴趣点全在那个弹性力学可视化计算系统的网站。所以Javascript、css、Html搞得最多。可是我不是专业搞前端的。只是兴趣很浓厚，对这个项目十分喜欢。\n尽量不要给自己太多的暗示，觉得自己太弱小了。在这个群魔乱舞的时代，能做的只有静修内功，打好基础。有所为，有所不为。\n在这个比较清净的地方，思索一下，我需要什么？不需要什么？\n在电话面试环节，首先要介绍自己做哪些东西，然后，兴趣在哪里。细节往往很重要。一般来说没有人能知道你到底做了什么。要可信度强，就要讲细节。\n1）较强的英文阅读能力指的是能够---阅读API最新技术英文文档，还有源代码英文注释，以及要求写代码的时候变量名英文用词和缩写，如何写英文注释。\n2）C/C++精通，可以商量，有三个档次。入门、熟悉、精通、我对自己的定位是在入门和熟悉之间靠前一些。语言这块，写10来天C++代码就能应对，这三个档次不是很重要。重要的是面向对象程序设计思维。\n主要包括数据类型（bool、char、int、float、void、长度取决于编译器和CPU位宽）\n\n先写到这里了，面试完再把全部的知识点补充上去....\n杭州，哥来了。\n\n\n\n","source":"_posts/201805面试总结.md","raw":"---\ntitle: 201805面试总结\ndate: 2018-5-10 13:09:04\ntags: [面试日记]\n---\n考研复试被刷，然后准备找工作。把简历挂到了前程无忧，投递了2家公司。刚刚把4个网站都撸完，就收到了新华三公司的电话面试邀请，岗位是网络操作系统软件开发工程师\n## 网络操作系统软件开发工程师\n所属部门：H3C-Comware开发部\n工作地点：杭州\n面试地点：杭州\n岗位职责：负责网络操作系统架构及协议设计与开发工作\n任职要求：\n1） 计算机、通信或相关专业本科及以上学历，具备较强的英文阅读能力。\n2） 精通C/C++编程语言，熟悉linux/Unix系统，具有多线程开发经验。\n3） 熟悉TCP/IP网络协议，具有交换机、路由器开发经验者优先。\n4） 对虚拟化技术有研究者优先。\n5） 具备良好的沟通协调能力和团队合作精神，较强的工作责任，能够在一定的压力下独立解决问题\n<!-- more -->\n### 怎么办？\n我的情况不乐观，大企业就像一个收割机，各人负责各人的工作，没有人听太多闲言碎语。\n先介绍自己目前的处境。技术方面讲一下，以及要准备些什么。不要考虑成败。只是思考自己要做什么。\n目前掌握的技术有年久失修（1年多）的Python，不太乐观的计算机网络协议。由于数据结构和操作系统刚考完，还可以笔试下。\n最近兴趣点全在那个弹性力学可视化计算系统的网站。所以Javascript、css、Html搞得最多。可是我不是专业搞前端的。只是兴趣很浓厚，对这个项目十分喜欢。\n尽量不要给自己太多的暗示，觉得自己太弱小了。在这个群魔乱舞的时代，能做的只有静修内功，打好基础。有所为，有所不为。\n在这个比较清净的地方，思索一下，我需要什么？不需要什么？\n在电话面试环节，首先要介绍自己做哪些东西，然后，兴趣在哪里。细节往往很重要。一般来说没有人能知道你到底做了什么。要可信度强，就要讲细节。\n1）较强的英文阅读能力指的是能够---阅读API最新技术英文文档，还有源代码英文注释，以及要求写代码的时候变量名英文用词和缩写，如何写英文注释。\n2）C/C++精通，可以商量，有三个档次。入门、熟悉、精通、我对自己的定位是在入门和熟悉之间靠前一些。语言这块，写10来天C++代码就能应对，这三个档次不是很重要。重要的是面向对象程序设计思维。\n主要包括数据类型（bool、char、int、float、void、长度取决于编译器和CPU位宽）\n\n先写到这里了，面试完再把全部的知识点补充上去....\n杭州，哥来了。\n\n\n\n","slug":"201805面试总结","published":1,"updated":"2018-05-22T01:31:50.105Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g550000v4nb8fpmrn57","content":"<p>考研复试被刷，然后准备找工作。把简历挂到了前程无忧，投递了2家公司。刚刚把4个网站都撸完，就收到了新华三公司的电话面试邀请，岗位是网络操作系统软件开发工程师</p>\n<h2 id=\"网络操作系统软件开发工程师\"><a href=\"#网络操作系统软件开发工程师\" class=\"headerlink\" title=\"网络操作系统软件开发工程师\"></a>网络操作系统软件开发工程师</h2><p>所属部门：H3C-Comware开发部<br>工作地点：杭州<br>面试地点：杭州<br>岗位职责：负责网络操作系统架构及协议设计与开发工作<br>任职要求：<br>1） 计算机、通信或相关专业本科及以上学历，具备较强的英文阅读能力。<br>2） 精通C/C++编程语言，熟悉linux/Unix系统，具有多线程开发经验。<br>3） 熟悉TCP/IP网络协议，具有交换机、路由器开发经验者优先。<br>4） 对虚拟化技术有研究者优先。<br>5） 具备良好的沟通协调能力和团队合作精神，较强的工作责任，能够在一定的压力下独立解决问题<br><a id=\"more\"></a></p>\n<h3 id=\"怎么办？\"><a href=\"#怎么办？\" class=\"headerlink\" title=\"怎么办？\"></a>怎么办？</h3><p>我的情况不乐观，大企业就像一个收割机，各人负责各人的工作，没有人听太多闲言碎语。<br>先介绍自己目前的处境。技术方面讲一下，以及要准备些什么。不要考虑成败。只是思考自己要做什么。<br>目前掌握的技术有年久失修（1年多）的Python，不太乐观的计算机网络协议。由于数据结构和操作系统刚考完，还可以笔试下。<br>最近兴趣点全在那个弹性力学可视化计算系统的网站。所以Javascript、css、Html搞得最多。可是我不是专业搞前端的。只是兴趣很浓厚，对这个项目十分喜欢。<br>尽量不要给自己太多的暗示，觉得自己太弱小了。在这个群魔乱舞的时代，能做的只有静修内功，打好基础。有所为，有所不为。<br>在这个比较清净的地方，思索一下，我需要什么？不需要什么？<br>在电话面试环节，首先要介绍自己做哪些东西，然后，兴趣在哪里。细节往往很重要。一般来说没有人能知道你到底做了什么。要可信度强，就要讲细节。<br>1）较强的英文阅读能力指的是能够—阅读API最新技术英文文档，还有源代码英文注释，以及要求写代码的时候变量名英文用词和缩写，如何写英文注释。<br>2）C/C++精通，可以商量，有三个档次。入门、熟悉、精通、我对自己的定位是在入门和熟悉之间靠前一些。语言这块，写10来天C++代码就能应对，这三个档次不是很重要。重要的是面向对象程序设计思维。<br>主要包括数据类型（bool、char、int、float、void、长度取决于编译器和CPU位宽）</p>\n<p>先写到这里了，面试完再把全部的知识点补充上去….<br>杭州，哥来了。</p>\n","site":{"data":{}},"excerpt":"<p>考研复试被刷，然后准备找工作。把简历挂到了前程无忧，投递了2家公司。刚刚把4个网站都撸完，就收到了新华三公司的电话面试邀请，岗位是网络操作系统软件开发工程师</p>\n<h2 id=\"网络操作系统软件开发工程师\"><a href=\"#网络操作系统软件开发工程师\" class=\"headerlink\" title=\"网络操作系统软件开发工程师\"></a>网络操作系统软件开发工程师</h2><p>所属部门：H3C-Comware开发部<br>工作地点：杭州<br>面试地点：杭州<br>岗位职责：负责网络操作系统架构及协议设计与开发工作<br>任职要求：<br>1） 计算机、通信或相关专业本科及以上学历，具备较强的英文阅读能力。<br>2） 精通C/C++编程语言，熟悉linux/Unix系统，具有多线程开发经验。<br>3） 熟悉TCP/IP网络协议，具有交换机、路由器开发经验者优先。<br>4） 对虚拟化技术有研究者优先。<br>5） 具备良好的沟通协调能力和团队合作精神，较强的工作责任，能够在一定的压力下独立解决问题<br>","more":"</p>\n<h3 id=\"怎么办？\"><a href=\"#怎么办？\" class=\"headerlink\" title=\"怎么办？\"></a>怎么办？</h3><p>我的情况不乐观，大企业就像一个收割机，各人负责各人的工作，没有人听太多闲言碎语。<br>先介绍自己目前的处境。技术方面讲一下，以及要准备些什么。不要考虑成败。只是思考自己要做什么。<br>目前掌握的技术有年久失修（1年多）的Python，不太乐观的计算机网络协议。由于数据结构和操作系统刚考完，还可以笔试下。<br>最近兴趣点全在那个弹性力学可视化计算系统的网站。所以Javascript、css、Html搞得最多。可是我不是专业搞前端的。只是兴趣很浓厚，对这个项目十分喜欢。<br>尽量不要给自己太多的暗示，觉得自己太弱小了。在这个群魔乱舞的时代，能做的只有静修内功，打好基础。有所为，有所不为。<br>在这个比较清净的地方，思索一下，我需要什么？不需要什么？<br>在电话面试环节，首先要介绍自己做哪些东西，然后，兴趣在哪里。细节往往很重要。一般来说没有人能知道你到底做了什么。要可信度强，就要讲细节。<br>1）较强的英文阅读能力指的是能够—阅读API最新技术英文文档，还有源代码英文注释，以及要求写代码的时候变量名英文用词和缩写，如何写英文注释。<br>2）C/C++精通，可以商量，有三个档次。入门、熟悉、精通、我对自己的定位是在入门和熟悉之间靠前一些。语言这块，写10来天C++代码就能应对，这三个档次不是很重要。重要的是面向对象程序设计思维。<br>主要包括数据类型（bool、char、int、float、void、长度取决于编译器和CPU位宽）</p>\n<p>先写到这里了，面试完再把全部的知识点补充上去….<br>杭州，哥来了。</p>"},{"title":"CSS编码规范","date":"2016-03-05T05:09:04.000Z","_content":"### 语法\n用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。\n为选择器分组时，将单独的选择器单独放在一行。\n为了代码的易读性，在每个声明块的左花括号前添加一个空格。\n声明块的右花括号应当单独成行。\n每条声明语句的 : 后应该插入一个空格。\n为了获得更准确的错误报告，每条声明都应该独占一行。\n所有声明语句都应当以分号结尾。最后一条声明语句后面的分号是可选的，但是，如果省略这个分号，你的代码可能更易出错。\n对于以逗号分隔的属性值，每个逗号后面都应该插入一个空格（例如，box-shadow）。\n对于属性值或颜色参数，省略小于 1 的小数前面的 0 （例如，.5 代替 0.5；-.5px 代替 -0.5px）。\n十六进制值应该全部小写，例如，#fff。\n尽量使用简写形式的十六进制值，例如，用 #fff 代替 #ffffff。\n为选择器中的属性添加双引号，例如，input\\[type=\"text\"\\]。\n避免为 0 值指定单位，例如，用 margin: 0; 代替 margin: 0px;\n``` css\n/* Bad */\n.selector, .selector-secondary, .selector[type=text] {\n  padding:15px;\n  margin:0px 0px 15px;\n  background-color:rgba(0, 0, 0, 0.5);\n  box-shadow:0px 1px 2px #CCC,inset 0 1px 0 #FFFFFF\n}\n\n/* Good  */\n.selector,\n.selector-secondary,\n.selector[type=\"text\"] {\n  padding: 15px;\n  margin-bottom: 15px;\n  background-color: rgba(0,0,0,.5);\n  box-shadow: 0 1px 2px #ccc, inset 0 1px 0 #fff;\n}\n```\n<!-- more -->\n\n\n\n### 单行规则声明\n对于只包含一条声明的样式，为了易读性和便于快速编辑，建议将语句放在同一行。对于带有多条声明的样式，还是应当将声明分为多行。\n这样做的关键因素是为了错误检测 \n例如，校验器指出在 183 行有语法错误。如果是单行单条声明，你就不会忽略这个错误；如果是单行多条声明的话，你就要仔细分析避免漏掉错误了。\n``` css\n/* Single declarations on one line */\n.span1 { width: 60px; }\n.span2 { width: 140px; }\n.span3 { width: 220px; }\n\n/* Multiple declarations, one per line */\n.sprite {\n  display: inline-block;\n  width: 16px;\n  height: 15px;\n  background-image: url(../img/sprite.png);\n}\n.icon           { background-position: 0 0; }\n.icon-home      { background-position: 0 -20px; }\n.icon-account   { background-position: 0 -40px; }\n```\n\n### 声明顺序\n相关的属性声明应当归为一组，并按照下面的顺序排列：\n\nPositioning\nBox model\nTypographic\nVisual\n由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因此排在首位。盒模型排在第二位，因为它决定了组件的尺寸和位置。\n其他属性只是影响组件的内部（inside）或者是不影响前两组属性，因此排在后面。\n``` css\n.declaration-order {\n  /* Positioning */\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 100;\n\n  /* Box-model */\n  display: block;\n  float: right;\n  width: 100px;\n  height: 100px;\n\n  /* Typography */\n  font: normal 13px \"Helvetica Neue\", sans-serif;\n  line-height: 1.5;\n  color: #333;\n  text-align: center;\n\n  /* Visual */\n  background-color: #f5f5f5;\n  border: 1px solid #e5e5e5;\n  border-radius: 3px;\n\n  /* Misc */\n  opacity: 1;\n}\n```\n### 不要使用 @import\n与 &lt;link&gt; 标签相比，@import 指令要慢很多，不光增加了额外的请求次数，还会导致不可预料的问题。\n``` css\n<!-- Use link elements -->\n<link rel=\"stylesheet\" href=\"core.css\">\n\n<!-- Avoid @imports -->\n<style>\n  @import url(\"more.css\");\n</style>\n```\n\n\n### 媒体查询（Media query）的位置\n将媒体查询放在尽可能相关规则的附近。不要将他们打包放在一个单一样式文件中或者放在文档底部。如果你把他们分开了，将来只会被大家遗忘。实例如：\n``` css\n.element { ... }\n.element-avatar { ... }\n.element-selected { ... }\n\n@media (min-width: 480px) {\n  .element { ...}\n  .element-avatar { ... }\n  .element-selected { ... }\n}\n```\n### 带前缀的属性\n当使用特定的带有前缀的属性时，通过缩进的方式，让每个属性的值在垂直方向对齐，这样便于多行编辑。\n``` css\n/* Prefixed properties */\n.selector {\n  -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.15);\n          box-shadow: 0 1px 2px rgba(0,0,0,.15);\n}\n```\n### 简写形式的属性声明\n在需要显示地设置所有值的情况下，应当尽量限制使用简写形式的属性声明。常见的滥用简写属性声明的情况如下：\n\npadding\nmargin\nfont\nbackground\nborder\nborder-radius\n大部分情况下，我们不需要为简写形式的属性声明指定所有值。例如，HTML 的 heading 元素只需要设置上、下边距（margin）的值，因此，在必要的时候，只需覆盖这两个值就可以。过度使用简写形式的属性声明会导致代码混乱，并且会对属性值带来不必要的覆盖从而引起意外的副作用。\n``` css\n/* Bad example */\n.element {\n  margin: 0 0 10px;\n  background: red;\n  background: url(\"image.jpg\");\n  border-radius: 3px 3px 0 0;\n}\n\n/* Good example */\n.element {\n  margin-bottom: 10px;\n  background-color: red;\n  background-image: url(\"image.jpg\");\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n}\n```\n### 注释\n代码是由人编写并维护的。请确保你的代码能够自描述、注释良好并且易于他人理解。好的代码注释能够传达上下文关系和代码目的。不要简单地重申组件或 class 名称。\n对于较长的注释，务必书写完整的句子；对于一般性注解，可以书写简洁的短语。\n\n### class 命名\nclass 名称中只能出现小写字符和破折号（不是下划线）。破折号应当用于相关 class 的命名（例如，.btn 和 .btn-danger）。\n避免过度任意的简写。.btn 代表 button，但是 .s 不能表达任何意思。\nclass 名称应当尽可能短，并且意义明确。\n使用有意义的名称。使用有组织的或目的明确的名称，不要使用表现形式（presentational）的名称。\n基于最近的父 class 或基本 class 作为新 class 的前缀。\n``` css\n/* Bad example */\n.t { ... }\n.red { ... }\n.header { ... }\n\n/* Good example */\n.tweet { ... }\n.important { ... }\n.tweet-header { ... }\n```\n### 代码组织\n以组件为单位组织代码段。\n使用一致的空白符将代码分隔成块，这样利于扫描较大的文档。\n如果使用了多个 CSS 文件，将其按照组件而非页面的形式分拆，因为页面会被重组，而组件只会被移动。\n\n\n版权声明：本文为博主制作文章，转载时注明，谢谢。\n","source":"_posts/CSS编码规范.md","raw":"---\ntitle: CSS编码规范\ndate: 2016-3-5 13:09:04\ntags: [CSS]\n---\n### 语法\n用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。\n为选择器分组时，将单独的选择器单独放在一行。\n为了代码的易读性，在每个声明块的左花括号前添加一个空格。\n声明块的右花括号应当单独成行。\n每条声明语句的 : 后应该插入一个空格。\n为了获得更准确的错误报告，每条声明都应该独占一行。\n所有声明语句都应当以分号结尾。最后一条声明语句后面的分号是可选的，但是，如果省略这个分号，你的代码可能更易出错。\n对于以逗号分隔的属性值，每个逗号后面都应该插入一个空格（例如，box-shadow）。\n对于属性值或颜色参数，省略小于 1 的小数前面的 0 （例如，.5 代替 0.5；-.5px 代替 -0.5px）。\n十六进制值应该全部小写，例如，#fff。\n尽量使用简写形式的十六进制值，例如，用 #fff 代替 #ffffff。\n为选择器中的属性添加双引号，例如，input\\[type=\"text\"\\]。\n避免为 0 值指定单位，例如，用 margin: 0; 代替 margin: 0px;\n``` css\n/* Bad */\n.selector, .selector-secondary, .selector[type=text] {\n  padding:15px;\n  margin:0px 0px 15px;\n  background-color:rgba(0, 0, 0, 0.5);\n  box-shadow:0px 1px 2px #CCC,inset 0 1px 0 #FFFFFF\n}\n\n/* Good  */\n.selector,\n.selector-secondary,\n.selector[type=\"text\"] {\n  padding: 15px;\n  margin-bottom: 15px;\n  background-color: rgba(0,0,0,.5);\n  box-shadow: 0 1px 2px #ccc, inset 0 1px 0 #fff;\n}\n```\n<!-- more -->\n\n\n\n### 单行规则声明\n对于只包含一条声明的样式，为了易读性和便于快速编辑，建议将语句放在同一行。对于带有多条声明的样式，还是应当将声明分为多行。\n这样做的关键因素是为了错误检测 \n例如，校验器指出在 183 行有语法错误。如果是单行单条声明，你就不会忽略这个错误；如果是单行多条声明的话，你就要仔细分析避免漏掉错误了。\n``` css\n/* Single declarations on one line */\n.span1 { width: 60px; }\n.span2 { width: 140px; }\n.span3 { width: 220px; }\n\n/* Multiple declarations, one per line */\n.sprite {\n  display: inline-block;\n  width: 16px;\n  height: 15px;\n  background-image: url(../img/sprite.png);\n}\n.icon           { background-position: 0 0; }\n.icon-home      { background-position: 0 -20px; }\n.icon-account   { background-position: 0 -40px; }\n```\n\n### 声明顺序\n相关的属性声明应当归为一组，并按照下面的顺序排列：\n\nPositioning\nBox model\nTypographic\nVisual\n由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因此排在首位。盒模型排在第二位，因为它决定了组件的尺寸和位置。\n其他属性只是影响组件的内部（inside）或者是不影响前两组属性，因此排在后面。\n``` css\n.declaration-order {\n  /* Positioning */\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 100;\n\n  /* Box-model */\n  display: block;\n  float: right;\n  width: 100px;\n  height: 100px;\n\n  /* Typography */\n  font: normal 13px \"Helvetica Neue\", sans-serif;\n  line-height: 1.5;\n  color: #333;\n  text-align: center;\n\n  /* Visual */\n  background-color: #f5f5f5;\n  border: 1px solid #e5e5e5;\n  border-radius: 3px;\n\n  /* Misc */\n  opacity: 1;\n}\n```\n### 不要使用 @import\n与 &lt;link&gt; 标签相比，@import 指令要慢很多，不光增加了额外的请求次数，还会导致不可预料的问题。\n``` css\n<!-- Use link elements -->\n<link rel=\"stylesheet\" href=\"core.css\">\n\n<!-- Avoid @imports -->\n<style>\n  @import url(\"more.css\");\n</style>\n```\n\n\n### 媒体查询（Media query）的位置\n将媒体查询放在尽可能相关规则的附近。不要将他们打包放在一个单一样式文件中或者放在文档底部。如果你把他们分开了，将来只会被大家遗忘。实例如：\n``` css\n.element { ... }\n.element-avatar { ... }\n.element-selected { ... }\n\n@media (min-width: 480px) {\n  .element { ...}\n  .element-avatar { ... }\n  .element-selected { ... }\n}\n```\n### 带前缀的属性\n当使用特定的带有前缀的属性时，通过缩进的方式，让每个属性的值在垂直方向对齐，这样便于多行编辑。\n``` css\n/* Prefixed properties */\n.selector {\n  -webkit-box-shadow: 0 1px 2px rgba(0,0,0,.15);\n          box-shadow: 0 1px 2px rgba(0,0,0,.15);\n}\n```\n### 简写形式的属性声明\n在需要显示地设置所有值的情况下，应当尽量限制使用简写形式的属性声明。常见的滥用简写属性声明的情况如下：\n\npadding\nmargin\nfont\nbackground\nborder\nborder-radius\n大部分情况下，我们不需要为简写形式的属性声明指定所有值。例如，HTML 的 heading 元素只需要设置上、下边距（margin）的值，因此，在必要的时候，只需覆盖这两个值就可以。过度使用简写形式的属性声明会导致代码混乱，并且会对属性值带来不必要的覆盖从而引起意外的副作用。\n``` css\n/* Bad example */\n.element {\n  margin: 0 0 10px;\n  background: red;\n  background: url(\"image.jpg\");\n  border-radius: 3px 3px 0 0;\n}\n\n/* Good example */\n.element {\n  margin-bottom: 10px;\n  background-color: red;\n  background-image: url(\"image.jpg\");\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n}\n```\n### 注释\n代码是由人编写并维护的。请确保你的代码能够自描述、注释良好并且易于他人理解。好的代码注释能够传达上下文关系和代码目的。不要简单地重申组件或 class 名称。\n对于较长的注释，务必书写完整的句子；对于一般性注解，可以书写简洁的短语。\n\n### class 命名\nclass 名称中只能出现小写字符和破折号（不是下划线）。破折号应当用于相关 class 的命名（例如，.btn 和 .btn-danger）。\n避免过度任意的简写。.btn 代表 button，但是 .s 不能表达任何意思。\nclass 名称应当尽可能短，并且意义明确。\n使用有意义的名称。使用有组织的或目的明确的名称，不要使用表现形式（presentational）的名称。\n基于最近的父 class 或基本 class 作为新 class 的前缀。\n``` css\n/* Bad example */\n.t { ... }\n.red { ... }\n.header { ... }\n\n/* Good example */\n.tweet { ... }\n.important { ... }\n.tweet-header { ... }\n```\n### 代码组织\n以组件为单位组织代码段。\n使用一致的空白符将代码分隔成块，这样利于扫描较大的文档。\n如果使用了多个 CSS 文件，将其按照组件而非页面的形式分拆，因为页面会被重组，而组件只会被移动。\n\n\n版权声明：本文为博主制作文章，转载时注明，谢谢。\n","slug":"CSS编码规范","published":1,"updated":"2018-05-02T14:23:06.492Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g5u0002v4nbkpln2n9w","content":"<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。<br>为选择器分组时，将单独的选择器单独放在一行。<br>为了代码的易读性，在每个声明块的左花括号前添加一个空格。<br>声明块的右花括号应当单独成行。<br>每条声明语句的 : 后应该插入一个空格。<br>为了获得更准确的错误报告，每条声明都应该独占一行。<br>所有声明语句都应当以分号结尾。最后一条声明语句后面的分号是可选的，但是，如果省略这个分号，你的代码可能更易出错。<br>对于以逗号分隔的属性值，每个逗号后面都应该插入一个空格（例如，box-shadow）。<br>对于属性值或颜色参数，省略小于 1 的小数前面的 0 （例如，.5 代替 0.5；-.5px 代替 -0.5px）。<br>十六进制值应该全部小写，例如，#fff。<br>尽量使用简写形式的十六进制值，例如，用 #fff 代替 #ffffff。<br>为选择器中的属性添加双引号，例如，input[type=”text”]。<br>避免为 0 值指定单位，例如，用 margin: 0; 代替 margin: 0px;<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.selector</span>, <span class=\"selector-class\">.selector-secondary</span>, <span class=\"selector-class\">.selector</span><span class=\"selector-attr\">[type=text]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>:<span class=\"built_in\">rgba</span>(0, 0, 0, 0.5);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>:<span class=\"number\">0px</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"number\">#CCC</span>,inset <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">0</span> <span class=\"number\">#FFFFFF</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Good  */</span></span><br><span class=\"line\"><span class=\"selector-class\">.selector</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.selector-secondary</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.selector</span><span class=\"selector-attr\">[type=\"text\"]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0,0,0,.5);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"number\">#ccc</span>, inset <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">0</span> <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h3 id=\"单行规则声明\"><a href=\"#单行规则声明\" class=\"headerlink\" title=\"单行规则声明\"></a>单行规则声明</h3><p>对于只包含一条声明的样式，为了易读性和便于快速编辑，建议将语句放在同一行。对于带有多条声明的样式，还是应当将声明分为多行。<br>这样做的关键因素是为了错误检测<br>例如，校验器指出在 183 行有语法错误。如果是单行单条声明，你就不会忽略这个错误；如果是单行多条声明的话，你就要仔细分析避免漏掉错误了。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Single declarations on one line */</span></span><br><span class=\"line\"><span class=\"selector-class\">.span1</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.span2</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">140px</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.span3</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">220px</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Multiple declarations, one per line */</span></span><br><span class=\"line\"><span class=\"selector-class\">.sprite</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(../img/sprite.png);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon</span>           &#123; <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon-home</span>      &#123; <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> -<span class=\"number\">20px</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon-account</span>   &#123; <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> -<span class=\"number\">40px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"声明顺序\"><a href=\"#声明顺序\" class=\"headerlink\" title=\"声明顺序\"></a>声明顺序</h3><p>相关的属性声明应当归为一组，并按照下面的顺序排列：</p>\n<p>Positioning<br>Box model<br>Typographic<br>Visual<br>由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因此排在首位。盒模型排在第二位，因为它决定了组件的尺寸和位置。<br>其他属性只是影响组件的内部（inside）或者是不影响前两组属性，因此排在后面。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.declaration-order</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* Positioning */</span></span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Box-model */</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Typography */</span></span><br><span class=\"line\">  <span class=\"attribute\">font</span>: normal <span class=\"number\">13px</span> <span class=\"string\">\"Helvetica Neue\"</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Visual */</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f5f5f5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#e5e5e5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Misc */</span></span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"不要使用-import\"><a href=\"#不要使用-import\" class=\"headerlink\" title=\"不要使用 @import\"></a>不要使用 @import</h3><p>与 &lt;link&gt; 标签相比，@import 指令要慢很多，不光增加了额外的请求次数，还会导致不可预料的问题。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!<span class=\"selector-tag\">--</span> <span class=\"selector-tag\">Use</span> <span class=\"selector-tag\">link</span> <span class=\"selector-tag\">elements</span> <span class=\"selector-tag\">--</span>&gt;</span><br><span class=\"line\">&lt;link rel=\"stylesheet\" href=\"core.css\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!<span class=\"selector-tag\">--</span> <span class=\"selector-tag\">Avoid</span> @<span class=\"keyword\">imports</span> --&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  @import url(<span class=\"string\">\"more.css\"</span>);</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"媒体查询（Media-query）的位置\"><a href=\"#媒体查询（Media-query）的位置\" class=\"headerlink\" title=\"媒体查询（Media query）的位置\"></a>媒体查询（Media query）的位置</h3><p>将媒体查询放在尽可能相关规则的附近。不要将他们打包放在一个单一样式文件中或者放在文档底部。如果你把他们分开了，将来只会被大家遗忘。实例如：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.element &#123; ... &#125;</span><br><span class=\"line\">.element-avatar &#123; ... &#125;</span><br><span class=\"line\">.element-selected &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">media</span> (min-width: <span class=\"number\">480px</span>) &#123;</span><br><span class=\"line\">  .element &#123; ...&#125;</span><br><span class=\"line\">  .element-avatar &#123; ... &#125;</span><br><span class=\"line\">  .element-selected &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"带前缀的属性\"><a href=\"#带前缀的属性\" class=\"headerlink\" title=\"带前缀的属性\"></a>带前缀的属性</h3><p>当使用特定的带有前缀的属性时，通过缩进的方式，让每个属性的值在垂直方向对齐，这样便于多行编辑。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Prefixed properties */</span></span><br><span class=\"line\"><span class=\"selector-class\">.selector</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(0,0,0,.15);</span><br><span class=\"line\">          <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(0,0,0,.15);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"简写形式的属性声明\"><a href=\"#简写形式的属性声明\" class=\"headerlink\" title=\"简写形式的属性声明\"></a>简写形式的属性声明</h3><p>在需要显示地设置所有值的情况下，应当尽量限制使用简写形式的属性声明。常见的滥用简写属性声明的情况如下：</p>\n<p>padding<br>margin<br>font<br>background<br>border<br>border-radius<br>大部分情况下，我们不需要为简写形式的属性声明指定所有值。例如，HTML 的 heading 元素只需要设置上、下边距（margin）的值，因此，在必要的时候，只需覆盖这两个值就可以。过度使用简写形式的属性声明会导致代码混乱，并且会对属性值带来不必要的覆盖从而引起意外的副作用。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Bad example */</span></span><br><span class=\"line\"><span class=\"selector-class\">.element</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"image.jpg\"</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Good example */</span></span><br><span class=\"line\"><span class=\"selector-class\">.element</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"image.jpg\"</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-top-left-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top-right-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>代码是由人编写并维护的。请确保你的代码能够自描述、注释良好并且易于他人理解。好的代码注释能够传达上下文关系和代码目的。不要简单地重申组件或 class 名称。<br>对于较长的注释，务必书写完整的句子；对于一般性注解，可以书写简洁的短语。</p>\n<h3 id=\"class-命名\"><a href=\"#class-命名\" class=\"headerlink\" title=\"class 命名\"></a>class 命名</h3><p>class 名称中只能出现小写字符和破折号（不是下划线）。破折号应当用于相关 class 的命名（例如，.btn 和 .btn-danger）。<br>避免过度任意的简写。.btn 代表 button，但是 .s 不能表达任何意思。<br>class 名称应当尽可能短，并且意义明确。<br>使用有意义的名称。使用有组织的或目的明确的名称，不要使用表现形式（presentational）的名称。<br>基于最近的父 class 或基本 class 作为新 class 的前缀。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Bad example */</span></span><br><span class=\"line\">.t &#123; ... &#125;</span><br><span class=\"line\">.red &#123; ... &#125;</span><br><span class=\"line\">.header &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Good example */</span></span><br><span class=\"line\">.tweet &#123; ... &#125;</span><br><span class=\"line\">.important &#123; ... &#125;</span><br><span class=\"line\">.tweet-header &#123; ... &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"代码组织\"><a href=\"#代码组织\" class=\"headerlink\" title=\"代码组织\"></a>代码组织</h3><p>以组件为单位组织代码段。<br>使用一致的空白符将代码分隔成块，这样利于扫描较大的文档。<br>如果使用了多个 CSS 文件，将其按照组件而非页面的形式分拆，因为页面会被重组，而组件只会被移动。</p>\n<p>版权声明：本文为博主制作文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。<br>为选择器分组时，将单独的选择器单独放在一行。<br>为了代码的易读性，在每个声明块的左花括号前添加一个空格。<br>声明块的右花括号应当单独成行。<br>每条声明语句的 : 后应该插入一个空格。<br>为了获得更准确的错误报告，每条声明都应该独占一行。<br>所有声明语句都应当以分号结尾。最后一条声明语句后面的分号是可选的，但是，如果省略这个分号，你的代码可能更易出错。<br>对于以逗号分隔的属性值，每个逗号后面都应该插入一个空格（例如，box-shadow）。<br>对于属性值或颜色参数，省略小于 1 的小数前面的 0 （例如，.5 代替 0.5；-.5px 代替 -0.5px）。<br>十六进制值应该全部小写，例如，#fff。<br>尽量使用简写形式的十六进制值，例如，用 #fff 代替 #ffffff。<br>为选择器中的属性添加双引号，例如，input[type=”text”]。<br>避免为 0 值指定单位，例如，用 margin: 0; 代替 margin: 0px;<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Bad */</span></span><br><span class=\"line\"><span class=\"selector-class\">.selector</span>, <span class=\"selector-class\">.selector-secondary</span>, <span class=\"selector-class\">.selector</span><span class=\"selector-attr\">[type=text]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>:<span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">0px</span> <span class=\"number\">0px</span> <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>:<span class=\"built_in\">rgba</span>(0, 0, 0, 0.5);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>:<span class=\"number\">0px</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"number\">#CCC</span>,inset <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">0</span> <span class=\"number\">#FFFFFF</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Good  */</span></span><br><span class=\"line\"><span class=\"selector-class\">.selector</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.selector-secondary</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.selector</span><span class=\"selector-attr\">[type=\"text\"]</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">padding</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(0,0,0,.5);</span><br><span class=\"line\">  <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"number\">#ccc</span>, inset <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">0</span> <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<h3 id=\"单行规则声明\"><a href=\"#单行规则声明\" class=\"headerlink\" title=\"单行规则声明\"></a>单行规则声明</h3><p>对于只包含一条声明的样式，为了易读性和便于快速编辑，建议将语句放在同一行。对于带有多条声明的样式，还是应当将声明分为多行。<br>这样做的关键因素是为了错误检测<br>例如，校验器指出在 183 行有语法错误。如果是单行单条声明，你就不会忽略这个错误；如果是单行多条声明的话，你就要仔细分析避免漏掉错误了。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Single declarations on one line */</span></span><br><span class=\"line\"><span class=\"selector-class\">.span1</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">60px</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.span2</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">140px</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.span3</span> &#123; <span class=\"attribute\">width</span>: <span class=\"number\">220px</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Multiple declarations, one per line */</span></span><br><span class=\"line\"><span class=\"selector-class\">.sprite</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">16px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(../img/sprite.png);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon</span>           &#123; <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon-home</span>      &#123; <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> -<span class=\"number\">20px</span>; &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.icon-account</span>   &#123; <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> -<span class=\"number\">40px</span>; &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"声明顺序\"><a href=\"#声明顺序\" class=\"headerlink\" title=\"声明顺序\"></a>声明顺序</h3><p>相关的属性声明应当归为一组，并按照下面的顺序排列：</p>\n<p>Positioning<br>Box model<br>Typographic<br>Visual<br>由于定位（positioning）可以从正常的文档流中移除元素，并且还能覆盖盒模型（box model）相关的样式，因此排在首位。盒模型排在第二位，因为它决定了组件的尺寸和位置。<br>其他属性只是影响组件的内部（inside）或者是不影响前两组属性，因此排在后面。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.declaration-order</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* Positioning */</span></span><br><span class=\"line\">  <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">  <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">bottom</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"attribute\">z-index</span>: <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Box-model */</span></span><br><span class=\"line\">  <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">  <span class=\"attribute\">float</span>: right;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Typography */</span></span><br><span class=\"line\">  <span class=\"attribute\">font</span>: normal <span class=\"number\">13px</span> <span class=\"string\">\"Helvetica Neue\"</span>, sans-serif;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">1.5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Visual */</span></span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#f5f5f5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#e5e5e5</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* Misc */</span></span><br><span class=\"line\">  <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"不要使用-import\"><a href=\"#不要使用-import\" class=\"headerlink\" title=\"不要使用 @import\"></a>不要使用 @import</h3><p>与 &lt;link&gt; 标签相比，@import 指令要慢很多，不光增加了额外的请求次数，还会导致不可预料的问题。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!<span class=\"selector-tag\">--</span> <span class=\"selector-tag\">Use</span> <span class=\"selector-tag\">link</span> <span class=\"selector-tag\">elements</span> <span class=\"selector-tag\">--</span>&gt;</span><br><span class=\"line\">&lt;link rel=\"stylesheet\" href=\"core.css\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!<span class=\"selector-tag\">--</span> <span class=\"selector-tag\">Avoid</span> @<span class=\"keyword\">imports</span> --&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">  @import url(<span class=\"string\">\"more.css\"</span>);</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"媒体查询（Media-query）的位置\"><a href=\"#媒体查询（Media-query）的位置\" class=\"headerlink\" title=\"媒体查询（Media query）的位置\"></a>媒体查询（Media query）的位置</h3><p>将媒体查询放在尽可能相关规则的附近。不要将他们打包放在一个单一样式文件中或者放在文档底部。如果你把他们分开了，将来只会被大家遗忘。实例如：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.element &#123; ... &#125;</span><br><span class=\"line\">.element-avatar &#123; ... &#125;</span><br><span class=\"line\">.element-selected &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@<span class=\"keyword\">media</span> (min-width: <span class=\"number\">480px</span>) &#123;</span><br><span class=\"line\">  .element &#123; ...&#125;</span><br><span class=\"line\">  .element-avatar &#123; ... &#125;</span><br><span class=\"line\">  .element-selected &#123; ... &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"带前缀的属性\"><a href=\"#带前缀的属性\" class=\"headerlink\" title=\"带前缀的属性\"></a>带前缀的属性</h3><p>当使用特定的带有前缀的属性时，通过缩进的方式，让每个属性的值在垂直方向对齐，这样便于多行编辑。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Prefixed properties */</span></span><br><span class=\"line\"><span class=\"selector-class\">.selector</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">-webkit-box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(0,0,0,.15);</span><br><span class=\"line\">          <span class=\"attribute\">box-shadow</span>: <span class=\"number\">0</span> <span class=\"number\">1px</span> <span class=\"number\">2px</span> <span class=\"built_in\">rgba</span>(0,0,0,.15);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"简写形式的属性声明\"><a href=\"#简写形式的属性声明\" class=\"headerlink\" title=\"简写形式的属性声明\"></a>简写形式的属性声明</h3><p>在需要显示地设置所有值的情况下，应当尽量限制使用简写形式的属性声明。常见的滥用简写属性声明的情况如下：</p>\n<p>padding<br>margin<br>font<br>background<br>border<br>border-radius<br>大部分情况下，我们不需要为简写形式的属性声明指定所有值。例如，HTML 的 heading 元素只需要设置上、下边距（margin）的值，因此，在必要的时候，只需覆盖这两个值就可以。过度使用简写形式的属性声明会导致代码混乱，并且会对属性值带来不必要的覆盖从而引起意外的副作用。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Bad example */</span></span><br><span class=\"line\"><span class=\"selector-class\">.element</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"image.jpg\"</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">3px</span> <span class=\"number\">3px</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Good example */</span></span><br><span class=\"line\"><span class=\"selector-class\">.element</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">\"image.jpg\"</span>);</span><br><span class=\"line\">  <span class=\"attribute\">border-top-left-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-top-right-radius</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h3><p>代码是由人编写并维护的。请确保你的代码能够自描述、注释良好并且易于他人理解。好的代码注释能够传达上下文关系和代码目的。不要简单地重申组件或 class 名称。<br>对于较长的注释，务必书写完整的句子；对于一般性注解，可以书写简洁的短语。</p>\n<h3 id=\"class-命名\"><a href=\"#class-命名\" class=\"headerlink\" title=\"class 命名\"></a>class 命名</h3><p>class 名称中只能出现小写字符和破折号（不是下划线）。破折号应当用于相关 class 的命名（例如，.btn 和 .btn-danger）。<br>避免过度任意的简写。.btn 代表 button，但是 .s 不能表达任何意思。<br>class 名称应当尽可能短，并且意义明确。<br>使用有意义的名称。使用有组织的或目的明确的名称，不要使用表现形式（presentational）的名称。<br>基于最近的父 class 或基本 class 作为新 class 的前缀。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Bad example */</span></span><br><span class=\"line\">.t &#123; ... &#125;</span><br><span class=\"line\">.red &#123; ... &#125;</span><br><span class=\"line\">.header &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Good example */</span></span><br><span class=\"line\">.tweet &#123; ... &#125;</span><br><span class=\"line\">.important &#123; ... &#125;</span><br><span class=\"line\">.tweet-header &#123; ... &#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"代码组织\"><a href=\"#代码组织\" class=\"headerlink\" title=\"代码组织\"></a>代码组织</h3><p>以组件为单位组织代码段。<br>使用一致的空白符将代码分隔成块，这样利于扫描较大的文档。<br>如果使用了多个 CSS 文件，将其按照组件而非页面的形式分拆，因为页面会被重组，而组件只会被移动。</p>\n<p>版权声明：本文为博主制作文章，转载时注明，谢谢。</p>"},{"title":"HTML编码规范","date":"2016-03-06T05:09:04.000Z","_content":"\n### 语法\n用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。\n嵌套元素应当缩进一次（即两个空格）。\n对于属性的定义，确保全部使用双引号，绝不要使用单引号。\n不要在自闭合（self-closing）元素的尾部添加斜线 HTML5 规范中明确说明这是可选的。\n不要省略可选的结束标签（closing tag）（例如，&lt;/li&gt; 或 &lt;/body&gt;）。\n去除不必要的空格（例如：&lt;/Test&gt;）\n``` html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Page title</title>\n</head>\n<body>\n    <img src=\"images/logo.png\" alt=\"Company\">\n    <h1 class=\"hello-world\">Hello, world!</h1>\n</body>\n</html>\n```\n<!-- more -->\n### HTML5 doctype\n为每个 HTML 页面的第一行添加标准模式（standard mode）的声明，这样能够确保在每个浏览器中拥有一致的展现。\n``` html\n<!DOCTYPE html>\n<html>\n  <head>\n  </head>\n</html>\n``` \n\n### 语言属性\n根据 HTML5 规范：强烈建议为 html 根元素指定 lang 属性，从而为文档设置正确的语言。\n这将有助于语音合成工具确定其所应该采用的发音，有助于翻译工具确定其翻译时所应遵守的规则等等。(盲人浏览器了解一下...)\n\n\n``` html\n<html lang=\"zh-CN\">\n  <!-- ... -->\n</html>\n``` \n### IE 兼容模式\nIE 支持通过特定的 &lt;meta&gt; 标签来确定绘制当前页面所应该采用的 IE 版本。除非有强烈的特殊需求，否则最好是设置为 edge mode，从而通知 IE 采用其所支持的最新的模式。\n``` html\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n``` \n\n### 字符编码\n通过明确声明字符编码，能够确保浏览器快速并容易的判断页面内容的渲染方式。这样做的好处是，可以避免在 HTML 中使用字符实体标记（character entity），从而全部与文档编码一致（一般采用 UTF-8 编码）。\n``` html\n<head>\n  <meta charset=\"UTF-8\">\n</head>\n``` \n### 引入 CSS 和 JavaScript 文件\n根据 HTML5 规范，在引入 CSS 和 JavaScript 文件时一般不需要指定 type 属性，因为 text/css 和 text/javascript 分别是它们的默认值。\n``` html\n<!-- External CSS -->\n<link rel=\"stylesheet\" href=\"code-guide.css\">\n\n<!-- In-document CSS -->\n<style>\n  /* ... */\n</style>\n<!-- JavaScript -->\n<script src=\"code-guide.js\"></script>\n``` \n\n### 属性顺序\nHTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。\nclass\nid, name\ndata- &#42; \nsrc, for, type, href\ntitle, alt\naria-&#42;, role\nclass 用于标识高度可复用组件，因此应该排在首位。id 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。\n\n\n``` html\n<a class=\"...\" id=\"...\" data-modal=\"toggle\" href=\"#\">\n  Example link\n</a>\n\n<input class=\"form-control\" type=\"text\">\n\n<img src=\"...\" alt=\"...\">\n``` \n### 减少标签的数量\n编写 HTML 代码时，尽量避免多余的父元素。请看下面的案例：\n``` html\n<!-- Bad -->\n<span class=\"avatar\">\n  <img src=\"...\">\n</span>\n\n<!-- Good -->\n<img class=\"avatar\" src=\"...\">\n``` \n\n\n### JavaScript 生成的标签\n通过 JavaScript 生成的标签让内容变得不易查找、编辑，并且降低性能。能避免时尽量避免。\n\n\n版权声明：本文为博主制作文章，转载时注明，谢谢。","source":"_posts/HTML编码规范.md","raw":"---\ntitle: HTML编码规范\ndate: 2016-3-6 13:09:04\ntags: [HTML]\n---\n\n### 语法\n用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。\n嵌套元素应当缩进一次（即两个空格）。\n对于属性的定义，确保全部使用双引号，绝不要使用单引号。\n不要在自闭合（self-closing）元素的尾部添加斜线 HTML5 规范中明确说明这是可选的。\n不要省略可选的结束标签（closing tag）（例如，&lt;/li&gt; 或 &lt;/body&gt;）。\n去除不必要的空格（例如：&lt;/Test&gt;）\n``` html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Page title</title>\n</head>\n<body>\n    <img src=\"images/logo.png\" alt=\"Company\">\n    <h1 class=\"hello-world\">Hello, world!</h1>\n</body>\n</html>\n```\n<!-- more -->\n### HTML5 doctype\n为每个 HTML 页面的第一行添加标准模式（standard mode）的声明，这样能够确保在每个浏览器中拥有一致的展现。\n``` html\n<!DOCTYPE html>\n<html>\n  <head>\n  </head>\n</html>\n``` \n\n### 语言属性\n根据 HTML5 规范：强烈建议为 html 根元素指定 lang 属性，从而为文档设置正确的语言。\n这将有助于语音合成工具确定其所应该采用的发音，有助于翻译工具确定其翻译时所应遵守的规则等等。(盲人浏览器了解一下...)\n\n\n``` html\n<html lang=\"zh-CN\">\n  <!-- ... -->\n</html>\n``` \n### IE 兼容模式\nIE 支持通过特定的 &lt;meta&gt; 标签来确定绘制当前页面所应该采用的 IE 版本。除非有强烈的特殊需求，否则最好是设置为 edge mode，从而通知 IE 采用其所支持的最新的模式。\n``` html\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=Edge\">\n``` \n\n### 字符编码\n通过明确声明字符编码，能够确保浏览器快速并容易的判断页面内容的渲染方式。这样做的好处是，可以避免在 HTML 中使用字符实体标记（character entity），从而全部与文档编码一致（一般采用 UTF-8 编码）。\n``` html\n<head>\n  <meta charset=\"UTF-8\">\n</head>\n``` \n### 引入 CSS 和 JavaScript 文件\n根据 HTML5 规范，在引入 CSS 和 JavaScript 文件时一般不需要指定 type 属性，因为 text/css 和 text/javascript 分别是它们的默认值。\n``` html\n<!-- External CSS -->\n<link rel=\"stylesheet\" href=\"code-guide.css\">\n\n<!-- In-document CSS -->\n<style>\n  /* ... */\n</style>\n<!-- JavaScript -->\n<script src=\"code-guide.js\"></script>\n``` \n\n### 属性顺序\nHTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。\nclass\nid, name\ndata- &#42; \nsrc, for, type, href\ntitle, alt\naria-&#42;, role\nclass 用于标识高度可复用组件，因此应该排在首位。id 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。\n\n\n``` html\n<a class=\"...\" id=\"...\" data-modal=\"toggle\" href=\"#\">\n  Example link\n</a>\n\n<input class=\"form-control\" type=\"text\">\n\n<img src=\"...\" alt=\"...\">\n``` \n### 减少标签的数量\n编写 HTML 代码时，尽量避免多余的父元素。请看下面的案例：\n``` html\n<!-- Bad -->\n<span class=\"avatar\">\n  <img src=\"...\">\n</span>\n\n<!-- Good -->\n<img class=\"avatar\" src=\"...\">\n``` \n\n\n### JavaScript 生成的标签\n通过 JavaScript 生成的标签让内容变得不易查找、编辑，并且降低性能。能避免时尽量避免。\n\n\n版权声明：本文为博主制作文章，转载时注明，谢谢。","slug":"HTML编码规范","published":1,"updated":"2018-05-02T13:59:45.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g660004v4nbhtlw2bc6","content":"<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。<br>嵌套元素应当缩进一次（即两个空格）。<br>对于属性的定义，确保全部使用双引号，绝不要使用单引号。<br>不要在自闭合（self-closing）元素的尾部添加斜线 HTML5 规范中明确说明这是可选的。<br>不要省略可选的结束标签（closing tag）（例如，&lt;/li&gt; 或 &lt;/body&gt;）。<br>去除不必要的空格（例如：&lt;/Test&gt;）<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Page title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"images/logo.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Company\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello-world\"</span>&gt;</span>Hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h3 id=\"HTML5-doctype\"><a href=\"#HTML5-doctype\" class=\"headerlink\" title=\"HTML5 doctype\"></a>HTML5 doctype</h3><p>为每个 HTML 页面的第一行添加标准模式（standard mode）的声明，这样能够确保在每个浏览器中拥有一致的展现。</p>\n<pre><code class=\"html\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>\n  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span>\n</code></pre>\n<h3 id=\"语言属性\"><a href=\"#语言属性\" class=\"headerlink\" title=\"语言属性\"></a>语言属性</h3><p>根据 HTML5 规范：强烈建议为 html 根元素指定 lang 属性，从而为文档设置正确的语言。<br>这将有助于语音合成工具确定其所应该采用的发音，有助于翻译工具确定其翻译时所应遵守的规则等等。(盲人浏览器了解一下…)</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span>\n  <span class=\"comment\">&lt;!-- ... --&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span>\n</code></pre>\n<h3 id=\"IE-兼容模式\"><a href=\"#IE-兼容模式\" class=\"headerlink\" title=\"IE 兼容模式\"></a>IE 兼容模式</h3><p>IE 支持通过特定的 &lt;meta&gt; 标签来确定绘制当前页面所应该采用的 IE 版本。除非有强烈的特殊需求，否则最好是设置为 edge mode，从而通知 IE 采用其所支持的最新的模式。</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=Edge\"</span>&gt;</span>\n</code></pre>\n<h3 id=\"字符编码\"><a href=\"#字符编码\" class=\"headerlink\" title=\"字符编码\"></a>字符编码</h3><p>通过明确声明字符编码，能够确保浏览器快速并容易的判断页面内容的渲染方式。这样做的好处是，可以避免在 HTML 中使用字符实体标记（character entity），从而全部与文档编码一致（一般采用 UTF-8 编码）。</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span>\n</code></pre>\n<h3 id=\"引入-CSS-和-JavaScript-文件\"><a href=\"#引入-CSS-和-JavaScript-文件\" class=\"headerlink\" title=\"引入 CSS 和 JavaScript 文件\"></a>引入 CSS 和 JavaScript 文件</h3><p>根据 HTML5 规范，在引入 CSS 和 JavaScript 文件时一般不需要指定 type 属性，因为 text/css 和 text/javascript 分别是它们的默认值。</p>\n<pre><code class=\"html\"><span class=\"comment\">&lt;!-- External CSS --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"code-guide.css\"</span>&gt;</span>\n\n<span class=\"comment\">&lt;!-- In-document CSS --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span>\n<span class=\"css\">  <span class=\"comment\">/* ... */</span></span>\n<span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\n<span class=\"comment\">&lt;!-- JavaScript --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"code-guide.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\n</code></pre>\n<h3 id=\"属性顺序\"><a href=\"#属性顺序\" class=\"headerlink\" title=\"属性顺序\"></a>属性顺序</h3><p>HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。<br>class<br>id, name<br>data- &#42;<br>src, for, type, href<br>title, alt<br>aria-&#42;, role<br>class 用于标识高度可复用组件，因此应该排在首位。id 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">data-modal</span>=<span class=\"string\">\"toggle\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>\n  Example link\n<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>\n\n<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span>\n\n<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"...\"</span>&gt;</span>\n</code></pre>\n<h3 id=\"减少标签的数量\"><a href=\"#减少标签的数量\" class=\"headerlink\" title=\"减少标签的数量\"></a>减少标签的数量</h3><p>编写 HTML 代码时，尽量避免多余的父元素。请看下面的案例：</p>\n<pre><code class=\"html\"><span class=\"comment\">&lt;!-- Bad --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"avatar\"</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>\n\n<span class=\"comment\">&lt;!-- Good --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"avatar\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span>&gt;</span>\n</code></pre>\n<h3 id=\"JavaScript-生成的标签\"><a href=\"#JavaScript-生成的标签\" class=\"headerlink\" title=\"JavaScript 生成的标签\"></a>JavaScript 生成的标签</h3><p>通过 JavaScript 生成的标签让内容变得不易查找、编辑，并且降低性能。能避免时尽量避免。</p>\n<p>版权声明：本文为博主制作文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h3><p>用两个空格来代替tab  这是唯一能保证在所有环境下获得一致展现的方法。<br>嵌套元素应当缩进一次（即两个空格）。<br>对于属性的定义，确保全部使用双引号，绝不要使用单引号。<br>不要在自闭合（self-closing）元素的尾部添加斜线 HTML5 规范中明确说明这是可选的。<br>不要省略可选的结束标签（closing tag）（例如，&lt;/li&gt; 或 &lt;/body&gt;）。<br>去除不必要的空格（例如：&lt;/Test&gt;）<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Page title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"images/logo.png\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Company\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"hello-world\"</span>&gt;</span>Hello, world!<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>","more":"<h3 id=\"HTML5-doctype\"><a href=\"#HTML5-doctype\" class=\"headerlink\" title=\"HTML5 doctype\"></a>HTML5 doctype</h3><p>为每个 HTML 页面的第一行添加标准模式（standard mode）的声明，这样能够确保在每个浏览器中拥有一致的展现。</p>\n<pre><code class=\"html\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>\n  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span>\n</code></pre>\n<h3 id=\"语言属性\"><a href=\"#语言属性\" class=\"headerlink\" title=\"语言属性\"></a>语言属性</h3><p>根据 HTML5 规范：强烈建议为 html 根元素指定 lang 属性，从而为文档设置正确的语言。<br>这将有助于语音合成工具确定其所应该采用的发音，有助于翻译工具确定其翻译时所应遵守的规则等等。(盲人浏览器了解一下…)</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"zh-CN\"</span>&gt;</span>\n  <span class=\"comment\">&lt;!-- ... --&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span>\n</code></pre>\n<h3 id=\"IE-兼容模式\"><a href=\"#IE-兼容模式\" class=\"headerlink\" title=\"IE 兼容模式\"></a>IE 兼容模式</h3><p>IE 支持通过特定的 &lt;meta&gt; 标签来确定绘制当前页面所应该采用的 IE 版本。除非有强烈的特殊需求，否则最好是设置为 edge mode，从而通知 IE 采用其所支持的最新的模式。</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=Edge\"</span>&gt;</span>\n</code></pre>\n<h3 id=\"字符编码\"><a href=\"#字符编码\" class=\"headerlink\" title=\"字符编码\"></a>字符编码</h3><p>通过明确声明字符编码，能够确保浏览器快速并容易的判断页面内容的渲染方式。这样做的好处是，可以避免在 HTML 中使用字符实体标记（character entity），从而全部与文档编码一致（一般采用 UTF-8 编码）。</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span>\n</code></pre>\n<h3 id=\"引入-CSS-和-JavaScript-文件\"><a href=\"#引入-CSS-和-JavaScript-文件\" class=\"headerlink\" title=\"引入 CSS 和 JavaScript 文件\"></a>引入 CSS 和 JavaScript 文件</h3><p>根据 HTML5 规范，在引入 CSS 和 JavaScript 文件时一般不需要指定 type 属性，因为 text/css 和 text/javascript 分别是它们的默认值。</p>\n<pre><code class=\"html\"><span class=\"comment\">&lt;!-- External CSS --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"code-guide.css\"</span>&gt;</span>\n\n<span class=\"comment\">&lt;!-- In-document CSS --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span>\n<span class=\"css\">  <span class=\"comment\">/* ... */</span></span>\n<span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span>\n<span class=\"comment\">&lt;!-- JavaScript --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"code-guide.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span>\n</code></pre>\n<h3 id=\"属性顺序\"><a href=\"#属性顺序\" class=\"headerlink\" title=\"属性顺序\"></a>属性顺序</h3><p>HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。<br>class<br>id, name<br>data- &#42;<br>src, for, type, href<br>title, alt<br>aria-&#42;, role<br>class 用于标识高度可复用组件，因此应该排在首位。id 用于标识具体组件，应当谨慎使用（例如，页面内的书签），因此排在第二位。</p>\n<pre><code class=\"html\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">data-modal</span>=<span class=\"string\">\"toggle\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>\n  Example link\n<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span>\n\n<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">class</span>=<span class=\"string\">\"form-control\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span>&gt;</span>\n\n<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"...\"</span>&gt;</span>\n</code></pre>\n<h3 id=\"减少标签的数量\"><a href=\"#减少标签的数量\" class=\"headerlink\" title=\"减少标签的数量\"></a>减少标签的数量</h3><p>编写 HTML 代码时，尽量避免多余的父元素。请看下面的案例：</p>\n<pre><code class=\"html\"><span class=\"comment\">&lt;!-- Bad --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">\"avatar\"</span>&gt;</span>\n  <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>\n\n<span class=\"comment\">&lt;!-- Good --&gt;</span>\n<span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">\"avatar\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"...\"</span>&gt;</span>\n</code></pre>\n<h3 id=\"JavaScript-生成的标签\"><a href=\"#JavaScript-生成的标签\" class=\"headerlink\" title=\"JavaScript 生成的标签\"></a>JavaScript 生成的标签</h3><p>通过 JavaScript 生成的标签让内容变得不易查找、编辑，并且降低性能。能避免时尽量避免。</p>\n<p>版权声明：本文为博主制作文章，转载时注明，谢谢。</p>"},{"title":"JavaScript浅拷贝和深拷贝递归","date":"2017-03-11T05:09:04.000Z","_content":"浅拷贝的结果是两个引用指向同一个对象，即同一片内存区域。\n\n### 浅拷贝\n\n``` javascript\n var Ethan = {name: 'Ethan Sha', height: '177cm', girlfriend: {name: 'leftHand'}};  // Just a joke, never mind.\n var Jack = Ethan;\n \n Jack.height = '165cm';\n \n console.log(Ethan); \n console.log(Jack);\n```\n```\n { name: 'Ethan Sha',\n   height: '165cm',     // I'm not\n   girlfriend: { name: 'leftHand' } }\n { name: 'Ethan Sha',   \n   height: '165cm',\n   girlfriend: { name: 'leftHand' } }   \n \n```\n<!-- more -->\n\n### 深拷贝\n深拷贝的结果是两个引用指向不同对象，即不同内存区域。实现深拷贝需要递归\n``` javascript \nvar Ethan = {name: 'Ethan Sha', height: '177cm', girlfriend: {name: 'leftHand'}};\nvar Jack;\n\nfunction deepCopy(obj) {\n    var temp = obj.constructor === Array ? [] : {};\n    if (typeof obj !== 'object') {\n        return obj;\n    } else {\n        for (var i in obj) {\n            temp[i] = deepCopy(obj[i]);\n        }\n    }\n    return temp;\n}\n\nJack = deepCopy(Ethan);\nJack.name = 'Jack Neo';\nJack.height = '165cm';\nJack.girlfriend.name = 'rightHand';\n\n\nconsole.log(Ethan);\nconsole.log(Jack);\n```\n```\n{ name: 'Ethan Sha',\n  height: '177cm',\n  girlfriend: { name: 'leftHand' } }\n{ name: 'Jack Neo',\n  height: '165cm',\n  girlfriend: { name: 'rightHand' } }\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。\n","source":"_posts/JavaScript深拷贝递归.md","raw":"---\ntitle: JavaScript浅拷贝和深拷贝递归\ndate: 2017-3-11 13:09:04\ntags: [JavaScript,面向对象程序设计]\n---\n浅拷贝的结果是两个引用指向同一个对象，即同一片内存区域。\n\n### 浅拷贝\n\n``` javascript\n var Ethan = {name: 'Ethan Sha', height: '177cm', girlfriend: {name: 'leftHand'}};  // Just a joke, never mind.\n var Jack = Ethan;\n \n Jack.height = '165cm';\n \n console.log(Ethan); \n console.log(Jack);\n```\n```\n { name: 'Ethan Sha',\n   height: '165cm',     // I'm not\n   girlfriend: { name: 'leftHand' } }\n { name: 'Ethan Sha',   \n   height: '165cm',\n   girlfriend: { name: 'leftHand' } }   \n \n```\n<!-- more -->\n\n### 深拷贝\n深拷贝的结果是两个引用指向不同对象，即不同内存区域。实现深拷贝需要递归\n``` javascript \nvar Ethan = {name: 'Ethan Sha', height: '177cm', girlfriend: {name: 'leftHand'}};\nvar Jack;\n\nfunction deepCopy(obj) {\n    var temp = obj.constructor === Array ? [] : {};\n    if (typeof obj !== 'object') {\n        return obj;\n    } else {\n        for (var i in obj) {\n            temp[i] = deepCopy(obj[i]);\n        }\n    }\n    return temp;\n}\n\nJack = deepCopy(Ethan);\nJack.name = 'Jack Neo';\nJack.height = '165cm';\nJack.girlfriend.name = 'rightHand';\n\n\nconsole.log(Ethan);\nconsole.log(Jack);\n```\n```\n{ name: 'Ethan Sha',\n  height: '177cm',\n  girlfriend: { name: 'leftHand' } }\n{ name: 'Jack Neo',\n  height: '165cm',\n  girlfriend: { name: 'rightHand' } }\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。\n","slug":"JavaScript深拷贝递归","published":1,"updated":"2018-05-02T10:50:24.115Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g6a0005v4nbi7d6wexc","content":"<p>浅拷贝的结果是两个引用指向同一个对象，即同一片内存区域。</p>\n<h3 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Ethan = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'Ethan Sha'</span>, <span class=\"attr\">height</span>: <span class=\"string\">'177cm'</span>, <span class=\"attr\">girlfriend</span>: &#123;<span class=\"attr\">name</span>: <span class=\"string\">'leftHand'</span>&#125;&#125;;  <span class=\"comment\">// Just a joke, never mind.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Jack = Ethan;</span><br><span class=\"line\"></span><br><span class=\"line\">Jack.height = <span class=\"string\">'165cm'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Ethan); </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Jack);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; name: &apos;Ethan Sha&apos;,</span><br><span class=\"line\">  height: &apos;165cm&apos;,     // I&apos;m not</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;leftHand&apos; &#125; &#125;</span><br><span class=\"line\">&#123; name: &apos;Ethan Sha&apos;,   </span><br><span class=\"line\">  height: &apos;165cm&apos;,</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;leftHand&apos; &#125; &#125;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h3><p>深拷贝的结果是两个引用指向不同对象，即不同内存区域。实现深拷贝需要递归<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Ethan = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'Ethan Sha'</span>, <span class=\"attr\">height</span>: <span class=\"string\">'177cm'</span>, <span class=\"attr\">girlfriend</span>: &#123;<span class=\"attr\">name</span>: <span class=\"string\">'leftHand'</span>&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> Jack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp = obj.constructor === <span class=\"built_in\">Array</span> ? [] : &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">            temp[i] = deepCopy(obj[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Jack = deepCopy(Ethan);</span><br><span class=\"line\">Jack.name = <span class=\"string\">'Jack Neo'</span>;</span><br><span class=\"line\">Jack.height = <span class=\"string\">'165cm'</span>;</span><br><span class=\"line\">Jack.girlfriend.name = <span class=\"string\">'rightHand'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Ethan);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Jack);</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; name: &apos;Ethan Sha&apos;,</span><br><span class=\"line\">  height: &apos;177cm&apos;,</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;leftHand&apos; &#125; &#125;</span><br><span class=\"line\">&#123; name: &apos;Jack Neo&apos;,</span><br><span class=\"line\">  height: &apos;165cm&apos;,</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;rightHand&apos; &#125; &#125;</span><br></pre></td></tr></table></figure>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<p>浅拷贝的结果是两个引用指向同一个对象，即同一片内存区域。</p>\n<h3 id=\"浅拷贝\"><a href=\"#浅拷贝\" class=\"headerlink\" title=\"浅拷贝\"></a>浅拷贝</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Ethan = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'Ethan Sha'</span>, <span class=\"attr\">height</span>: <span class=\"string\">'177cm'</span>, <span class=\"attr\">girlfriend</span>: &#123;<span class=\"attr\">name</span>: <span class=\"string\">'leftHand'</span>&#125;&#125;;  <span class=\"comment\">// Just a joke, never mind.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> Jack = Ethan;</span><br><span class=\"line\"></span><br><span class=\"line\">Jack.height = <span class=\"string\">'165cm'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Ethan); </span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Jack);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; name: &apos;Ethan Sha&apos;,</span><br><span class=\"line\">  height: &apos;165cm&apos;,     // I&apos;m not</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;leftHand&apos; &#125; &#125;</span><br><span class=\"line\">&#123; name: &apos;Ethan Sha&apos;,   </span><br><span class=\"line\">  height: &apos;165cm&apos;,</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;leftHand&apos; &#125; &#125;</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"深拷贝\"><a href=\"#深拷贝\" class=\"headerlink\" title=\"深拷贝\"></a>深拷贝</h3><p>深拷贝的结果是两个引用指向不同对象，即不同内存区域。实现深拷贝需要递归<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Ethan = &#123;<span class=\"attr\">name</span>: <span class=\"string\">'Ethan Sha'</span>, <span class=\"attr\">height</span>: <span class=\"string\">'177cm'</span>, <span class=\"attr\">girlfriend</span>: &#123;<span class=\"attr\">name</span>: <span class=\"string\">'leftHand'</span>&#125;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> Jack;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span>(<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> temp = obj.constructor === <span class=\"built_in\">Array</span> ? [] : &#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> obj;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">            temp[i] = deepCopy(obj[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Jack = deepCopy(Ethan);</span><br><span class=\"line\">Jack.name = <span class=\"string\">'Jack Neo'</span>;</span><br><span class=\"line\">Jack.height = <span class=\"string\">'165cm'</span>;</span><br><span class=\"line\">Jack.girlfriend.name = <span class=\"string\">'rightHand'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Ethan);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(Jack);</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; name: &apos;Ethan Sha&apos;,</span><br><span class=\"line\">  height: &apos;177cm&apos;,</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;leftHand&apos; &#125; &#125;</span><br><span class=\"line\">&#123; name: &apos;Jack Neo&apos;,</span><br><span class=\"line\">  height: &apos;165cm&apos;,</span><br><span class=\"line\">  girlfriend: &#123; name: &apos;rightHand&apos; &#125; &#125;</span><br></pre></td></tr></table></figure>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>"},{"title":"Python代码笔记","date":"2016-08-05T05:09:04.000Z","_content":"### 记录入门Python2.7所写代码\n\n```Python\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n\n# print '------------------------------------------------------------------------------'\n# print 'Hello,World!'\n# print 1 + 2 + \\\n#     4 + 5\n# print 'hello \\nworld'\n# print \"\\\\nowhere\"\n#\n# print '------------------------------------------------------------------------------'\n# # Chapter2\n# print '------------------------------------------------------------------------------'\n# edward = ['Edward Sony', 42]\n# john = ['John Smith', 50]\n# database = [edward, john]\n# print database\n```\n<!-- more -->\n```Python\n# greeting = 'hello'\n# print greeting[0], '&', greeting[-1]\n# number = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n# print number[3:6]\n# print number[:3]\n# print number[:]\n# print(number[0:10:2])\n# print(number[10:0:-2])\n# print([1, 2, 3]+[4, 5, 6])\n# print 'me'*10\n# a = \"Hello,World!\"\n# print('Hello' in a)\n# print 'len =', len(number)\n# print(max(number))\n#\n# # List method\n# print list('Hello')\n# x = [1, 1, 1]\n# x[1] = 2\n# print x\n# name = ['Jack', 'Rose', 'Hua']\n# del name[0]\n# print name\n# nameValueFor = ['P', 'e', 'r', 'l']\n# print nameValueFor\n# nameValueFor[2:] = list('ar')\n# print nameValueFor\n# nameValueFor[1:3] = []\n# print nameValueFor\n# nameValueFor.append('erl')\n# print nameValueFor\n# print nameValueFor.count('r')\n# a = [1, 2, 3]\n# b = [4, 5, 6]\n# a.extend(b)\n# print a\n# a.insert(0, -1)\n# print a\n# print a.pop()\n# print a\n#\n# a.remove(-1)\n# print a\n# a.reverse()\n# print a\n# a.sort()\n# print a\n# b = a.sort()\n# print b\n# print 1, 2, 3\n# print ()\n# print tuple([1, 2, 3])\n# print tuple('abc')\n# print tuple((1, 2, 3))\n# # Chapter3\n# print \"hello,%s!\" % 'world'\n# from math import pi\n# print \"Pi=%.5f\" % pi\n# from string import Template\n# s = Template('$x,glorious $x!')\n# s.substitute(x='slam')\n# print '%u + %u = %u' % (1, 1, 2)\n# print '%10f' % pi\n# print '%10.2f' % pi\n# print '%.2f' % pi\n# title = 'Hello,Python'\n# print 'Dst =', title.find('Python')\n# seq = ['1', '2', '3', '4', '5']\n# plus = '+'\n# print plus.join(seq)\n# print \"ABC\".lower()\n# print \"1+2+3+4\".split('+')\n# print \"/usr/bin/env\".split('/')\n# # Chapter4 dictionary\n# phoneBook = {'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'}\n# print phoneBook\n# items = [('name', 'Gumby'), ('age', 42)]\n# print dict(items)\n# d = dict(items)\n# print d['name']\n# print dict(name='Nice', age=42)\n# print \"BasicMethodOfDictionary\", \"len =\", len(phoneBook), \"Alice's Phone = \", phoneBook['Alice']\n# print \"Gumby's phone number is %(Alice)s.\" % phoneBook\n# # DeepCopy And shallowCopy\n# from copy import deepcopy\n# DeepCopyOfPB = deepcopy(phoneBook)\n# phoneBook.clear()\n# print \"Phone = \", phoneBook\n# print \"DeepCopy = \", DeepCopyOfPB\n# ShallowCopyOfPB = DeepCopyOfPB.copy()\n# DeepCopyOfPB.clear()\n# print \"Shallow = \", ShallowCopyOfPB\n# phoneBook = deepcopy(ShallowCopyOfPB)\n# print \"setdefault(key)\", phoneBook.setdefault(\"Alice\")\n\n# # Chapter 5\n\n# print 'age', 42\n# import math as foobar\n# print foobar.sqrt(4)\n# x, y, z = 1, 2, 3\n# print x, y, z\n# x, y = y, x\n# print x, y, z\n# values = 1, 2, 3\n# print values\n# a, b, c = values\n# print a\n# # link valued\n# from math import sqrt\n# link1 = link2 = sqrt(4)\n# print link1, link2\n# print bool(42)\n# name = raw_input(\"What's your name?\")\n# if name.endswith('Hua'):\n#     print \"Hello,Mr.Hua\"\n# else:\n#     print \"Hello,Stranger\"\n# num = raw_input(\"Enter a number.\")\n# if num > 0:\n#     print \"The number is positive\"\n# elif num < 0:\n#     print \"The number is negative\"\n# else:\n#     print \"The number is zero\"\n# assert\n# age = 10\n# assert 0 < age <100\n# age = -1\n# fishNum = 1\n# assert 10 < fishNum < 100, 'Fish too less'\n# x = 1\n# while x <= 100:\n#     print x\n#     x += 1\n# name = ''\n# while not name:\n#     name = raw_input(\"Please enter your name:\")\n#     print \"Hello,%s\" % name\n# words = ['this', 'is', 'an', 'ex', 'parrot']\n# for word in words:\n#     print word\n# d = {'x': 1, 'y': 2, 'z': 3}\n# for key in d:\n#     print key, 'correspond to', d[key]\n# for key, value in d.items():\n#     print key, 'correspond to', d[key]\n# names = ['Anne', 'Beth', 'George', 'Damon']\n# age = [12, 45, 32, 102]\n# for i in range(len(names)):\n#     print names[i], 'is', age[i], 'years old'\n# from math import sqrt\n# for n in range(99, 0, -1):\n#     root = sqrt(n)\n#     if root == int(root):\n#         print n\n#         break\n# print [x*x for x in range(10) if x % 3 == 0]\n# exec \"print 'Hello,world'\"\n# from math import sqrt\n# scope = {}\n# exec 'sqrt=1' in scope\n# print sqrt(4)\n# print scope['sqrt']\n# eval(raw_input(\"Enter a exp(Calculate):\"))\n# import math\n# x = 1\n# y = math.sqrt\n# print callable(x)\n# print callable(y)\n#\n#\n# def hello(name):\n#     return 'Hello,'+name+'!'\n# print hello('World')\n#\n#\n# def square(x):\n#     \"\"\"Calculate x*x\"\"\"\n#     return x*x\n# print square.__doc__\n# print square(5)\n#\n#\n# def test():\n#     print 'This is print'\n#     return\n#     print 'This is not'\n# print '----------------'\n# x = test()\n# print '----------------'\n# print test()\n# print '----------------'\n# print x\n#\n#\n# def try_to_change(n):\n#     n = 'Mr.Hua'\n# name = 'Jack'\n# try_to_change(name)\n# print name\n#\n#\n# def change(n):\n#     n[0] = \"Mr.Tom\"\n# names = ['Mrs.Entity', 'Mr.Gates']\n# change(names)\n# print names\n#\n#\n# storage = {}\n# storage['first'] = {}\n# storage['middle'] = {}\n# storage['last'] = {}\n# me = 'Magus lie het'\n# storage['first']['Magus'] = [me]\n# storage['middle']['lie'] = [me]\n# storage['last']['het'] = [me]\n# print storage['middle']['lie']\n#\n#\n# # collection method\n# def print_params(*params):\n#     \"\"\"single star return a tuple\"\"\"\n#     print params\n# print_params(\"Testing\")\n# print_params(\"Tsinghua\", \"university\")\n#\n#\n# def print_params_stars(**params):\n#     \"\"\"double star return a dictionary\"\"\"\n#     print params\n# print_params_stars(x=1, y=2, z=3)\n#\n#\n# # reverse of collection\n# def add(x, y):\n#     return x+y\n# params = (1, 2)\n# print add(*params)\n#\n#\n# def add_three(x, y, z):\n#     return x+y+z\n# params_tuple = {'x': 1, 'y': 2, 'z': 3, }\n# print add_three(**params_tuple)\n#\n# # domain: variable is a dictionary vars() return a dictionary\n# x = 1\n# scope = vars()\n# scope['x']\n# scope['x'] += 1\n# print x\n#\n# # global variable\n# x = 1\n#\n#\n# def change_global():\n#     global x\n#     x += 1\n#\n#\n# def factorial(n):\n#     if n == 1:\n#         return 1\n#     else:\n#         return n*factorial(n-1)\n# print factorial(10)\n#\n#\n# def binary_search(sequence, number, lower, upper):\n#     if lower == upper:\n#         assert number == sequence[upper]\n#         return upper\n#     else:\n#         middle = (lower + upper)//2\n#         if number > sequence[middle]:\n#             return binary_search(sequence, number, middle + 1, upper)\n#         else:\n#             return binary_search(sequence, number, lower, middle)\n#\n# seq = [50, 21, 32, 22, 94, 80, 1, 6]\n# seq.sort()\n# print seq\n# print \"The dst of Number is\", binary_search(seq, 22, 0, len(seq)-1) + 1\n# L = []\n# n = 1\n# while n <= 99:\n#     L.append(n)\n#     n += 2\n# print L\n# higher-order function:function and variable\n# x = abs(-10)\n# print x\n# print abs\n# f = abs\n# y = f(-10)\n# print y\n#\n#\n# def add(a, b, function):\n#     return function(a)+function(b)\n# print \"This function program result is:\", add(-10, -10, f)\n# built in function:map and reduce\n#\n#\n# def f(x):\n#     return x*x\n# print map(f, [1, 2, 3, 4, 5])\n#\n# print map(str, [1, 2, 3, 4, 5])\n#\n# reduce function receive two params x1,x2.Input f get y1,then input f with y1 and x3,and so on\n#\n#\n# def fn(x, y):\n#     return x*10+y\n# reduce(fn, [1, 3, 5, 7, 9])\n#\n#\n# def char2num(s):\n#     return {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}[s]\n#\n# print reduce(fn, map(char2num, '13579'))\n# print map(char2num, '123456')\n#\n#\n# def str2int(s):\n#     def fn(x, y):\n#         return x*10+y\n#     def char2num(str_num):\n#         return {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}[str_num]\n#     return reduce(fn, map(char2num, s))\n#\n#\n# def str2int_lambda(s):\n#     return reduce(lambda x, y: x*10+y, map(char2num, s))\n# transfer the username into regular (nAMe into Name)using map\n# User = ['adam', 'LISA', 'barT']\n#\n#\n# def user_reg(user_list):\n#         return user_list.title()\n#\n#\n# def regular_name(name):\n#     return map(user_reg, name)\n# print regular_name(User)\n# # using lambda below\n#\n#\n# def regular_name_lambda(name):\n#     return map(lambda x: x.title(), name)\n# print regular_name(User)\n#\n# # List multiply\n# a = [50, 32, 7, 12, 56, 18]\n#\n#\n# def multiply_list_lambda(list_num):\n#     return reduce(lambda x, y: x*y, list_num)\n# print multiply_list_lambda(a)\n#\n# # filter-sequence find odd num del rest\n#\n#\n# def is_odd(n):\n#     return n % 2 == 1\n# print filter(is_odd, a)\n#\n# sequence = ['A', '', None, '  ']\n#\n#\n# def not_empty(s):\n#     return s and s.strip()\n# print filter(not_empty, sequence)\n\n# find all prime number in 0-99 and print the calculate times\n#\n# from math import sqrt\n#\n# list_1 = []\n# list_2 = []\n# list_3 = []\n#\n#\n# def is_prime(number):\n#     flag = True\n#     time = 0\n#     global list_1\n#     if number == 2:\n#         return flag\n#     elif number < 2:\n#         return False\n#     for i in range(2, number):\n#         if number % i == 0:\n#             flag = False\n#             time += 1\n#             break\n#         else:\n#             time += 1\n#     list_1.append(time)\n#     return flag\n#\n#\n# def is_prime_second(number):\n#     flag = True\n#     time = 0\n#     global list_2\n#     if number == 2:\n#\n#         return flag\n#     elif number < 2:\n#         return False\n#     for i in range(2, number/2):\n#         if number % i == 0:\n#             flag = False\n#             time += 1\n#             break\n#         else:\n#             pass\n#     list_2.append(time)\n#     return flag\n#\n#\n# def is_prime_three(number):\n#     flag = True\n#     time = 0\n#     if number == 2:\n#         return flag\n#     elif number < 2:\n#         return False\n#     for i in range(2, int(sqrt(number))):\n#         if number % i == 0:\n#             flag = False\n#             time += 1\n#             break\n#         else:\n#             pass\n#     list_3.append(time)\n#     return flag\n#\n#\n# def add(x, y):\n#     return x + y\n#\n#\n# for i in range(0, 99):\n#     is_prime(i)\n#\n#\n# for i in range(0, 99):\n#     is_prime_second(i)\n#\n#\n# for i in range(0, 99):\n#     is_prime_three(i)\n#\n# print \"The prime of sequence is:\", filter(is_prime, range(0, 99))\n# print \"Method one cal times:\", reduce(add, list_1)\n# print \"The prime of sequence is:\", filter(is_prime_second, range(0, 99))\n# print \"Method two cal times:\", reduce(add, list_2)\n# print \"The prime of sequence is:\", filter(is_prime_three, range(0, 99))\n# print \"Method three cal times:\", reduce(add, list_3)\n\n# chapter 6\n# function as a value return :closure program\n#\n#\n# def lazy_sum(*args):\n#     def sum_test():\n#         ax = 0\n#         for n in args:\n#             ax += n\n#         return ax\n#     return sum_test\n#\n# f = lazy_sum(1, 3, 5, 7)\n# print f()\n\n#\n# def count():\n#     fs = []\n#     for i in range(1, 4):\n#         def f():\n#             return i*i\n#         fs.append(f)\n#     return fs\n#\n#\n# f1, f2, f3 = count()\n# print f1()\n# print f2()\n# print f3()\n\n# lambda function unnamed\n# calculate f(x)=x^2\n# print map(lambda x: x*x, [1, 2, 3, 4])\n#\n#\n# def f(x):\n#     return x*x\n#\n# print map(f, [1, 2, 3, 4])\n#\n# # decorator\n#\n#\n# def now():\n#     print'2016-9-1'\n#\n# g = now\n# print g()\n# print 'now function name:', now.__name__, 'g function name:', g.__name__\n#\n# # example 1\n#\n#\n# def log_decorator(func):  # decorator\n#     def wrapper(*args, **kw):\n#         print 'call %s():' % func.__name__\n#         return func(*args, **kw)\n#     return wrapper\n#\n#\n# @log_decorator\n# def now_next():\n#\n#     print '2016-10-1'\n#\n# now_next()\n#\n# # example 2\n\n#\n# def log_decorator(text):\n#     def decorator(func):\n#         def wrapper(*args, **kw):\n#             print '%s %s():' % (text, func.__name__)\n#             return func(*args, **kw)\n#         return wrapper\n#     print 'run decorator'\n#     return decorator\n#\n#\n# @log_decorator('execute')\n# def now():\n#     print '2016-10-1'\n#\n# now()\n# run sequence:log_decorator()-wrapper()- return func()[now()]- now()-return wrapper- decorator()-return decorator\n\n\n\n\n\n\n# produce and consumer multi threading\n# multi processing Unix/Linux fork()\n#\n# import os\n# # window didn't include fork()\n# print 'Process (%s) start.' % os.getpid()\n#\n# pid = os.fork()\n#\n# if pid == 0:\n#     print \"I am child process (%s) and my parent is %s.\", (os.getpid(), os.getppid())\n# else:\n#     print \"I am (%s) just created a child process (%s).\" % (os.getppid(), pid)\n#\n# from multiprocessing import Process\n# import os\n#\n# # child process run\n#\n#\n# def child_run(name):\n#     print 'Run child process %s (%s)...' % (name, os.getpid())\n# if __name__ == '__main__':\n# print 'Parent process %s ' % os.getpid()\n# p = Process(target=child_run, args=('test',))\n# print \"Process will start.\"\n# p.start()\n# p.join()\n# print 'Process kill'\n#\n#\n#\n# from multiprocessing import Process, Queue\n# import os, time, random\n#\n#\n#\n# def write(q):\n#     for value in ['A', 'B', 'C', 'D', 'E']:\n#         print \"Put %s to queue\" % value\n#         q.put(value)\n#         time.sleep(random.random())\n#\n#\n# def read(q):\n#     while True:\n#         value = q.get(True)\n#         print \"Get %s from queue.\" % value\n#\n# if __name__ == '__main__':\n#     q = Queue()\n#     pw = Process(target=write, args=(q,))\n#     pr = Process(target=read, args=(q,))\n# # reading and writing\n#     pw .start()\n#     pr.start()\n# # waiting pw end. A, B, C, D, E write finished\n#     pw.join()\n# # pr is endless a loop,must be terminate\n#     pr.terminate()\n#\n# # threading thread POSIX\n# import time,threading\n# # new thread execute\n#\n#\n# def loop():\n#     print 'thread %s is running...' % threading.current_thread().name\n#     n = 0\n#     while n < 5:\n#         n += 1\n#         print 'thread %s >>> %s' % (threading.current_thread().name, n)\n#         time.sleep(1)\n#     print 'thread %s ended.' % threading.current_thread().name\n#\n# print 'thread %s is running...' % threading.current_thread().name\n# # built thread object using Thread\n# t = threading.Thread(target=loop, name='LoopThread')\n# t.start()\n# t.join()\n# print 'thread %s ended.' % threading.current_thread().name\n\n# Lock:Process copy variable,Thread share one variable\n# example how Thread change one variable\n#\n# import time, threading\n# # this in my bank savings\n# balance = 0\n#\n#\n# def change_it(n):\n#     global balance\n#\n#     balance += n\n#     balance -= n\n#\n#\n# def run_thread(n):\n#     for i in range(100000):\n#         change_it(n)\n#\n# t1 = threading.Thread(target=run_thread, args=(5,))\n# t2 = threading.Thread(target=run_thread, args=(8,))\n#\n# t1.start()\n# t2.start()\n# t1.join()\n# t2.join()\n# print balance\n# import threading, Queue, time\n#\n#\n# class Consumer(threading.Thread):\n#     def __init__(self, queue):\n#         threading.Thread.__init__(self)\n#         self.__queue = queue\n#\n#     def run(self):\n#         while True:\n#             msg = self.__queue.get()\n#             if isinstance(msg, str) and msg == 'quit':\n#                 break\n#             print \"I am thread, and i received %s\" % msg\n#         print 'bye'\n#\n#\n# def Producer():\n#     queue = Queue.Queue()\n#     worker = Consumer(queue)\n#     worker.start()\n#     start_time = time.time()\n#     while time.time()-start_time < 5:\n#         queue.put('something at %s' % time.time())\n#         time.sleep(1)\n#     queue.put('quit')\n#     worker.join()\n#\n# if __name__ == '__main__':\n#     Producer()\n#\n# import threading, zipfile\n#\n# class AsyncZip(threading.Thread):\n#     def __init__(self, infile, outfile):\n#         threading.Thread.__init__(self)\n#         self.infile = infile\n#         self.outfile = outfile\n#     def run(self):\n#         f = zipfile.ZipFile(self.outfile, 'w', zipfile.ZIP_DEFLATED)\n#         f.write(self.infile)\n#         f.close()\n#         print 'Finished background zip of: ', self.infile\n#\n# background = AsyncZip('mydata.txt', 'myarchive.zip')\n# background.start()\n# print 'The main program continues to run in foreground.'\n#\n# background.join()    # Wait for the background task to finish\n# print 'Main program waited until background was done.'\n#\n\n#\n#\n# def TrimFuc(strs):\n#\n#     head=0\n#     tail=len(strs)\n#     while(head<tail and (strs[head].isspace() or strs[head]==\"\\x00\")):\n#            head += 1\n#     if head == tail:\n#            return \"\"\n#     while(strs[tail-1].isspace() or strs[tail-1]==\"\\x00\"):\n#            tail -= 1\n#     return strs[head:tail]\n#\n# strs = ' hello,world\\n'\n# strs1 = 'hello,world\\n'\n# print strs\n# print '-----------------'\n# print TrimFuc(strs)\n# print TrimFuc(strs1)\n# print '-----------------'\n#\n# # regular expression\n#\n# import re\n# # match success will return a object of match else return None\n# print re.match(r'^\\d{3}\\-\\d{3,8}$', '010-12345')\n# print re.match(r'^\\d{3}\\-\\d{3,8}$', '010 12345')\n# print '-----------------------------------------'\n# # split string with reExp and common\n# print re.split(r'\\s+', 'a b   c')\n# print 'ab    c'.split()\n# print re.split(r'[\\s\\,]+', 'a,b, c  d')\n# print re.split(r'[\\s\\,\\;]+', 'a,b;;  c  d')\n# # group substring\n# m = re.match(r'^(\\d{3})-(\\d{3,8})$', '010-12345')\n# print m\n# print m.group(0)\n# print m.group(1)\n# print m.group(2)\n#\n# print re.match(r'^(\\d+)(0*)$', '102300').groups()\n# print re.match(r'^(\\d+?)(0*)$', '102300').groups()\n#\n# re_telephone = re.compile(r'^(\\d{3})-(\\d{3,8})$')\n# print re_telephone.match('010-8086').groups()\n#\n# print'--------------------------------------'\n# print re.match(r'[a-z]', 'a44')\n#\n\n# json\n# import json\n# obj = [[1, 2, 3], 1992, 6.12, 'Sam', {'key': (4, 5, 6), 'Tom': (7, 8, 9)}]\n# encode_json = json.dumps(obj)\n# print repr(obj)\n# print encode_json\n# print 'encode_json_type', type(encode_json)\n# decode_json = json.loads(encode_json)\n# print 'decode_json_type', type(decode_json)\n# print decode_json[4]['key']\n# print decode_json\n# import re\n#\n# fields = \"oracle_username=xiaweihua\"\n# print re.sub('oracle_username=', '', fields)\n\n\n# file_t = open('hello.data', 'w')\n# for line in range(0, 9):\n#     file_t.write(str(line)+'\\n')\n# file_t.close()\n#\n# file_r = open('hello.data', 'r')\n# print '--------'\n# for line in range(0, 9):\n#     print file_r.readline()\n#     print '---------'\n#\n# file_r.close()\n# conn = cx_Oracle.connect('themis', 'themis', '192.168.1.60/testdb')\n# dsn_tns = cx_Oracle.makedsn('themis', 'themis', '192.168.1.60/testdb')\n# c = conn.cursor()\n# data = c.execute('desc t_redlist')\n# print  data.fetchall()\n\n# encoding decoding formal\n# tup = ('abc', '123', '\\xce\\xf7\\xb0\\xb2')\n# print tup[2].decode('gbk')\n#\n# from random import randint\n# from time import sleep, ctime\n# from Queue import Queue\n# import threading\n#\n#\n# class MyThread(threading.Thread):\n#     def __init__(self, func, args, name=''):\n#         threading.Thread.__init__(self)\n#         self.name = name\n#         self.func = func\n#         self.args = args\n#\n#     def get_result(self):\n#         return self.res\n#\n#     def run(self):\n#         print 'starting', self.name, 'at', ctime()\n#         self.res = self.func(*self.args)\n#         print self.name, 'finished at:', ctime()\n#\n#\n# def write_queue(queue):\n#     print 'produce apple for queue...'\n#     queue.put('apple', 1)\n#     print 'apple number now is:', queue.qsize()\n#\n#\n# def read_queue(queue):\n#     val = queue.get(1)\n#     print 'consume a %s from queue...' % val\n#     print 'apple number now is:', queue.qsize()\n#\n#\n# def writer(queue, loops):\n#     for i in range(loops):\n#         write_queue(queue)\n#         sleep(randint(1, 3))\n#\n#\n# def reader(queue, loops):\n#     for i in range(loops):\n#         read_queue(queue)\n#         sleep(randint(2, 5))\n#\n#\n# funcs = [writer, reader]\n# nfuncs = range(len(funcs))\n#\n#\n# def main():\n#     nloops = randint(2, 5)\n#     q = Queue(32)\n#\n#     threads = []\n#     for i in nfuncs:\n#         t = MyThread(funcs[i], (q, nloops), funcs[i].__name__)\n#         threads.append(t)\n#\n#     for i in nfuncs:\n#         threads[i].start()\n#\n#     for i in nfuncs:\n#         threads[i].join()\n#\n#     print 'all done'\n#\n# if __name__ == '__main__':\n#     main()\n\n# transform dictionary to XML\nfrom xml.etree.ElementTree import Element, SubElement, tostring\nfrom xml.dom.minidom import parseString\n\n# BOOKs = {\n#     '013269937': {\n#         'title': 'Core Python Programming',\n#         'edition': 2,\n#         'year': 2006,\n#     },\n#     '0132356139': {\n#         'title': 'Python web development with Django',\n#         'authors': 'Jeff Forcier:Paul Bissex:Wesley Chun',\n#         'year': 2009,\n#     },\n#     '0137143419': {\n#         'title': 'Python Fundamentals',\n#         'year': 2009,\n#     },\n# }\n# books = Element('books')\n# for isbn, info in BOOKs.iteritems():\n#     book = SubElement(books, 'book')\n#     info.setdefault('authors', 'Wesley Chun')\n#     info.setdefault('edition', 1)\n#     for key, val in info.iteritems():\n#         SubElement(book, key).text = ', '.join(str(val).split(':'))\n#\n# xml = tostring(books)\n# print '****Raw XML****'\n# print xml\n#\n# print '\\n***Pretty Printed XML'\n# dom = parseString(xml)\n# print dom.toprettyxml('    ')\n#\n#\n# print '***Flat Structure***'\n# for elmt in books.iter():\n#     print elmt.tag, '-', elmt.text\n#\n# print '\\n****Titles Only****'\n# for book in books.findall('.//title'):\n#     print book.text\n\n\npointfile = open('test.txt', 'w')\npointfile.write('Hello, world')\npointfile.close()\n\nfile_read = open('test.txt', 'r')\nprint file_read.read(4)\nprint file_read.read()\n\nwrite_again = open('test.txt', 'w')\nwrite_again.write('write again.')\nwrite_again.close()\n\n\n```\n\n\n\n版权声明：本文为博主制作文章，转载时注明，谢谢。\n","source":"_posts/Python代码笔记.md","raw":"---\ntitle: Python代码笔记\ndate: 2016-8-5 13:09:04\ntags: [Python2.7]\n---\n### 记录入门Python2.7所写代码\n\n```Python\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n\n# print '------------------------------------------------------------------------------'\n# print 'Hello,World!'\n# print 1 + 2 + \\\n#     4 + 5\n# print 'hello \\nworld'\n# print \"\\\\nowhere\"\n#\n# print '------------------------------------------------------------------------------'\n# # Chapter2\n# print '------------------------------------------------------------------------------'\n# edward = ['Edward Sony', 42]\n# john = ['John Smith', 50]\n# database = [edward, john]\n# print database\n```\n<!-- more -->\n```Python\n# greeting = 'hello'\n# print greeting[0], '&', greeting[-1]\n# number = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n# print number[3:6]\n# print number[:3]\n# print number[:]\n# print(number[0:10:2])\n# print(number[10:0:-2])\n# print([1, 2, 3]+[4, 5, 6])\n# print 'me'*10\n# a = \"Hello,World!\"\n# print('Hello' in a)\n# print 'len =', len(number)\n# print(max(number))\n#\n# # List method\n# print list('Hello')\n# x = [1, 1, 1]\n# x[1] = 2\n# print x\n# name = ['Jack', 'Rose', 'Hua']\n# del name[0]\n# print name\n# nameValueFor = ['P', 'e', 'r', 'l']\n# print nameValueFor\n# nameValueFor[2:] = list('ar')\n# print nameValueFor\n# nameValueFor[1:3] = []\n# print nameValueFor\n# nameValueFor.append('erl')\n# print nameValueFor\n# print nameValueFor.count('r')\n# a = [1, 2, 3]\n# b = [4, 5, 6]\n# a.extend(b)\n# print a\n# a.insert(0, -1)\n# print a\n# print a.pop()\n# print a\n#\n# a.remove(-1)\n# print a\n# a.reverse()\n# print a\n# a.sort()\n# print a\n# b = a.sort()\n# print b\n# print 1, 2, 3\n# print ()\n# print tuple([1, 2, 3])\n# print tuple('abc')\n# print tuple((1, 2, 3))\n# # Chapter3\n# print \"hello,%s!\" % 'world'\n# from math import pi\n# print \"Pi=%.5f\" % pi\n# from string import Template\n# s = Template('$x,glorious $x!')\n# s.substitute(x='slam')\n# print '%u + %u = %u' % (1, 1, 2)\n# print '%10f' % pi\n# print '%10.2f' % pi\n# print '%.2f' % pi\n# title = 'Hello,Python'\n# print 'Dst =', title.find('Python')\n# seq = ['1', '2', '3', '4', '5']\n# plus = '+'\n# print plus.join(seq)\n# print \"ABC\".lower()\n# print \"1+2+3+4\".split('+')\n# print \"/usr/bin/env\".split('/')\n# # Chapter4 dictionary\n# phoneBook = {'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'}\n# print phoneBook\n# items = [('name', 'Gumby'), ('age', 42)]\n# print dict(items)\n# d = dict(items)\n# print d['name']\n# print dict(name='Nice', age=42)\n# print \"BasicMethodOfDictionary\", \"len =\", len(phoneBook), \"Alice's Phone = \", phoneBook['Alice']\n# print \"Gumby's phone number is %(Alice)s.\" % phoneBook\n# # DeepCopy And shallowCopy\n# from copy import deepcopy\n# DeepCopyOfPB = deepcopy(phoneBook)\n# phoneBook.clear()\n# print \"Phone = \", phoneBook\n# print \"DeepCopy = \", DeepCopyOfPB\n# ShallowCopyOfPB = DeepCopyOfPB.copy()\n# DeepCopyOfPB.clear()\n# print \"Shallow = \", ShallowCopyOfPB\n# phoneBook = deepcopy(ShallowCopyOfPB)\n# print \"setdefault(key)\", phoneBook.setdefault(\"Alice\")\n\n# # Chapter 5\n\n# print 'age', 42\n# import math as foobar\n# print foobar.sqrt(4)\n# x, y, z = 1, 2, 3\n# print x, y, z\n# x, y = y, x\n# print x, y, z\n# values = 1, 2, 3\n# print values\n# a, b, c = values\n# print a\n# # link valued\n# from math import sqrt\n# link1 = link2 = sqrt(4)\n# print link1, link2\n# print bool(42)\n# name = raw_input(\"What's your name?\")\n# if name.endswith('Hua'):\n#     print \"Hello,Mr.Hua\"\n# else:\n#     print \"Hello,Stranger\"\n# num = raw_input(\"Enter a number.\")\n# if num > 0:\n#     print \"The number is positive\"\n# elif num < 0:\n#     print \"The number is negative\"\n# else:\n#     print \"The number is zero\"\n# assert\n# age = 10\n# assert 0 < age <100\n# age = -1\n# fishNum = 1\n# assert 10 < fishNum < 100, 'Fish too less'\n# x = 1\n# while x <= 100:\n#     print x\n#     x += 1\n# name = ''\n# while not name:\n#     name = raw_input(\"Please enter your name:\")\n#     print \"Hello,%s\" % name\n# words = ['this', 'is', 'an', 'ex', 'parrot']\n# for word in words:\n#     print word\n# d = {'x': 1, 'y': 2, 'z': 3}\n# for key in d:\n#     print key, 'correspond to', d[key]\n# for key, value in d.items():\n#     print key, 'correspond to', d[key]\n# names = ['Anne', 'Beth', 'George', 'Damon']\n# age = [12, 45, 32, 102]\n# for i in range(len(names)):\n#     print names[i], 'is', age[i], 'years old'\n# from math import sqrt\n# for n in range(99, 0, -1):\n#     root = sqrt(n)\n#     if root == int(root):\n#         print n\n#         break\n# print [x*x for x in range(10) if x % 3 == 0]\n# exec \"print 'Hello,world'\"\n# from math import sqrt\n# scope = {}\n# exec 'sqrt=1' in scope\n# print sqrt(4)\n# print scope['sqrt']\n# eval(raw_input(\"Enter a exp(Calculate):\"))\n# import math\n# x = 1\n# y = math.sqrt\n# print callable(x)\n# print callable(y)\n#\n#\n# def hello(name):\n#     return 'Hello,'+name+'!'\n# print hello('World')\n#\n#\n# def square(x):\n#     \"\"\"Calculate x*x\"\"\"\n#     return x*x\n# print square.__doc__\n# print square(5)\n#\n#\n# def test():\n#     print 'This is print'\n#     return\n#     print 'This is not'\n# print '----------------'\n# x = test()\n# print '----------------'\n# print test()\n# print '----------------'\n# print x\n#\n#\n# def try_to_change(n):\n#     n = 'Mr.Hua'\n# name = 'Jack'\n# try_to_change(name)\n# print name\n#\n#\n# def change(n):\n#     n[0] = \"Mr.Tom\"\n# names = ['Mrs.Entity', 'Mr.Gates']\n# change(names)\n# print names\n#\n#\n# storage = {}\n# storage['first'] = {}\n# storage['middle'] = {}\n# storage['last'] = {}\n# me = 'Magus lie het'\n# storage['first']['Magus'] = [me]\n# storage['middle']['lie'] = [me]\n# storage['last']['het'] = [me]\n# print storage['middle']['lie']\n#\n#\n# # collection method\n# def print_params(*params):\n#     \"\"\"single star return a tuple\"\"\"\n#     print params\n# print_params(\"Testing\")\n# print_params(\"Tsinghua\", \"university\")\n#\n#\n# def print_params_stars(**params):\n#     \"\"\"double star return a dictionary\"\"\"\n#     print params\n# print_params_stars(x=1, y=2, z=3)\n#\n#\n# # reverse of collection\n# def add(x, y):\n#     return x+y\n# params = (1, 2)\n# print add(*params)\n#\n#\n# def add_three(x, y, z):\n#     return x+y+z\n# params_tuple = {'x': 1, 'y': 2, 'z': 3, }\n# print add_three(**params_tuple)\n#\n# # domain: variable is a dictionary vars() return a dictionary\n# x = 1\n# scope = vars()\n# scope['x']\n# scope['x'] += 1\n# print x\n#\n# # global variable\n# x = 1\n#\n#\n# def change_global():\n#     global x\n#     x += 1\n#\n#\n# def factorial(n):\n#     if n == 1:\n#         return 1\n#     else:\n#         return n*factorial(n-1)\n# print factorial(10)\n#\n#\n# def binary_search(sequence, number, lower, upper):\n#     if lower == upper:\n#         assert number == sequence[upper]\n#         return upper\n#     else:\n#         middle = (lower + upper)//2\n#         if number > sequence[middle]:\n#             return binary_search(sequence, number, middle + 1, upper)\n#         else:\n#             return binary_search(sequence, number, lower, middle)\n#\n# seq = [50, 21, 32, 22, 94, 80, 1, 6]\n# seq.sort()\n# print seq\n# print \"The dst of Number is\", binary_search(seq, 22, 0, len(seq)-1) + 1\n# L = []\n# n = 1\n# while n <= 99:\n#     L.append(n)\n#     n += 2\n# print L\n# higher-order function:function and variable\n# x = abs(-10)\n# print x\n# print abs\n# f = abs\n# y = f(-10)\n# print y\n#\n#\n# def add(a, b, function):\n#     return function(a)+function(b)\n# print \"This function program result is:\", add(-10, -10, f)\n# built in function:map and reduce\n#\n#\n# def f(x):\n#     return x*x\n# print map(f, [1, 2, 3, 4, 5])\n#\n# print map(str, [1, 2, 3, 4, 5])\n#\n# reduce function receive two params x1,x2.Input f get y1,then input f with y1 and x3,and so on\n#\n#\n# def fn(x, y):\n#     return x*10+y\n# reduce(fn, [1, 3, 5, 7, 9])\n#\n#\n# def char2num(s):\n#     return {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}[s]\n#\n# print reduce(fn, map(char2num, '13579'))\n# print map(char2num, '123456')\n#\n#\n# def str2int(s):\n#     def fn(x, y):\n#         return x*10+y\n#     def char2num(str_num):\n#         return {'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9}[str_num]\n#     return reduce(fn, map(char2num, s))\n#\n#\n# def str2int_lambda(s):\n#     return reduce(lambda x, y: x*10+y, map(char2num, s))\n# transfer the username into regular (nAMe into Name)using map\n# User = ['adam', 'LISA', 'barT']\n#\n#\n# def user_reg(user_list):\n#         return user_list.title()\n#\n#\n# def regular_name(name):\n#     return map(user_reg, name)\n# print regular_name(User)\n# # using lambda below\n#\n#\n# def regular_name_lambda(name):\n#     return map(lambda x: x.title(), name)\n# print regular_name(User)\n#\n# # List multiply\n# a = [50, 32, 7, 12, 56, 18]\n#\n#\n# def multiply_list_lambda(list_num):\n#     return reduce(lambda x, y: x*y, list_num)\n# print multiply_list_lambda(a)\n#\n# # filter-sequence find odd num del rest\n#\n#\n# def is_odd(n):\n#     return n % 2 == 1\n# print filter(is_odd, a)\n#\n# sequence = ['A', '', None, '  ']\n#\n#\n# def not_empty(s):\n#     return s and s.strip()\n# print filter(not_empty, sequence)\n\n# find all prime number in 0-99 and print the calculate times\n#\n# from math import sqrt\n#\n# list_1 = []\n# list_2 = []\n# list_3 = []\n#\n#\n# def is_prime(number):\n#     flag = True\n#     time = 0\n#     global list_1\n#     if number == 2:\n#         return flag\n#     elif number < 2:\n#         return False\n#     for i in range(2, number):\n#         if number % i == 0:\n#             flag = False\n#             time += 1\n#             break\n#         else:\n#             time += 1\n#     list_1.append(time)\n#     return flag\n#\n#\n# def is_prime_second(number):\n#     flag = True\n#     time = 0\n#     global list_2\n#     if number == 2:\n#\n#         return flag\n#     elif number < 2:\n#         return False\n#     for i in range(2, number/2):\n#         if number % i == 0:\n#             flag = False\n#             time += 1\n#             break\n#         else:\n#             pass\n#     list_2.append(time)\n#     return flag\n#\n#\n# def is_prime_three(number):\n#     flag = True\n#     time = 0\n#     if number == 2:\n#         return flag\n#     elif number < 2:\n#         return False\n#     for i in range(2, int(sqrt(number))):\n#         if number % i == 0:\n#             flag = False\n#             time += 1\n#             break\n#         else:\n#             pass\n#     list_3.append(time)\n#     return flag\n#\n#\n# def add(x, y):\n#     return x + y\n#\n#\n# for i in range(0, 99):\n#     is_prime(i)\n#\n#\n# for i in range(0, 99):\n#     is_prime_second(i)\n#\n#\n# for i in range(0, 99):\n#     is_prime_three(i)\n#\n# print \"The prime of sequence is:\", filter(is_prime, range(0, 99))\n# print \"Method one cal times:\", reduce(add, list_1)\n# print \"The prime of sequence is:\", filter(is_prime_second, range(0, 99))\n# print \"Method two cal times:\", reduce(add, list_2)\n# print \"The prime of sequence is:\", filter(is_prime_three, range(0, 99))\n# print \"Method three cal times:\", reduce(add, list_3)\n\n# chapter 6\n# function as a value return :closure program\n#\n#\n# def lazy_sum(*args):\n#     def sum_test():\n#         ax = 0\n#         for n in args:\n#             ax += n\n#         return ax\n#     return sum_test\n#\n# f = lazy_sum(1, 3, 5, 7)\n# print f()\n\n#\n# def count():\n#     fs = []\n#     for i in range(1, 4):\n#         def f():\n#             return i*i\n#         fs.append(f)\n#     return fs\n#\n#\n# f1, f2, f3 = count()\n# print f1()\n# print f2()\n# print f3()\n\n# lambda function unnamed\n# calculate f(x)=x^2\n# print map(lambda x: x*x, [1, 2, 3, 4])\n#\n#\n# def f(x):\n#     return x*x\n#\n# print map(f, [1, 2, 3, 4])\n#\n# # decorator\n#\n#\n# def now():\n#     print'2016-9-1'\n#\n# g = now\n# print g()\n# print 'now function name:', now.__name__, 'g function name:', g.__name__\n#\n# # example 1\n#\n#\n# def log_decorator(func):  # decorator\n#     def wrapper(*args, **kw):\n#         print 'call %s():' % func.__name__\n#         return func(*args, **kw)\n#     return wrapper\n#\n#\n# @log_decorator\n# def now_next():\n#\n#     print '2016-10-1'\n#\n# now_next()\n#\n# # example 2\n\n#\n# def log_decorator(text):\n#     def decorator(func):\n#         def wrapper(*args, **kw):\n#             print '%s %s():' % (text, func.__name__)\n#             return func(*args, **kw)\n#         return wrapper\n#     print 'run decorator'\n#     return decorator\n#\n#\n# @log_decorator('execute')\n# def now():\n#     print '2016-10-1'\n#\n# now()\n# run sequence:log_decorator()-wrapper()- return func()[now()]- now()-return wrapper- decorator()-return decorator\n\n\n\n\n\n\n# produce and consumer multi threading\n# multi processing Unix/Linux fork()\n#\n# import os\n# # window didn't include fork()\n# print 'Process (%s) start.' % os.getpid()\n#\n# pid = os.fork()\n#\n# if pid == 0:\n#     print \"I am child process (%s) and my parent is %s.\", (os.getpid(), os.getppid())\n# else:\n#     print \"I am (%s) just created a child process (%s).\" % (os.getppid(), pid)\n#\n# from multiprocessing import Process\n# import os\n#\n# # child process run\n#\n#\n# def child_run(name):\n#     print 'Run child process %s (%s)...' % (name, os.getpid())\n# if __name__ == '__main__':\n# print 'Parent process %s ' % os.getpid()\n# p = Process(target=child_run, args=('test',))\n# print \"Process will start.\"\n# p.start()\n# p.join()\n# print 'Process kill'\n#\n#\n#\n# from multiprocessing import Process, Queue\n# import os, time, random\n#\n#\n#\n# def write(q):\n#     for value in ['A', 'B', 'C', 'D', 'E']:\n#         print \"Put %s to queue\" % value\n#         q.put(value)\n#         time.sleep(random.random())\n#\n#\n# def read(q):\n#     while True:\n#         value = q.get(True)\n#         print \"Get %s from queue.\" % value\n#\n# if __name__ == '__main__':\n#     q = Queue()\n#     pw = Process(target=write, args=(q,))\n#     pr = Process(target=read, args=(q,))\n# # reading and writing\n#     pw .start()\n#     pr.start()\n# # waiting pw end. A, B, C, D, E write finished\n#     pw.join()\n# # pr is endless a loop,must be terminate\n#     pr.terminate()\n#\n# # threading thread POSIX\n# import time,threading\n# # new thread execute\n#\n#\n# def loop():\n#     print 'thread %s is running...' % threading.current_thread().name\n#     n = 0\n#     while n < 5:\n#         n += 1\n#         print 'thread %s >>> %s' % (threading.current_thread().name, n)\n#         time.sleep(1)\n#     print 'thread %s ended.' % threading.current_thread().name\n#\n# print 'thread %s is running...' % threading.current_thread().name\n# # built thread object using Thread\n# t = threading.Thread(target=loop, name='LoopThread')\n# t.start()\n# t.join()\n# print 'thread %s ended.' % threading.current_thread().name\n\n# Lock:Process copy variable,Thread share one variable\n# example how Thread change one variable\n#\n# import time, threading\n# # this in my bank savings\n# balance = 0\n#\n#\n# def change_it(n):\n#     global balance\n#\n#     balance += n\n#     balance -= n\n#\n#\n# def run_thread(n):\n#     for i in range(100000):\n#         change_it(n)\n#\n# t1 = threading.Thread(target=run_thread, args=(5,))\n# t2 = threading.Thread(target=run_thread, args=(8,))\n#\n# t1.start()\n# t2.start()\n# t1.join()\n# t2.join()\n# print balance\n# import threading, Queue, time\n#\n#\n# class Consumer(threading.Thread):\n#     def __init__(self, queue):\n#         threading.Thread.__init__(self)\n#         self.__queue = queue\n#\n#     def run(self):\n#         while True:\n#             msg = self.__queue.get()\n#             if isinstance(msg, str) and msg == 'quit':\n#                 break\n#             print \"I am thread, and i received %s\" % msg\n#         print 'bye'\n#\n#\n# def Producer():\n#     queue = Queue.Queue()\n#     worker = Consumer(queue)\n#     worker.start()\n#     start_time = time.time()\n#     while time.time()-start_time < 5:\n#         queue.put('something at %s' % time.time())\n#         time.sleep(1)\n#     queue.put('quit')\n#     worker.join()\n#\n# if __name__ == '__main__':\n#     Producer()\n#\n# import threading, zipfile\n#\n# class AsyncZip(threading.Thread):\n#     def __init__(self, infile, outfile):\n#         threading.Thread.__init__(self)\n#         self.infile = infile\n#         self.outfile = outfile\n#     def run(self):\n#         f = zipfile.ZipFile(self.outfile, 'w', zipfile.ZIP_DEFLATED)\n#         f.write(self.infile)\n#         f.close()\n#         print 'Finished background zip of: ', self.infile\n#\n# background = AsyncZip('mydata.txt', 'myarchive.zip')\n# background.start()\n# print 'The main program continues to run in foreground.'\n#\n# background.join()    # Wait for the background task to finish\n# print 'Main program waited until background was done.'\n#\n\n#\n#\n# def TrimFuc(strs):\n#\n#     head=0\n#     tail=len(strs)\n#     while(head<tail and (strs[head].isspace() or strs[head]==\"\\x00\")):\n#            head += 1\n#     if head == tail:\n#            return \"\"\n#     while(strs[tail-1].isspace() or strs[tail-1]==\"\\x00\"):\n#            tail -= 1\n#     return strs[head:tail]\n#\n# strs = ' hello,world\\n'\n# strs1 = 'hello,world\\n'\n# print strs\n# print '-----------------'\n# print TrimFuc(strs)\n# print TrimFuc(strs1)\n# print '-----------------'\n#\n# # regular expression\n#\n# import re\n# # match success will return a object of match else return None\n# print re.match(r'^\\d{3}\\-\\d{3,8}$', '010-12345')\n# print re.match(r'^\\d{3}\\-\\d{3,8}$', '010 12345')\n# print '-----------------------------------------'\n# # split string with reExp and common\n# print re.split(r'\\s+', 'a b   c')\n# print 'ab    c'.split()\n# print re.split(r'[\\s\\,]+', 'a,b, c  d')\n# print re.split(r'[\\s\\,\\;]+', 'a,b;;  c  d')\n# # group substring\n# m = re.match(r'^(\\d{3})-(\\d{3,8})$', '010-12345')\n# print m\n# print m.group(0)\n# print m.group(1)\n# print m.group(2)\n#\n# print re.match(r'^(\\d+)(0*)$', '102300').groups()\n# print re.match(r'^(\\d+?)(0*)$', '102300').groups()\n#\n# re_telephone = re.compile(r'^(\\d{3})-(\\d{3,8})$')\n# print re_telephone.match('010-8086').groups()\n#\n# print'--------------------------------------'\n# print re.match(r'[a-z]', 'a44')\n#\n\n# json\n# import json\n# obj = [[1, 2, 3], 1992, 6.12, 'Sam', {'key': (4, 5, 6), 'Tom': (7, 8, 9)}]\n# encode_json = json.dumps(obj)\n# print repr(obj)\n# print encode_json\n# print 'encode_json_type', type(encode_json)\n# decode_json = json.loads(encode_json)\n# print 'decode_json_type', type(decode_json)\n# print decode_json[4]['key']\n# print decode_json\n# import re\n#\n# fields = \"oracle_username=xiaweihua\"\n# print re.sub('oracle_username=', '', fields)\n\n\n# file_t = open('hello.data', 'w')\n# for line in range(0, 9):\n#     file_t.write(str(line)+'\\n')\n# file_t.close()\n#\n# file_r = open('hello.data', 'r')\n# print '--------'\n# for line in range(0, 9):\n#     print file_r.readline()\n#     print '---------'\n#\n# file_r.close()\n# conn = cx_Oracle.connect('themis', 'themis', '192.168.1.60/testdb')\n# dsn_tns = cx_Oracle.makedsn('themis', 'themis', '192.168.1.60/testdb')\n# c = conn.cursor()\n# data = c.execute('desc t_redlist')\n# print  data.fetchall()\n\n# encoding decoding formal\n# tup = ('abc', '123', '\\xce\\xf7\\xb0\\xb2')\n# print tup[2].decode('gbk')\n#\n# from random import randint\n# from time import sleep, ctime\n# from Queue import Queue\n# import threading\n#\n#\n# class MyThread(threading.Thread):\n#     def __init__(self, func, args, name=''):\n#         threading.Thread.__init__(self)\n#         self.name = name\n#         self.func = func\n#         self.args = args\n#\n#     def get_result(self):\n#         return self.res\n#\n#     def run(self):\n#         print 'starting', self.name, 'at', ctime()\n#         self.res = self.func(*self.args)\n#         print self.name, 'finished at:', ctime()\n#\n#\n# def write_queue(queue):\n#     print 'produce apple for queue...'\n#     queue.put('apple', 1)\n#     print 'apple number now is:', queue.qsize()\n#\n#\n# def read_queue(queue):\n#     val = queue.get(1)\n#     print 'consume a %s from queue...' % val\n#     print 'apple number now is:', queue.qsize()\n#\n#\n# def writer(queue, loops):\n#     for i in range(loops):\n#         write_queue(queue)\n#         sleep(randint(1, 3))\n#\n#\n# def reader(queue, loops):\n#     for i in range(loops):\n#         read_queue(queue)\n#         sleep(randint(2, 5))\n#\n#\n# funcs = [writer, reader]\n# nfuncs = range(len(funcs))\n#\n#\n# def main():\n#     nloops = randint(2, 5)\n#     q = Queue(32)\n#\n#     threads = []\n#     for i in nfuncs:\n#         t = MyThread(funcs[i], (q, nloops), funcs[i].__name__)\n#         threads.append(t)\n#\n#     for i in nfuncs:\n#         threads[i].start()\n#\n#     for i in nfuncs:\n#         threads[i].join()\n#\n#     print 'all done'\n#\n# if __name__ == '__main__':\n#     main()\n\n# transform dictionary to XML\nfrom xml.etree.ElementTree import Element, SubElement, tostring\nfrom xml.dom.minidom import parseString\n\n# BOOKs = {\n#     '013269937': {\n#         'title': 'Core Python Programming',\n#         'edition': 2,\n#         'year': 2006,\n#     },\n#     '0132356139': {\n#         'title': 'Python web development with Django',\n#         'authors': 'Jeff Forcier:Paul Bissex:Wesley Chun',\n#         'year': 2009,\n#     },\n#     '0137143419': {\n#         'title': 'Python Fundamentals',\n#         'year': 2009,\n#     },\n# }\n# books = Element('books')\n# for isbn, info in BOOKs.iteritems():\n#     book = SubElement(books, 'book')\n#     info.setdefault('authors', 'Wesley Chun')\n#     info.setdefault('edition', 1)\n#     for key, val in info.iteritems():\n#         SubElement(book, key).text = ', '.join(str(val).split(':'))\n#\n# xml = tostring(books)\n# print '****Raw XML****'\n# print xml\n#\n# print '\\n***Pretty Printed XML'\n# dom = parseString(xml)\n# print dom.toprettyxml('    ')\n#\n#\n# print '***Flat Structure***'\n# for elmt in books.iter():\n#     print elmt.tag, '-', elmt.text\n#\n# print '\\n****Titles Only****'\n# for book in books.findall('.//title'):\n#     print book.text\n\n\npointfile = open('test.txt', 'w')\npointfile.write('Hello, world')\npointfile.close()\n\nfile_read = open('test.txt', 'r')\nprint file_read.read(4)\nprint file_read.read()\n\nwrite_again = open('test.txt', 'w')\nwrite_again.write('write again.')\nwrite_again.close()\n\n\n```\n\n\n\n版权声明：本文为博主制作文章，转载时注明，谢谢。\n","slug":"Python代码笔记","published":1,"updated":"2018-05-04T14:35:10.766Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g6e0006v4nbgiqkvj1l","content":"<h3 id=\"记录入门Python2-7所写代码\"><a href=\"#记录入门Python2-7所写代码\" class=\"headerlink\" title=\"记录入门Python2.7所写代码\"></a>记录入门Python2.7所写代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print '------------------------------------------------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Hello,World!'</span></span><br><span class=\"line\"><span class=\"comment\"># print 1 + 2 + \\</span></span><br><span class=\"line\"><span class=\"comment\">#     4 + 5</span></span><br><span class=\"line\"><span class=\"comment\"># print 'hello \\nworld'</span></span><br><span class=\"line\"><span class=\"comment\"># print \"\\\\nowhere\"</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '------------------------------------------------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># # Chapter2</span></span><br><span class=\"line\"><span class=\"comment\"># print '------------------------------------------------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># edward = ['Edward Sony', 42]</span></span><br><span class=\"line\"><span class=\"comment\"># john = ['John Smith', 50]</span></span><br><span class=\"line\"><span class=\"comment\"># database = [edward, john]</span></span><br><span class=\"line\"><span class=\"comment\"># print database</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># greeting = 'hello'</span></span><br><span class=\"line\"><span class=\"comment\"># print greeting[0], '&amp;', greeting[-1]</span></span><br><span class=\"line\"><span class=\"comment\"># number = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class=\"line\"><span class=\"comment\"># print number[3:6]</span></span><br><span class=\"line\"><span class=\"comment\"># print number[:3]</span></span><br><span class=\"line\"><span class=\"comment\"># print number[:]</span></span><br><span class=\"line\"><span class=\"comment\"># print(number[0:10:2])</span></span><br><span class=\"line\"><span class=\"comment\"># print(number[10:0:-2])</span></span><br><span class=\"line\"><span class=\"comment\"># print([1, 2, 3]+[4, 5, 6])</span></span><br><span class=\"line\"><span class=\"comment\"># print 'me'*10</span></span><br><span class=\"line\"><span class=\"comment\"># a = \"Hello,World!\"</span></span><br><span class=\"line\"><span class=\"comment\"># print('Hello' in a)</span></span><br><span class=\"line\"><span class=\"comment\"># print 'len =', len(number)</span></span><br><span class=\"line\"><span class=\"comment\"># print(max(number))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # List method</span></span><br><span class=\"line\"><span class=\"comment\"># print list('Hello')</span></span><br><span class=\"line\"><span class=\"comment\"># x = [1, 1, 1]</span></span><br><span class=\"line\"><span class=\"comment\"># x[1] = 2</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\"># name = ['Jack', 'Rose', 'Hua']</span></span><br><span class=\"line\"><span class=\"comment\"># del name[0]</span></span><br><span class=\"line\"><span class=\"comment\"># print name</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor = ['P', 'e', 'r', 'l']</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor[2:] = list('ar')</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor[1:3] = []</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor.append('erl')</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor.count('r')</span></span><br><span class=\"line\"><span class=\"comment\"># a = [1, 2, 3]</span></span><br><span class=\"line\"><span class=\"comment\"># b = [4, 5, 6]</span></span><br><span class=\"line\"><span class=\"comment\"># a.extend(b)</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># a.insert(0, -1)</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># print a.pop()</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># a.remove(-1)</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># a.reverse()</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># a.sort()</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># b = a.sort()</span></span><br><span class=\"line\"><span class=\"comment\"># print b</span></span><br><span class=\"line\"><span class=\"comment\"># print 1, 2, 3</span></span><br><span class=\"line\"><span class=\"comment\"># print ()</span></span><br><span class=\"line\"><span class=\"comment\"># print tuple([1, 2, 3])</span></span><br><span class=\"line\"><span class=\"comment\"># print tuple('abc')</span></span><br><span class=\"line\"><span class=\"comment\"># print tuple((1, 2, 3))</span></span><br><span class=\"line\"><span class=\"comment\"># # Chapter3</span></span><br><span class=\"line\"><span class=\"comment\"># print \"hello,%s!\" % 'world'</span></span><br><span class=\"line\"><span class=\"comment\"># from math import pi</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Pi=%.5f\" % pi</span></span><br><span class=\"line\"><span class=\"comment\"># from string import Template</span></span><br><span class=\"line\"><span class=\"comment\"># s = Template('$x,glorious $x!')</span></span><br><span class=\"line\"><span class=\"comment\"># s.substitute(x='slam')</span></span><br><span class=\"line\"><span class=\"comment\"># print '%u + %u = %u' % (1, 1, 2)</span></span><br><span class=\"line\"><span class=\"comment\"># print '%10f' % pi</span></span><br><span class=\"line\"><span class=\"comment\"># print '%10.2f' % pi</span></span><br><span class=\"line\"><span class=\"comment\"># print '%.2f' % pi</span></span><br><span class=\"line\"><span class=\"comment\"># title = 'Hello,Python'</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Dst =', title.find('Python')</span></span><br><span class=\"line\"><span class=\"comment\"># seq = ['1', '2', '3', '4', '5']</span></span><br><span class=\"line\"><span class=\"comment\"># plus = '+'</span></span><br><span class=\"line\"><span class=\"comment\"># print plus.join(seq)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"ABC\".lower()</span></span><br><span class=\"line\"><span class=\"comment\"># print \"1+2+3+4\".split('+')</span></span><br><span class=\"line\"><span class=\"comment\"># print \"/usr/bin/env\".split('/')</span></span><br><span class=\"line\"><span class=\"comment\"># # Chapter4 dictionary</span></span><br><span class=\"line\"><span class=\"comment\"># phoneBook = &#123;'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># print phoneBook</span></span><br><span class=\"line\"><span class=\"comment\"># items = [('name', 'Gumby'), ('age', 42)]</span></span><br><span class=\"line\"><span class=\"comment\"># print dict(items)</span></span><br><span class=\"line\"><span class=\"comment\"># d = dict(items)</span></span><br><span class=\"line\"><span class=\"comment\"># print d['name']</span></span><br><span class=\"line\"><span class=\"comment\"># print dict(name='Nice', age=42)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"BasicMethodOfDictionary\", \"len =\", len(phoneBook), \"Alice's Phone = \", phoneBook['Alice']</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Gumby's phone number is %(Alice)s.\" % phoneBook</span></span><br><span class=\"line\"><span class=\"comment\"># # DeepCopy And shallowCopy</span></span><br><span class=\"line\"><span class=\"comment\"># from copy import deepcopy</span></span><br><span class=\"line\"><span class=\"comment\"># DeepCopyOfPB = deepcopy(phoneBook)</span></span><br><span class=\"line\"><span class=\"comment\"># phoneBook.clear()</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Phone = \", phoneBook</span></span><br><span class=\"line\"><span class=\"comment\"># print \"DeepCopy = \", DeepCopyOfPB</span></span><br><span class=\"line\"><span class=\"comment\"># ShallowCopyOfPB = DeepCopyOfPB.copy()</span></span><br><span class=\"line\"><span class=\"comment\"># DeepCopyOfPB.clear()</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Shallow = \", ShallowCopyOfPB</span></span><br><span class=\"line\"><span class=\"comment\"># phoneBook = deepcopy(ShallowCopyOfPB)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"setdefault(key)\", phoneBook.setdefault(\"Alice\")</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # Chapter 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print 'age', 42</span></span><br><span class=\"line\"><span class=\"comment\"># import math as foobar</span></span><br><span class=\"line\"><span class=\"comment\"># print foobar.sqrt(4)</span></span><br><span class=\"line\"><span class=\"comment\"># x, y, z = 1, 2, 3</span></span><br><span class=\"line\"><span class=\"comment\"># print x, y, z</span></span><br><span class=\"line\"><span class=\"comment\"># x, y = y, x</span></span><br><span class=\"line\"><span class=\"comment\"># print x, y, z</span></span><br><span class=\"line\"><span class=\"comment\"># values = 1, 2, 3</span></span><br><span class=\"line\"><span class=\"comment\"># print values</span></span><br><span class=\"line\"><span class=\"comment\"># a, b, c = values</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># # link valued</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># link1 = link2 = sqrt(4)</span></span><br><span class=\"line\"><span class=\"comment\"># print link1, link2</span></span><br><span class=\"line\"><span class=\"comment\"># print bool(42)</span></span><br><span class=\"line\"><span class=\"comment\"># name = raw_input(\"What's your name?\")</span></span><br><span class=\"line\"><span class=\"comment\"># if name.endswith('Hua'):</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"Hello,Mr.Hua\"</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"Hello,Stranger\"</span></span><br><span class=\"line\"><span class=\"comment\"># num = raw_input(\"Enter a number.\")</span></span><br><span class=\"line\"><span class=\"comment\"># if num &gt; 0:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"The number is positive\"</span></span><br><span class=\"line\"><span class=\"comment\"># elif num &lt; 0:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"The number is negative\"</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"The number is zero\"</span></span><br><span class=\"line\"><span class=\"comment\"># assert</span></span><br><span class=\"line\"><span class=\"comment\"># age = 10</span></span><br><span class=\"line\"><span class=\"comment\"># assert 0 &lt; age &lt;100</span></span><br><span class=\"line\"><span class=\"comment\"># age = -1</span></span><br><span class=\"line\"><span class=\"comment\"># fishNum = 1</span></span><br><span class=\"line\"><span class=\"comment\"># assert 10 &lt; fishNum &lt; 100, 'Fish too less'</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt;= 100:</span></span><br><span class=\"line\"><span class=\"comment\">#     print x</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\"># name = ''</span></span><br><span class=\"line\"><span class=\"comment\"># while not name:</span></span><br><span class=\"line\"><span class=\"comment\">#     name = raw_input(\"Please enter your name:\")</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"Hello,%s\" % name</span></span><br><span class=\"line\"><span class=\"comment\"># words = ['this', 'is', 'an', 'ex', 'parrot']</span></span><br><span class=\"line\"><span class=\"comment\"># for word in words:</span></span><br><span class=\"line\"><span class=\"comment\">#     print word</span></span><br><span class=\"line\"><span class=\"comment\"># d = &#123;'x': 1, 'y': 2, 'z': 3&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># for key in d:</span></span><br><span class=\"line\"><span class=\"comment\">#     print key, 'correspond to', d[key]</span></span><br><span class=\"line\"><span class=\"comment\"># for key, value in d.items():</span></span><br><span class=\"line\"><span class=\"comment\">#     print key, 'correspond to', d[key]</span></span><br><span class=\"line\"><span class=\"comment\"># names = ['Anne', 'Beth', 'George', 'Damon']</span></span><br><span class=\"line\"><span class=\"comment\"># age = [12, 45, 32, 102]</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(len(names)):</span></span><br><span class=\"line\"><span class=\"comment\">#     print names[i], 'is', age[i], 'years old'</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># for n in range(99, 0, -1):</span></span><br><span class=\"line\"><span class=\"comment\">#     root = sqrt(n)</span></span><br><span class=\"line\"><span class=\"comment\">#     if root == int(root):</span></span><br><span class=\"line\"><span class=\"comment\">#         print n</span></span><br><span class=\"line\"><span class=\"comment\">#         break</span></span><br><span class=\"line\"><span class=\"comment\"># print [x*x for x in range(10) if x % 3 == 0]</span></span><br><span class=\"line\"><span class=\"comment\"># exec \"print 'Hello,world'\"</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># scope = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># exec 'sqrt=1' in scope</span></span><br><span class=\"line\"><span class=\"comment\"># print sqrt(4)</span></span><br><span class=\"line\"><span class=\"comment\"># print scope['sqrt']</span></span><br><span class=\"line\"><span class=\"comment\"># eval(raw_input(\"Enter a exp(Calculate):\"))</span></span><br><span class=\"line\"><span class=\"comment\"># import math</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># y = math.sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># print callable(x)</span></span><br><span class=\"line\"><span class=\"comment\"># print callable(y)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def hello(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     return 'Hello,'+name+'!'</span></span><br><span class=\"line\"><span class=\"comment\"># print hello('World')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def square(x):</span></span><br><span class=\"line\"><span class=\"comment\">#     \"\"\"Calculate x*x\"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*x</span></span><br><span class=\"line\"><span class=\"comment\"># print square.__doc__</span></span><br><span class=\"line\"><span class=\"comment\"># print square(5)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def test():</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'This is print'</span></span><br><span class=\"line\"><span class=\"comment\">#     return</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'This is not'</span></span><br><span class=\"line\"><span class=\"comment\"># print '----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># x = test()</span></span><br><span class=\"line\"><span class=\"comment\"># print '----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print test()</span></span><br><span class=\"line\"><span class=\"comment\"># print '----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def try_to_change(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     n = 'Mr.Hua'</span></span><br><span class=\"line\"><span class=\"comment\"># name = 'Jack'</span></span><br><span class=\"line\"><span class=\"comment\"># try_to_change(name)</span></span><br><span class=\"line\"><span class=\"comment\"># print name</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def change(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     n[0] = \"Mr.Tom\"</span></span><br><span class=\"line\"><span class=\"comment\"># names = ['Mrs.Entity', 'Mr.Gates']</span></span><br><span class=\"line\"><span class=\"comment\"># change(names)</span></span><br><span class=\"line\"><span class=\"comment\"># print names</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># storage = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># storage['first'] = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># storage['middle'] = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># storage['last'] = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># me = 'Magus lie het'</span></span><br><span class=\"line\"><span class=\"comment\"># storage['first']['Magus'] = [me]</span></span><br><span class=\"line\"><span class=\"comment\"># storage['middle']['lie'] = [me]</span></span><br><span class=\"line\"><span class=\"comment\"># storage['last']['het'] = [me]</span></span><br><span class=\"line\"><span class=\"comment\"># print storage['middle']['lie']</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # collection method</span></span><br><span class=\"line\"><span class=\"comment\"># def print_params(*params):</span></span><br><span class=\"line\"><span class=\"comment\">#     \"\"\"single star return a tuple\"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     print params</span></span><br><span class=\"line\"><span class=\"comment\"># print_params(\"Testing\")</span></span><br><span class=\"line\"><span class=\"comment\"># print_params(\"Tsinghua\", \"university\")</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def print_params_stars(**params):</span></span><br><span class=\"line\"><span class=\"comment\">#     \"\"\"double star return a dictionary\"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     print params</span></span><br><span class=\"line\"><span class=\"comment\"># print_params_stars(x=1, y=2, z=3)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # reverse of collection</span></span><br><span class=\"line\"><span class=\"comment\"># def add(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x+y</span></span><br><span class=\"line\"><span class=\"comment\"># params = (1, 2)</span></span><br><span class=\"line\"><span class=\"comment\"># print add(*params)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def add_three(x, y, z):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x+y+z</span></span><br><span class=\"line\"><span class=\"comment\"># params_tuple = &#123;'x': 1, 'y': 2, 'z': 3, &#125;</span></span><br><span class=\"line\"><span class=\"comment\"># print add_three(**params_tuple)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # domain: variable is a dictionary vars() return a dictionary</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># scope = vars()</span></span><br><span class=\"line\"><span class=\"comment\"># scope['x']</span></span><br><span class=\"line\"><span class=\"comment\"># scope['x'] += 1</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # global variable</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def change_global():</span></span><br><span class=\"line\"><span class=\"comment\">#     global x</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def factorial(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     if n == 1:</span></span><br><span class=\"line\"><span class=\"comment\">#         return 1</span></span><br><span class=\"line\"><span class=\"comment\">#     else:</span></span><br><span class=\"line\"><span class=\"comment\">#         return n*factorial(n-1)</span></span><br><span class=\"line\"><span class=\"comment\"># print factorial(10)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def binary_search(sequence, number, lower, upper):</span></span><br><span class=\"line\"><span class=\"comment\">#     if lower == upper:</span></span><br><span class=\"line\"><span class=\"comment\">#         assert number == sequence[upper]</span></span><br><span class=\"line\"><span class=\"comment\">#         return upper</span></span><br><span class=\"line\"><span class=\"comment\">#     else:</span></span><br><span class=\"line\"><span class=\"comment\">#         middle = (lower + upper)//2</span></span><br><span class=\"line\"><span class=\"comment\">#         if number &gt; sequence[middle]:</span></span><br><span class=\"line\"><span class=\"comment\">#             return binary_search(sequence, number, middle + 1, upper)</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             return binary_search(sequence, number, lower, middle)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># seq = [50, 21, 32, 22, 94, 80, 1, 6]</span></span><br><span class=\"line\"><span class=\"comment\"># seq.sort()</span></span><br><span class=\"line\"><span class=\"comment\"># print seq</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The dst of Number is\", binary_search(seq, 22, 0, len(seq)-1) + 1</span></span><br><span class=\"line\"><span class=\"comment\"># L = []</span></span><br><span class=\"line\"><span class=\"comment\"># n = 1</span></span><br><span class=\"line\"><span class=\"comment\"># while n &lt;= 99:</span></span><br><span class=\"line\"><span class=\"comment\">#     L.append(n)</span></span><br><span class=\"line\"><span class=\"comment\">#     n += 2</span></span><br><span class=\"line\"><span class=\"comment\"># print L</span></span><br><span class=\"line\"><span class=\"comment\"># higher-order function:function and variable</span></span><br><span class=\"line\"><span class=\"comment\"># x = abs(-10)</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\"># print abs</span></span><br><span class=\"line\"><span class=\"comment\"># f = abs</span></span><br><span class=\"line\"><span class=\"comment\"># y = f(-10)</span></span><br><span class=\"line\"><span class=\"comment\"># print y</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def add(a, b, function):</span></span><br><span class=\"line\"><span class=\"comment\">#     return function(a)+function(b)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"This function program result is:\", add(-10, -10, f)</span></span><br><span class=\"line\"><span class=\"comment\"># built in function:map and reduce</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def f(x):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*x</span></span><br><span class=\"line\"><span class=\"comment\"># print map(f, [1, 2, 3, 4, 5])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print map(str, [1, 2, 3, 4, 5])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># reduce function receive two params x1,x2.Input f get y1,then input f with y1 and x3,and so on</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def fn(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*10+y</span></span><br><span class=\"line\"><span class=\"comment\"># reduce(fn, [1, 3, 5, 7, 9])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def char2num(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     return &#123;'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9&#125;[s]</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print reduce(fn, map(char2num, '13579'))</span></span><br><span class=\"line\"><span class=\"comment\"># print map(char2num, '123456')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def str2int(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     def fn(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#         return x*10+y</span></span><br><span class=\"line\"><span class=\"comment\">#     def char2num(str_num):</span></span><br><span class=\"line\"><span class=\"comment\">#         return &#123;'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9&#125;[str_num]</span></span><br><span class=\"line\"><span class=\"comment\">#     return reduce(fn, map(char2num, s))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def str2int_lambda(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     return reduce(lambda x, y: x*10+y, map(char2num, s))</span></span><br><span class=\"line\"><span class=\"comment\"># transfer the username into regular (nAMe into Name)using map</span></span><br><span class=\"line\"><span class=\"comment\"># User = ['adam', 'LISA', 'barT']</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def user_reg(user_list):</span></span><br><span class=\"line\"><span class=\"comment\">#         return user_list.title()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def regular_name(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     return map(user_reg, name)</span></span><br><span class=\"line\"><span class=\"comment\"># print regular_name(User)</span></span><br><span class=\"line\"><span class=\"comment\"># # using lambda below</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def regular_name_lambda(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     return map(lambda x: x.title(), name)</span></span><br><span class=\"line\"><span class=\"comment\"># print regular_name(User)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # List multiply</span></span><br><span class=\"line\"><span class=\"comment\"># a = [50, 32, 7, 12, 56, 18]</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def multiply_list_lambda(list_num):</span></span><br><span class=\"line\"><span class=\"comment\">#     return reduce(lambda x, y: x*y, list_num)</span></span><br><span class=\"line\"><span class=\"comment\"># print multiply_list_lambda(a)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # filter-sequence find odd num del rest</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_odd(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     return n % 2 == 1</span></span><br><span class=\"line\"><span class=\"comment\"># print filter(is_odd, a)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># sequence = ['A', '', None, '  ']</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def not_empty(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     return s and s.strip()</span></span><br><span class=\"line\"><span class=\"comment\"># print filter(not_empty, sequence)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># find all prime number in 0-99 and print the calculate times</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># list_1 = []</span></span><br><span class=\"line\"><span class=\"comment\"># list_2 = []</span></span><br><span class=\"line\"><span class=\"comment\"># list_3 = []</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_prime(number):</span></span><br><span class=\"line\"><span class=\"comment\">#     flag = True</span></span><br><span class=\"line\"><span class=\"comment\">#     time = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     global list_1</span></span><br><span class=\"line\"><span class=\"comment\">#     if number == 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return flag</span></span><br><span class=\"line\"><span class=\"comment\">#     elif number &lt; 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return False</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(2, number):</span></span><br><span class=\"line\"><span class=\"comment\">#         if number % i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             flag = False</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#             break</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     list_1.append(time)</span></span><br><span class=\"line\"><span class=\"comment\">#     return flag</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_prime_second(number):</span></span><br><span class=\"line\"><span class=\"comment\">#     flag = True</span></span><br><span class=\"line\"><span class=\"comment\">#     time = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     global list_2</span></span><br><span class=\"line\"><span class=\"comment\">#     if number == 2:</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#         return flag</span></span><br><span class=\"line\"><span class=\"comment\">#     elif number &lt; 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return False</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(2, number/2):</span></span><br><span class=\"line\"><span class=\"comment\">#         if number % i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             flag = False</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#             break</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             pass</span></span><br><span class=\"line\"><span class=\"comment\">#     list_2.append(time)</span></span><br><span class=\"line\"><span class=\"comment\">#     return flag</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_prime_three(number):</span></span><br><span class=\"line\"><span class=\"comment\">#     flag = True</span></span><br><span class=\"line\"><span class=\"comment\">#     time = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     if number == 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return flag</span></span><br><span class=\"line\"><span class=\"comment\">#     elif number &lt; 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return False</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(2, int(sqrt(number))):</span></span><br><span class=\"line\"><span class=\"comment\">#         if number % i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             flag = False</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#             break</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             pass</span></span><br><span class=\"line\"><span class=\"comment\">#     list_3.append(time)</span></span><br><span class=\"line\"><span class=\"comment\">#     return flag</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def add(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x + y</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(0, 99):</span></span><br><span class=\"line\"><span class=\"comment\">#     is_prime(i)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(0, 99):</span></span><br><span class=\"line\"><span class=\"comment\">#     is_prime_second(i)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(0, 99):</span></span><br><span class=\"line\"><span class=\"comment\">#     is_prime_three(i)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The prime of sequence is:\", filter(is_prime, range(0, 99))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Method one cal times:\", reduce(add, list_1)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The prime of sequence is:\", filter(is_prime_second, range(0, 99))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Method two cal times:\", reduce(add, list_2)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The prime of sequence is:\", filter(is_prime_three, range(0, 99))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Method three cal times:\", reduce(add, list_3)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chapter 6</span></span><br><span class=\"line\"><span class=\"comment\"># function as a value return :closure program</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def lazy_sum(*args):</span></span><br><span class=\"line\"><span class=\"comment\">#     def sum_test():</span></span><br><span class=\"line\"><span class=\"comment\">#         ax = 0</span></span><br><span class=\"line\"><span class=\"comment\">#         for n in args:</span></span><br><span class=\"line\"><span class=\"comment\">#             ax += n</span></span><br><span class=\"line\"><span class=\"comment\">#         return ax</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum_test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># f = lazy_sum(1, 3, 5, 7)</span></span><br><span class=\"line\"><span class=\"comment\"># print f()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def count():</span></span><br><span class=\"line\"><span class=\"comment\">#     fs = []</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(1, 4):</span></span><br><span class=\"line\"><span class=\"comment\">#         def f():</span></span><br><span class=\"line\"><span class=\"comment\">#             return i*i</span></span><br><span class=\"line\"><span class=\"comment\">#         fs.append(f)</span></span><br><span class=\"line\"><span class=\"comment\">#     return fs</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># f1, f2, f3 = count()</span></span><br><span class=\"line\"><span class=\"comment\"># print f1()</span></span><br><span class=\"line\"><span class=\"comment\"># print f2()</span></span><br><span class=\"line\"><span class=\"comment\"># print f3()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lambda function unnamed</span></span><br><span class=\"line\"><span class=\"comment\"># calculate f(x)=x^2</span></span><br><span class=\"line\"><span class=\"comment\"># print map(lambda x: x*x, [1, 2, 3, 4])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def f(x):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*x</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print map(f, [1, 2, 3, 4])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # decorator</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def now():</span></span><br><span class=\"line\"><span class=\"comment\">#     print'2016-9-1'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># g = now</span></span><br><span class=\"line\"><span class=\"comment\"># print g()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'now function name:', now.__name__, 'g function name:', g.__name__</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # example 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def log_decorator(func):  # decorator</span></span><br><span class=\"line\"><span class=\"comment\">#     def wrapper(*args, **kw):</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'call %s():' % func.__name__</span></span><br><span class=\"line\"><span class=\"comment\">#         return func(*args, **kw)</span></span><br><span class=\"line\"><span class=\"comment\">#     return wrapper</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># @log_decorator</span></span><br><span class=\"line\"><span class=\"comment\"># def now_next():</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     print '2016-10-1'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># now_next()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # example 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def log_decorator(text):</span></span><br><span class=\"line\"><span class=\"comment\">#     def decorator(func):</span></span><br><span class=\"line\"><span class=\"comment\">#         def wrapper(*args, **kw):</span></span><br><span class=\"line\"><span class=\"comment\">#             print '%s %s():' % (text, func.__name__)</span></span><br><span class=\"line\"><span class=\"comment\">#             return func(*args, **kw)</span></span><br><span class=\"line\"><span class=\"comment\">#         return wrapper</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'run decorator'</span></span><br><span class=\"line\"><span class=\"comment\">#     return decorator</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># @log_decorator('execute')</span></span><br><span class=\"line\"><span class=\"comment\"># def now():</span></span><br><span class=\"line\"><span class=\"comment\">#     print '2016-10-1'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># now()</span></span><br><span class=\"line\"><span class=\"comment\"># run sequence:log_decorator()-wrapper()- return func()[now()]- now()-return wrapper- decorator()-return decorator</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># produce and consumer multi threading</span></span><br><span class=\"line\"><span class=\"comment\"># multi processing Unix/Linux fork()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import os</span></span><br><span class=\"line\"><span class=\"comment\"># # window didn't include fork()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Process (%s) start.' % os.getpid()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># pid = os.fork()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if pid == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"I am child process (%s) and my parent is %s.\", (os.getpid(), os.getppid())</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"I am (%s) just created a child process (%s).\" % (os.getppid(), pid)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from multiprocessing import Process</span></span><br><span class=\"line\"><span class=\"comment\"># import os</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # child process run</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def child_run(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'Run child process %s (%s)...' % (name, os.getpid())</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Parent process %s ' % os.getpid()</span></span><br><span class=\"line\"><span class=\"comment\"># p = Process(target=child_run, args=('test',))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Process will start.\"</span></span><br><span class=\"line\"><span class=\"comment\"># p.start()</span></span><br><span class=\"line\"><span class=\"comment\"># p.join()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Process kill'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from multiprocessing import Process, Queue</span></span><br><span class=\"line\"><span class=\"comment\"># import os, time, random</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def write(q):</span></span><br><span class=\"line\"><span class=\"comment\">#     for value in ['A', 'B', 'C', 'D', 'E']:</span></span><br><span class=\"line\"><span class=\"comment\">#         print \"Put %s to queue\" % value</span></span><br><span class=\"line\"><span class=\"comment\">#         q.put(value)</span></span><br><span class=\"line\"><span class=\"comment\">#         time.sleep(random.random())</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def read(q):</span></span><br><span class=\"line\"><span class=\"comment\">#     while True:</span></span><br><span class=\"line\"><span class=\"comment\">#         value = q.get(True)</span></span><br><span class=\"line\"><span class=\"comment\">#         print \"Get %s from queue.\" % value</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\">#     q = Queue()</span></span><br><span class=\"line\"><span class=\"comment\">#     pw = Process(target=write, args=(q,))</span></span><br><span class=\"line\"><span class=\"comment\">#     pr = Process(target=read, args=(q,))</span></span><br><span class=\"line\"><span class=\"comment\"># # reading and writing</span></span><br><span class=\"line\"><span class=\"comment\">#     pw .start()</span></span><br><span class=\"line\"><span class=\"comment\">#     pr.start()</span></span><br><span class=\"line\"><span class=\"comment\"># # waiting pw end. A, B, C, D, E write finished</span></span><br><span class=\"line\"><span class=\"comment\">#     pw.join()</span></span><br><span class=\"line\"><span class=\"comment\"># # pr is endless a loop,must be terminate</span></span><br><span class=\"line\"><span class=\"comment\">#     pr.terminate()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # threading thread POSIX</span></span><br><span class=\"line\"><span class=\"comment\"># import time,threading</span></span><br><span class=\"line\"><span class=\"comment\"># # new thread execute</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def loop():</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'thread %s is running...' % threading.current_thread().name</span></span><br><span class=\"line\"><span class=\"comment\">#     n = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     while n &lt; 5:</span></span><br><span class=\"line\"><span class=\"comment\">#         n += 1</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'thread %s &gt;&gt;&gt; %s' % (threading.current_thread().name, n)</span></span><br><span class=\"line\"><span class=\"comment\">#         time.sleep(1)</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'thread %s ended.' % threading.current_thread().name</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print 'thread %s is running...' % threading.current_thread().name</span></span><br><span class=\"line\"><span class=\"comment\"># # built thread object using Thread</span></span><br><span class=\"line\"><span class=\"comment\"># t = threading.Thread(target=loop, name='LoopThread')</span></span><br><span class=\"line\"><span class=\"comment\"># t.start()</span></span><br><span class=\"line\"><span class=\"comment\"># t.join()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'thread %s ended.' % threading.current_thread().name</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Lock:Process copy variable,Thread share one variable</span></span><br><span class=\"line\"><span class=\"comment\"># example how Thread change one variable</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import time, threading</span></span><br><span class=\"line\"><span class=\"comment\"># # this in my bank savings</span></span><br><span class=\"line\"><span class=\"comment\"># balance = 0</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def change_it(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     global balance</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     balance += n</span></span><br><span class=\"line\"><span class=\"comment\">#     balance -= n</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def run_thread(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(100000):</span></span><br><span class=\"line\"><span class=\"comment\">#         change_it(n)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># t1 = threading.Thread(target=run_thread, args=(5,))</span></span><br><span class=\"line\"><span class=\"comment\"># t2 = threading.Thread(target=run_thread, args=(8,))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># t1.start()</span></span><br><span class=\"line\"><span class=\"comment\"># t2.start()</span></span><br><span class=\"line\"><span class=\"comment\"># t1.join()</span></span><br><span class=\"line\"><span class=\"comment\"># t2.join()</span></span><br><span class=\"line\"><span class=\"comment\"># print balance</span></span><br><span class=\"line\"><span class=\"comment\"># import threading, Queue, time</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># class Consumer(threading.Thread):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, queue):</span></span><br><span class=\"line\"><span class=\"comment\">#         threading.Thread.__init__(self)</span></span><br><span class=\"line\"><span class=\"comment\">#         self.__queue = queue</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     def run(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         while True:</span></span><br><span class=\"line\"><span class=\"comment\">#             msg = self.__queue.get()</span></span><br><span class=\"line\"><span class=\"comment\">#             if isinstance(msg, str) and msg == 'quit':</span></span><br><span class=\"line\"><span class=\"comment\">#                 break</span></span><br><span class=\"line\"><span class=\"comment\">#             print \"I am thread, and i received %s\" % msg</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'bye'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def Producer():</span></span><br><span class=\"line\"><span class=\"comment\">#     queue = Queue.Queue()</span></span><br><span class=\"line\"><span class=\"comment\">#     worker = Consumer(queue)</span></span><br><span class=\"line\"><span class=\"comment\">#     worker.start()</span></span><br><span class=\"line\"><span class=\"comment\">#     start_time = time.time()</span></span><br><span class=\"line\"><span class=\"comment\">#     while time.time()-start_time &lt; 5:</span></span><br><span class=\"line\"><span class=\"comment\">#         queue.put('something at %s' % time.time())</span></span><br><span class=\"line\"><span class=\"comment\">#         time.sleep(1)</span></span><br><span class=\"line\"><span class=\"comment\">#     queue.put('quit')</span></span><br><span class=\"line\"><span class=\"comment\">#     worker.join()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\">#     Producer()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import threading, zipfile</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># class AsyncZip(threading.Thread):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, infile, outfile):</span></span><br><span class=\"line\"><span class=\"comment\">#         threading.Thread.__init__(self)</span></span><br><span class=\"line\"><span class=\"comment\">#         self.infile = infile</span></span><br><span class=\"line\"><span class=\"comment\">#         self.outfile = outfile</span></span><br><span class=\"line\"><span class=\"comment\">#     def run(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         f = zipfile.ZipFile(self.outfile, 'w', zipfile.ZIP_DEFLATED)</span></span><br><span class=\"line\"><span class=\"comment\">#         f.write(self.infile)</span></span><br><span class=\"line\"><span class=\"comment\">#         f.close()</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'Finished background zip of: ', self.infile</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># background = AsyncZip('mydata.txt', 'myarchive.zip')</span></span><br><span class=\"line\"><span class=\"comment\"># background.start()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'The main program continues to run in foreground.'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># background.join()    # Wait for the background task to finish</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Main program waited until background was done.'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def TrimFuc(strs):</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     head=0</span></span><br><span class=\"line\"><span class=\"comment\">#     tail=len(strs)</span></span><br><span class=\"line\"><span class=\"comment\">#     while(head&lt;tail and (strs[head].isspace() or strs[head]==\"\\x00\")):</span></span><br><span class=\"line\"><span class=\"comment\">#            head += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     if head == tail:</span></span><br><span class=\"line\"><span class=\"comment\">#            return \"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     while(strs[tail-1].isspace() or strs[tail-1]==\"\\x00\"):</span></span><br><span class=\"line\"><span class=\"comment\">#            tail -= 1</span></span><br><span class=\"line\"><span class=\"comment\">#     return strs[head:tail]</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># strs = ' hello,world\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># strs1 = 'hello,world\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># print strs</span></span><br><span class=\"line\"><span class=\"comment\"># print '-----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print TrimFuc(strs)</span></span><br><span class=\"line\"><span class=\"comment\"># print TrimFuc(strs1)</span></span><br><span class=\"line\"><span class=\"comment\"># print '-----------------'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # regular expression</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import re</span></span><br><span class=\"line\"><span class=\"comment\"># # match success will return a object of match else return None</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^\\d&#123;3&#125;\\-\\d&#123;3,8&#125;$', '010-12345')</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^\\d&#123;3&#125;\\-\\d&#123;3,8&#125;$', '010 12345')</span></span><br><span class=\"line\"><span class=\"comment\"># print '-----------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># # split string with reExp and common</span></span><br><span class=\"line\"><span class=\"comment\"># print re.split(r'\\s+', 'a b   c')</span></span><br><span class=\"line\"><span class=\"comment\"># print 'ab    c'.split()</span></span><br><span class=\"line\"><span class=\"comment\"># print re.split(r'[\\s\\,]+', 'a,b, c  d')</span></span><br><span class=\"line\"><span class=\"comment\"># print re.split(r'[\\s\\,\\;]+', 'a,b;;  c  d')</span></span><br><span class=\"line\"><span class=\"comment\"># # group substring</span></span><br><span class=\"line\"><span class=\"comment\"># m = re.match(r'^(\\d&#123;3&#125;)-(\\d&#123;3,8&#125;)$', '010-12345')</span></span><br><span class=\"line\"><span class=\"comment\"># print m</span></span><br><span class=\"line\"><span class=\"comment\"># print m.group(0)</span></span><br><span class=\"line\"><span class=\"comment\"># print m.group(1)</span></span><br><span class=\"line\"><span class=\"comment\"># print m.group(2)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^(\\d+)(0*)$', '102300').groups()</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^(\\d+?)(0*)$', '102300').groups()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># re_telephone = re.compile(r'^(\\d&#123;3&#125;)-(\\d&#123;3,8&#125;)$')</span></span><br><span class=\"line\"><span class=\"comment\"># print re_telephone.match('010-8086').groups()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print'--------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'[a-z]', 'a44')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># json</span></span><br><span class=\"line\"><span class=\"comment\"># import json</span></span><br><span class=\"line\"><span class=\"comment\"># obj = [[1, 2, 3], 1992, 6.12, 'Sam', &#123;'key': (4, 5, 6), 'Tom': (7, 8, 9)&#125;]</span></span><br><span class=\"line\"><span class=\"comment\"># encode_json = json.dumps(obj)</span></span><br><span class=\"line\"><span class=\"comment\"># print repr(obj)</span></span><br><span class=\"line\"><span class=\"comment\"># print encode_json</span></span><br><span class=\"line\"><span class=\"comment\"># print 'encode_json_type', type(encode_json)</span></span><br><span class=\"line\"><span class=\"comment\"># decode_json = json.loads(encode_json)</span></span><br><span class=\"line\"><span class=\"comment\"># print 'decode_json_type', type(decode_json)</span></span><br><span class=\"line\"><span class=\"comment\"># print decode_json[4]['key']</span></span><br><span class=\"line\"><span class=\"comment\"># print decode_json</span></span><br><span class=\"line\"><span class=\"comment\"># import re</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># fields = \"oracle_username=xiaweihua\"</span></span><br><span class=\"line\"><span class=\"comment\"># print re.sub('oracle_username=', '', fields)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file_t = open('hello.data', 'w')</span></span><br><span class=\"line\"><span class=\"comment\"># for line in range(0, 9):</span></span><br><span class=\"line\"><span class=\"comment\">#     file_t.write(str(line)+'\\n')</span></span><br><span class=\"line\"><span class=\"comment\"># file_t.close()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># file_r = open('hello.data', 'r')</span></span><br><span class=\"line\"><span class=\"comment\"># print '--------'</span></span><br><span class=\"line\"><span class=\"comment\"># for line in range(0, 9):</span></span><br><span class=\"line\"><span class=\"comment\">#     print file_r.readline()</span></span><br><span class=\"line\"><span class=\"comment\">#     print '---------'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># file_r.close()</span></span><br><span class=\"line\"><span class=\"comment\"># conn = cx_Oracle.connect('themis', 'themis', '192.168.1.60/testdb')</span></span><br><span class=\"line\"><span class=\"comment\"># dsn_tns = cx_Oracle.makedsn('themis', 'themis', '192.168.1.60/testdb')</span></span><br><span class=\"line\"><span class=\"comment\"># c = conn.cursor()</span></span><br><span class=\"line\"><span class=\"comment\"># data = c.execute('desc t_redlist')</span></span><br><span class=\"line\"><span class=\"comment\"># print  data.fetchall()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># encoding decoding formal</span></span><br><span class=\"line\"><span class=\"comment\"># tup = ('abc', '123', '\\xce\\xf7\\xb0\\xb2')</span></span><br><span class=\"line\"><span class=\"comment\"># print tup[2].decode('gbk')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from random import randint</span></span><br><span class=\"line\"><span class=\"comment\"># from time import sleep, ctime</span></span><br><span class=\"line\"><span class=\"comment\"># from Queue import Queue</span></span><br><span class=\"line\"><span class=\"comment\"># import threading</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># class MyThread(threading.Thread):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, func, args, name=''):</span></span><br><span class=\"line\"><span class=\"comment\">#         threading.Thread.__init__(self)</span></span><br><span class=\"line\"><span class=\"comment\">#         self.name = name</span></span><br><span class=\"line\"><span class=\"comment\">#         self.func = func</span></span><br><span class=\"line\"><span class=\"comment\">#         self.args = args</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     def get_result(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         return self.res</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     def run(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'starting', self.name, 'at', ctime()</span></span><br><span class=\"line\"><span class=\"comment\">#         self.res = self.func(*self.args)</span></span><br><span class=\"line\"><span class=\"comment\">#         print self.name, 'finished at:', ctime()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def write_queue(queue):</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'produce apple for queue...'</span></span><br><span class=\"line\"><span class=\"comment\">#     queue.put('apple', 1)</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'apple number now is:', queue.qsize()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def read_queue(queue):</span></span><br><span class=\"line\"><span class=\"comment\">#     val = queue.get(1)</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'consume a %s from queue...' % val</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'apple number now is:', queue.qsize()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def writer(queue, loops):</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(loops):</span></span><br><span class=\"line\"><span class=\"comment\">#         write_queue(queue)</span></span><br><span class=\"line\"><span class=\"comment\">#         sleep(randint(1, 3))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def reader(queue, loops):</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(loops):</span></span><br><span class=\"line\"><span class=\"comment\">#         read_queue(queue)</span></span><br><span class=\"line\"><span class=\"comment\">#         sleep(randint(2, 5))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># funcs = [writer, reader]</span></span><br><span class=\"line\"><span class=\"comment\"># nfuncs = range(len(funcs))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def main():</span></span><br><span class=\"line\"><span class=\"comment\">#     nloops = randint(2, 5)</span></span><br><span class=\"line\"><span class=\"comment\">#     q = Queue(32)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     threads = []</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in nfuncs:</span></span><br><span class=\"line\"><span class=\"comment\">#         t = MyThread(funcs[i], (q, nloops), funcs[i].__name__)</span></span><br><span class=\"line\"><span class=\"comment\">#         threads.append(t)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in nfuncs:</span></span><br><span class=\"line\"><span class=\"comment\">#         threads[i].start()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in nfuncs:</span></span><br><span class=\"line\"><span class=\"comment\">#         threads[i].join()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'all done'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\">#     main()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># transform dictionary to XML</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> xml.etree.ElementTree <span class=\"keyword\">import</span> Element, SubElement, tostring</span><br><span class=\"line\"><span class=\"keyword\">from</span> xml.dom.minidom <span class=\"keyword\">import</span> parseString</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># BOOKs = &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#     '013269937': &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#         'title': 'Core Python Programming',</span></span><br><span class=\"line\"><span class=\"comment\">#         'edition': 2,</span></span><br><span class=\"line\"><span class=\"comment\">#         'year': 2006,</span></span><br><span class=\"line\"><span class=\"comment\">#     &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">#     '0132356139': &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#         'title': 'Python web development with Django',</span></span><br><span class=\"line\"><span class=\"comment\">#         'authors': 'Jeff Forcier:Paul Bissex:Wesley Chun',</span></span><br><span class=\"line\"><span class=\"comment\">#         'year': 2009,</span></span><br><span class=\"line\"><span class=\"comment\">#     &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">#     '0137143419': &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#         'title': 'Python Fundamentals',</span></span><br><span class=\"line\"><span class=\"comment\">#         'year': 2009,</span></span><br><span class=\"line\"><span class=\"comment\">#     &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"><span class=\"comment\"># books = Element('books')</span></span><br><span class=\"line\"><span class=\"comment\"># for isbn, info in BOOKs.iteritems():</span></span><br><span class=\"line\"><span class=\"comment\">#     book = SubElement(books, 'book')</span></span><br><span class=\"line\"><span class=\"comment\">#     info.setdefault('authors', 'Wesley Chun')</span></span><br><span class=\"line\"><span class=\"comment\">#     info.setdefault('edition', 1)</span></span><br><span class=\"line\"><span class=\"comment\">#     for key, val in info.iteritems():</span></span><br><span class=\"line\"><span class=\"comment\">#         SubElement(book, key).text = ', '.join(str(val).split(':'))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># xml = tostring(books)</span></span><br><span class=\"line\"><span class=\"comment\"># print '****Raw XML****'</span></span><br><span class=\"line\"><span class=\"comment\"># print xml</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '\\n***Pretty Printed XML'</span></span><br><span class=\"line\"><span class=\"comment\"># dom = parseString(xml)</span></span><br><span class=\"line\"><span class=\"comment\"># print dom.toprettyxml('    ')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '***Flat Structure***'</span></span><br><span class=\"line\"><span class=\"comment\"># for elmt in books.iter():</span></span><br><span class=\"line\"><span class=\"comment\">#     print elmt.tag, '-', elmt.text</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '\\n****Titles Only****'</span></span><br><span class=\"line\"><span class=\"comment\"># for book in books.findall('.//title'):</span></span><br><span class=\"line\"><span class=\"comment\">#     print book.text</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pointfile = open(<span class=\"string\">'test.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">pointfile.write(<span class=\"string\">'Hello, world'</span>)</span><br><span class=\"line\">pointfile.close()</span><br><span class=\"line\"></span><br><span class=\"line\">file_read = open(<span class=\"string\">'test.txt'</span>, <span class=\"string\">'r'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> file_read.read(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> file_read.read()</span><br><span class=\"line\"></span><br><span class=\"line\">write_again = open(<span class=\"string\">'test.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">write_again.write(<span class=\"string\">'write again.'</span>)</span><br><span class=\"line\">write_again.close()</span><br></pre></td></tr></table></figure>\n<p>版权声明：本文为博主制作文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"记录入门Python2-7所写代码\"><a href=\"#记录入门Python2-7所写代码\" class=\"headerlink\" title=\"记录入门Python2.7所写代码\"></a>记录入门Python2.7所写代码</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print '------------------------------------------------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Hello,World!'</span></span><br><span class=\"line\"><span class=\"comment\"># print 1 + 2 + \\</span></span><br><span class=\"line\"><span class=\"comment\">#     4 + 5</span></span><br><span class=\"line\"><span class=\"comment\"># print 'hello \\nworld'</span></span><br><span class=\"line\"><span class=\"comment\"># print \"\\\\nowhere\"</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '------------------------------------------------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># # Chapter2</span></span><br><span class=\"line\"><span class=\"comment\"># print '------------------------------------------------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># edward = ['Edward Sony', 42]</span></span><br><span class=\"line\"><span class=\"comment\"># john = ['John Smith', 50]</span></span><br><span class=\"line\"><span class=\"comment\"># database = [edward, john]</span></span><br><span class=\"line\"><span class=\"comment\"># print database</span></span><br></pre></td></tr></table></figure>","more":"<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br><span class=\"line\">747</span><br><span class=\"line\">748</span><br><span class=\"line\">749</span><br><span class=\"line\">750</span><br><span class=\"line\">751</span><br><span class=\"line\">752</span><br><span class=\"line\">753</span><br><span class=\"line\">754</span><br><span class=\"line\">755</span><br><span class=\"line\">756</span><br><span class=\"line\">757</span><br><span class=\"line\">758</span><br><span class=\"line\">759</span><br><span class=\"line\">760</span><br><span class=\"line\">761</span><br><span class=\"line\">762</span><br><span class=\"line\">763</span><br><span class=\"line\">764</span><br><span class=\"line\">765</span><br><span class=\"line\">766</span><br><span class=\"line\">767</span><br><span class=\"line\">768</span><br><span class=\"line\">769</span><br><span class=\"line\">770</span><br><span class=\"line\">771</span><br><span class=\"line\">772</span><br><span class=\"line\">773</span><br><span class=\"line\">774</span><br><span class=\"line\">775</span><br><span class=\"line\">776</span><br><span class=\"line\">777</span><br><span class=\"line\">778</span><br><span class=\"line\">779</span><br><span class=\"line\">780</span><br><span class=\"line\">781</span><br><span class=\"line\">782</span><br><span class=\"line\">783</span><br><span class=\"line\">784</span><br><span class=\"line\">785</span><br><span class=\"line\">786</span><br><span class=\"line\">787</span><br><span class=\"line\">788</span><br><span class=\"line\">789</span><br><span class=\"line\">790</span><br><span class=\"line\">791</span><br><span class=\"line\">792</span><br><span class=\"line\">793</span><br><span class=\"line\">794</span><br><span class=\"line\">795</span><br><span class=\"line\">796</span><br><span class=\"line\">797</span><br><span class=\"line\">798</span><br><span class=\"line\">799</span><br><span class=\"line\">800</span><br><span class=\"line\">801</span><br><span class=\"line\">802</span><br><span class=\"line\">803</span><br><span class=\"line\">804</span><br><span class=\"line\">805</span><br><span class=\"line\">806</span><br><span class=\"line\">807</span><br><span class=\"line\">808</span><br><span class=\"line\">809</span><br><span class=\"line\">810</span><br><span class=\"line\">811</span><br><span class=\"line\">812</span><br><span class=\"line\">813</span><br><span class=\"line\">814</span><br><span class=\"line\">815</span><br><span class=\"line\">816</span><br><span class=\"line\">817</span><br><span class=\"line\">818</span><br><span class=\"line\">819</span><br><span class=\"line\">820</span><br><span class=\"line\">821</span><br><span class=\"line\">822</span><br><span class=\"line\">823</span><br><span class=\"line\">824</span><br><span class=\"line\">825</span><br><span class=\"line\">826</span><br><span class=\"line\">827</span><br><span class=\"line\">828</span><br><span class=\"line\">829</span><br><span class=\"line\">830</span><br><span class=\"line\">831</span><br><span class=\"line\">832</span><br><span class=\"line\">833</span><br><span class=\"line\">834</span><br><span class=\"line\">835</span><br><span class=\"line\">836</span><br><span class=\"line\">837</span><br><span class=\"line\">838</span><br><span class=\"line\">839</span><br><span class=\"line\">840</span><br><span class=\"line\">841</span><br><span class=\"line\">842</span><br><span class=\"line\">843</span><br><span class=\"line\">844</span><br><span class=\"line\">845</span><br><span class=\"line\">846</span><br><span class=\"line\">847</span><br><span class=\"line\">848</span><br><span class=\"line\">849</span><br><span class=\"line\">850</span><br><span class=\"line\">851</span><br><span class=\"line\">852</span><br><span class=\"line\">853</span><br><span class=\"line\">854</span><br><span class=\"line\">855</span><br><span class=\"line\">856</span><br><span class=\"line\">857</span><br><span class=\"line\">858</span><br><span class=\"line\">859</span><br><span class=\"line\">860</span><br><span class=\"line\">861</span><br><span class=\"line\">862</span><br><span class=\"line\">863</span><br><span class=\"line\">864</span><br><span class=\"line\">865</span><br><span class=\"line\">866</span><br><span class=\"line\">867</span><br><span class=\"line\">868</span><br><span class=\"line\">869</span><br><span class=\"line\">870</span><br><span class=\"line\">871</span><br><span class=\"line\">872</span><br><span class=\"line\">873</span><br><span class=\"line\">874</span><br><span class=\"line\">875</span><br><span class=\"line\">876</span><br><span class=\"line\">877</span><br><span class=\"line\">878</span><br><span class=\"line\">879</span><br><span class=\"line\">880</span><br><span class=\"line\">881</span><br><span class=\"line\">882</span><br><span class=\"line\">883</span><br><span class=\"line\">884</span><br><span class=\"line\">885</span><br><span class=\"line\">886</span><br><span class=\"line\">887</span><br><span class=\"line\">888</span><br><span class=\"line\">889</span><br><span class=\"line\">890</span><br><span class=\"line\">891</span><br><span class=\"line\">892</span><br><span class=\"line\">893</span><br><span class=\"line\">894</span><br><span class=\"line\">895</span><br><span class=\"line\">896</span><br><span class=\"line\">897</span><br><span class=\"line\">898</span><br><span class=\"line\">899</span><br><span class=\"line\">900</span><br><span class=\"line\">901</span><br><span class=\"line\">902</span><br><span class=\"line\">903</span><br><span class=\"line\">904</span><br><span class=\"line\">905</span><br><span class=\"line\">906</span><br><span class=\"line\">907</span><br><span class=\"line\">908</span><br><span class=\"line\">909</span><br><span class=\"line\">910</span><br><span class=\"line\">911</span><br><span class=\"line\">912</span><br><span class=\"line\">913</span><br><span class=\"line\">914</span><br><span class=\"line\">915</span><br><span class=\"line\">916</span><br><span class=\"line\">917</span><br><span class=\"line\">918</span><br><span class=\"line\">919</span><br><span class=\"line\">920</span><br><span class=\"line\">921</span><br><span class=\"line\">922</span><br><span class=\"line\">923</span><br><span class=\"line\">924</span><br><span class=\"line\">925</span><br><span class=\"line\">926</span><br><span class=\"line\">927</span><br><span class=\"line\">928</span><br><span class=\"line\">929</span><br><span class=\"line\">930</span><br><span class=\"line\">931</span><br><span class=\"line\">932</span><br><span class=\"line\">933</span><br><span class=\"line\">934</span><br><span class=\"line\">935</span><br><span class=\"line\">936</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># greeting = 'hello'</span></span><br><span class=\"line\"><span class=\"comment\"># print greeting[0], '&amp;', greeting[-1]</span></span><br><span class=\"line\"><span class=\"comment\"># number = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</span></span><br><span class=\"line\"><span class=\"comment\"># print number[3:6]</span></span><br><span class=\"line\"><span class=\"comment\"># print number[:3]</span></span><br><span class=\"line\"><span class=\"comment\"># print number[:]</span></span><br><span class=\"line\"><span class=\"comment\"># print(number[0:10:2])</span></span><br><span class=\"line\"><span class=\"comment\"># print(number[10:0:-2])</span></span><br><span class=\"line\"><span class=\"comment\"># print([1, 2, 3]+[4, 5, 6])</span></span><br><span class=\"line\"><span class=\"comment\"># print 'me'*10</span></span><br><span class=\"line\"><span class=\"comment\"># a = \"Hello,World!\"</span></span><br><span class=\"line\"><span class=\"comment\"># print('Hello' in a)</span></span><br><span class=\"line\"><span class=\"comment\"># print 'len =', len(number)</span></span><br><span class=\"line\"><span class=\"comment\"># print(max(number))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # List method</span></span><br><span class=\"line\"><span class=\"comment\"># print list('Hello')</span></span><br><span class=\"line\"><span class=\"comment\"># x = [1, 1, 1]</span></span><br><span class=\"line\"><span class=\"comment\"># x[1] = 2</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\"># name = ['Jack', 'Rose', 'Hua']</span></span><br><span class=\"line\"><span class=\"comment\"># del name[0]</span></span><br><span class=\"line\"><span class=\"comment\"># print name</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor = ['P', 'e', 'r', 'l']</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor[2:] = list('ar')</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor[1:3] = []</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># nameValueFor.append('erl')</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor</span></span><br><span class=\"line\"><span class=\"comment\"># print nameValueFor.count('r')</span></span><br><span class=\"line\"><span class=\"comment\"># a = [1, 2, 3]</span></span><br><span class=\"line\"><span class=\"comment\"># b = [4, 5, 6]</span></span><br><span class=\"line\"><span class=\"comment\"># a.extend(b)</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># a.insert(0, -1)</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># print a.pop()</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># a.remove(-1)</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># a.reverse()</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># a.sort()</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># b = a.sort()</span></span><br><span class=\"line\"><span class=\"comment\"># print b</span></span><br><span class=\"line\"><span class=\"comment\"># print 1, 2, 3</span></span><br><span class=\"line\"><span class=\"comment\"># print ()</span></span><br><span class=\"line\"><span class=\"comment\"># print tuple([1, 2, 3])</span></span><br><span class=\"line\"><span class=\"comment\"># print tuple('abc')</span></span><br><span class=\"line\"><span class=\"comment\"># print tuple((1, 2, 3))</span></span><br><span class=\"line\"><span class=\"comment\"># # Chapter3</span></span><br><span class=\"line\"><span class=\"comment\"># print \"hello,%s!\" % 'world'</span></span><br><span class=\"line\"><span class=\"comment\"># from math import pi</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Pi=%.5f\" % pi</span></span><br><span class=\"line\"><span class=\"comment\"># from string import Template</span></span><br><span class=\"line\"><span class=\"comment\"># s = Template('$x,glorious $x!')</span></span><br><span class=\"line\"><span class=\"comment\"># s.substitute(x='slam')</span></span><br><span class=\"line\"><span class=\"comment\"># print '%u + %u = %u' % (1, 1, 2)</span></span><br><span class=\"line\"><span class=\"comment\"># print '%10f' % pi</span></span><br><span class=\"line\"><span class=\"comment\"># print '%10.2f' % pi</span></span><br><span class=\"line\"><span class=\"comment\"># print '%.2f' % pi</span></span><br><span class=\"line\"><span class=\"comment\"># title = 'Hello,Python'</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Dst =', title.find('Python')</span></span><br><span class=\"line\"><span class=\"comment\"># seq = ['1', '2', '3', '4', '5']</span></span><br><span class=\"line\"><span class=\"comment\"># plus = '+'</span></span><br><span class=\"line\"><span class=\"comment\"># print plus.join(seq)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"ABC\".lower()</span></span><br><span class=\"line\"><span class=\"comment\"># print \"1+2+3+4\".split('+')</span></span><br><span class=\"line\"><span class=\"comment\"># print \"/usr/bin/env\".split('/')</span></span><br><span class=\"line\"><span class=\"comment\"># # Chapter4 dictionary</span></span><br><span class=\"line\"><span class=\"comment\"># phoneBook = &#123;'Alice': '2341', 'Beth': '9102', 'Cecil': '3258'&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># print phoneBook</span></span><br><span class=\"line\"><span class=\"comment\"># items = [('name', 'Gumby'), ('age', 42)]</span></span><br><span class=\"line\"><span class=\"comment\"># print dict(items)</span></span><br><span class=\"line\"><span class=\"comment\"># d = dict(items)</span></span><br><span class=\"line\"><span class=\"comment\"># print d['name']</span></span><br><span class=\"line\"><span class=\"comment\"># print dict(name='Nice', age=42)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"BasicMethodOfDictionary\", \"len =\", len(phoneBook), \"Alice's Phone = \", phoneBook['Alice']</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Gumby's phone number is %(Alice)s.\" % phoneBook</span></span><br><span class=\"line\"><span class=\"comment\"># # DeepCopy And shallowCopy</span></span><br><span class=\"line\"><span class=\"comment\"># from copy import deepcopy</span></span><br><span class=\"line\"><span class=\"comment\"># DeepCopyOfPB = deepcopy(phoneBook)</span></span><br><span class=\"line\"><span class=\"comment\"># phoneBook.clear()</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Phone = \", phoneBook</span></span><br><span class=\"line\"><span class=\"comment\"># print \"DeepCopy = \", DeepCopyOfPB</span></span><br><span class=\"line\"><span class=\"comment\"># ShallowCopyOfPB = DeepCopyOfPB.copy()</span></span><br><span class=\"line\"><span class=\"comment\"># DeepCopyOfPB.clear()</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Shallow = \", ShallowCopyOfPB</span></span><br><span class=\"line\"><span class=\"comment\"># phoneBook = deepcopy(ShallowCopyOfPB)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"setdefault(key)\", phoneBook.setdefault(\"Alice\")</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># # Chapter 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print 'age', 42</span></span><br><span class=\"line\"><span class=\"comment\"># import math as foobar</span></span><br><span class=\"line\"><span class=\"comment\"># print foobar.sqrt(4)</span></span><br><span class=\"line\"><span class=\"comment\"># x, y, z = 1, 2, 3</span></span><br><span class=\"line\"><span class=\"comment\"># print x, y, z</span></span><br><span class=\"line\"><span class=\"comment\"># x, y = y, x</span></span><br><span class=\"line\"><span class=\"comment\"># print x, y, z</span></span><br><span class=\"line\"><span class=\"comment\"># values = 1, 2, 3</span></span><br><span class=\"line\"><span class=\"comment\"># print values</span></span><br><span class=\"line\"><span class=\"comment\"># a, b, c = values</span></span><br><span class=\"line\"><span class=\"comment\"># print a</span></span><br><span class=\"line\"><span class=\"comment\"># # link valued</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># link1 = link2 = sqrt(4)</span></span><br><span class=\"line\"><span class=\"comment\"># print link1, link2</span></span><br><span class=\"line\"><span class=\"comment\"># print bool(42)</span></span><br><span class=\"line\"><span class=\"comment\"># name = raw_input(\"What's your name?\")</span></span><br><span class=\"line\"><span class=\"comment\"># if name.endswith('Hua'):</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"Hello,Mr.Hua\"</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"Hello,Stranger\"</span></span><br><span class=\"line\"><span class=\"comment\"># num = raw_input(\"Enter a number.\")</span></span><br><span class=\"line\"><span class=\"comment\"># if num &gt; 0:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"The number is positive\"</span></span><br><span class=\"line\"><span class=\"comment\"># elif num &lt; 0:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"The number is negative\"</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"The number is zero\"</span></span><br><span class=\"line\"><span class=\"comment\"># assert</span></span><br><span class=\"line\"><span class=\"comment\"># age = 10</span></span><br><span class=\"line\"><span class=\"comment\"># assert 0 &lt; age &lt;100</span></span><br><span class=\"line\"><span class=\"comment\"># age = -1</span></span><br><span class=\"line\"><span class=\"comment\"># fishNum = 1</span></span><br><span class=\"line\"><span class=\"comment\"># assert 10 &lt; fishNum &lt; 100, 'Fish too less'</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># while x &lt;= 100:</span></span><br><span class=\"line\"><span class=\"comment\">#     print x</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\"># name = ''</span></span><br><span class=\"line\"><span class=\"comment\"># while not name:</span></span><br><span class=\"line\"><span class=\"comment\">#     name = raw_input(\"Please enter your name:\")</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"Hello,%s\" % name</span></span><br><span class=\"line\"><span class=\"comment\"># words = ['this', 'is', 'an', 'ex', 'parrot']</span></span><br><span class=\"line\"><span class=\"comment\"># for word in words:</span></span><br><span class=\"line\"><span class=\"comment\">#     print word</span></span><br><span class=\"line\"><span class=\"comment\"># d = &#123;'x': 1, 'y': 2, 'z': 3&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># for key in d:</span></span><br><span class=\"line\"><span class=\"comment\">#     print key, 'correspond to', d[key]</span></span><br><span class=\"line\"><span class=\"comment\"># for key, value in d.items():</span></span><br><span class=\"line\"><span class=\"comment\">#     print key, 'correspond to', d[key]</span></span><br><span class=\"line\"><span class=\"comment\"># names = ['Anne', 'Beth', 'George', 'Damon']</span></span><br><span class=\"line\"><span class=\"comment\"># age = [12, 45, 32, 102]</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(len(names)):</span></span><br><span class=\"line\"><span class=\"comment\">#     print names[i], 'is', age[i], 'years old'</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># for n in range(99, 0, -1):</span></span><br><span class=\"line\"><span class=\"comment\">#     root = sqrt(n)</span></span><br><span class=\"line\"><span class=\"comment\">#     if root == int(root):</span></span><br><span class=\"line\"><span class=\"comment\">#         print n</span></span><br><span class=\"line\"><span class=\"comment\">#         break</span></span><br><span class=\"line\"><span class=\"comment\"># print [x*x for x in range(10) if x % 3 == 0]</span></span><br><span class=\"line\"><span class=\"comment\"># exec \"print 'Hello,world'\"</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># scope = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># exec 'sqrt=1' in scope</span></span><br><span class=\"line\"><span class=\"comment\"># print sqrt(4)</span></span><br><span class=\"line\"><span class=\"comment\"># print scope['sqrt']</span></span><br><span class=\"line\"><span class=\"comment\"># eval(raw_input(\"Enter a exp(Calculate):\"))</span></span><br><span class=\"line\"><span class=\"comment\"># import math</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># y = math.sqrt</span></span><br><span class=\"line\"><span class=\"comment\"># print callable(x)</span></span><br><span class=\"line\"><span class=\"comment\"># print callable(y)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def hello(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     return 'Hello,'+name+'!'</span></span><br><span class=\"line\"><span class=\"comment\"># print hello('World')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def square(x):</span></span><br><span class=\"line\"><span class=\"comment\">#     \"\"\"Calculate x*x\"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*x</span></span><br><span class=\"line\"><span class=\"comment\"># print square.__doc__</span></span><br><span class=\"line\"><span class=\"comment\"># print square(5)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def test():</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'This is print'</span></span><br><span class=\"line\"><span class=\"comment\">#     return</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'This is not'</span></span><br><span class=\"line\"><span class=\"comment\"># print '----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># x = test()</span></span><br><span class=\"line\"><span class=\"comment\"># print '----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print test()</span></span><br><span class=\"line\"><span class=\"comment\"># print '----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def try_to_change(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     n = 'Mr.Hua'</span></span><br><span class=\"line\"><span class=\"comment\"># name = 'Jack'</span></span><br><span class=\"line\"><span class=\"comment\"># try_to_change(name)</span></span><br><span class=\"line\"><span class=\"comment\"># print name</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def change(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     n[0] = \"Mr.Tom\"</span></span><br><span class=\"line\"><span class=\"comment\"># names = ['Mrs.Entity', 'Mr.Gates']</span></span><br><span class=\"line\"><span class=\"comment\"># change(names)</span></span><br><span class=\"line\"><span class=\"comment\"># print names</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># storage = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># storage['first'] = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># storage['middle'] = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># storage['last'] = &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># me = 'Magus lie het'</span></span><br><span class=\"line\"><span class=\"comment\"># storage['first']['Magus'] = [me]</span></span><br><span class=\"line\"><span class=\"comment\"># storage['middle']['lie'] = [me]</span></span><br><span class=\"line\"><span class=\"comment\"># storage['last']['het'] = [me]</span></span><br><span class=\"line\"><span class=\"comment\"># print storage['middle']['lie']</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # collection method</span></span><br><span class=\"line\"><span class=\"comment\"># def print_params(*params):</span></span><br><span class=\"line\"><span class=\"comment\">#     \"\"\"single star return a tuple\"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     print params</span></span><br><span class=\"line\"><span class=\"comment\"># print_params(\"Testing\")</span></span><br><span class=\"line\"><span class=\"comment\"># print_params(\"Tsinghua\", \"university\")</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def print_params_stars(**params):</span></span><br><span class=\"line\"><span class=\"comment\">#     \"\"\"double star return a dictionary\"\"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     print params</span></span><br><span class=\"line\"><span class=\"comment\"># print_params_stars(x=1, y=2, z=3)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # reverse of collection</span></span><br><span class=\"line\"><span class=\"comment\"># def add(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x+y</span></span><br><span class=\"line\"><span class=\"comment\"># params = (1, 2)</span></span><br><span class=\"line\"><span class=\"comment\"># print add(*params)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def add_three(x, y, z):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x+y+z</span></span><br><span class=\"line\"><span class=\"comment\"># params_tuple = &#123;'x': 1, 'y': 2, 'z': 3, &#125;</span></span><br><span class=\"line\"><span class=\"comment\"># print add_three(**params_tuple)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # domain: variable is a dictionary vars() return a dictionary</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># scope = vars()</span></span><br><span class=\"line\"><span class=\"comment\"># scope['x']</span></span><br><span class=\"line\"><span class=\"comment\"># scope['x'] += 1</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # global variable</span></span><br><span class=\"line\"><span class=\"comment\"># x = 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def change_global():</span></span><br><span class=\"line\"><span class=\"comment\">#     global x</span></span><br><span class=\"line\"><span class=\"comment\">#     x += 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def factorial(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     if n == 1:</span></span><br><span class=\"line\"><span class=\"comment\">#         return 1</span></span><br><span class=\"line\"><span class=\"comment\">#     else:</span></span><br><span class=\"line\"><span class=\"comment\">#         return n*factorial(n-1)</span></span><br><span class=\"line\"><span class=\"comment\"># print factorial(10)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def binary_search(sequence, number, lower, upper):</span></span><br><span class=\"line\"><span class=\"comment\">#     if lower == upper:</span></span><br><span class=\"line\"><span class=\"comment\">#         assert number == sequence[upper]</span></span><br><span class=\"line\"><span class=\"comment\">#         return upper</span></span><br><span class=\"line\"><span class=\"comment\">#     else:</span></span><br><span class=\"line\"><span class=\"comment\">#         middle = (lower + upper)//2</span></span><br><span class=\"line\"><span class=\"comment\">#         if number &gt; sequence[middle]:</span></span><br><span class=\"line\"><span class=\"comment\">#             return binary_search(sequence, number, middle + 1, upper)</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             return binary_search(sequence, number, lower, middle)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># seq = [50, 21, 32, 22, 94, 80, 1, 6]</span></span><br><span class=\"line\"><span class=\"comment\"># seq.sort()</span></span><br><span class=\"line\"><span class=\"comment\"># print seq</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The dst of Number is\", binary_search(seq, 22, 0, len(seq)-1) + 1</span></span><br><span class=\"line\"><span class=\"comment\"># L = []</span></span><br><span class=\"line\"><span class=\"comment\"># n = 1</span></span><br><span class=\"line\"><span class=\"comment\"># while n &lt;= 99:</span></span><br><span class=\"line\"><span class=\"comment\">#     L.append(n)</span></span><br><span class=\"line\"><span class=\"comment\">#     n += 2</span></span><br><span class=\"line\"><span class=\"comment\"># print L</span></span><br><span class=\"line\"><span class=\"comment\"># higher-order function:function and variable</span></span><br><span class=\"line\"><span class=\"comment\"># x = abs(-10)</span></span><br><span class=\"line\"><span class=\"comment\"># print x</span></span><br><span class=\"line\"><span class=\"comment\"># print abs</span></span><br><span class=\"line\"><span class=\"comment\"># f = abs</span></span><br><span class=\"line\"><span class=\"comment\"># y = f(-10)</span></span><br><span class=\"line\"><span class=\"comment\"># print y</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def add(a, b, function):</span></span><br><span class=\"line\"><span class=\"comment\">#     return function(a)+function(b)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"This function program result is:\", add(-10, -10, f)</span></span><br><span class=\"line\"><span class=\"comment\"># built in function:map and reduce</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def f(x):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*x</span></span><br><span class=\"line\"><span class=\"comment\"># print map(f, [1, 2, 3, 4, 5])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print map(str, [1, 2, 3, 4, 5])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># reduce function receive two params x1,x2.Input f get y1,then input f with y1 and x3,and so on</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def fn(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*10+y</span></span><br><span class=\"line\"><span class=\"comment\"># reduce(fn, [1, 3, 5, 7, 9])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def char2num(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     return &#123;'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9&#125;[s]</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print reduce(fn, map(char2num, '13579'))</span></span><br><span class=\"line\"><span class=\"comment\"># print map(char2num, '123456')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def str2int(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     def fn(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#         return x*10+y</span></span><br><span class=\"line\"><span class=\"comment\">#     def char2num(str_num):</span></span><br><span class=\"line\"><span class=\"comment\">#         return &#123;'0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9&#125;[str_num]</span></span><br><span class=\"line\"><span class=\"comment\">#     return reduce(fn, map(char2num, s))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def str2int_lambda(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     return reduce(lambda x, y: x*10+y, map(char2num, s))</span></span><br><span class=\"line\"><span class=\"comment\"># transfer the username into regular (nAMe into Name)using map</span></span><br><span class=\"line\"><span class=\"comment\"># User = ['adam', 'LISA', 'barT']</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def user_reg(user_list):</span></span><br><span class=\"line\"><span class=\"comment\">#         return user_list.title()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def regular_name(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     return map(user_reg, name)</span></span><br><span class=\"line\"><span class=\"comment\"># print regular_name(User)</span></span><br><span class=\"line\"><span class=\"comment\"># # using lambda below</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def regular_name_lambda(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     return map(lambda x: x.title(), name)</span></span><br><span class=\"line\"><span class=\"comment\"># print regular_name(User)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # List multiply</span></span><br><span class=\"line\"><span class=\"comment\"># a = [50, 32, 7, 12, 56, 18]</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def multiply_list_lambda(list_num):</span></span><br><span class=\"line\"><span class=\"comment\">#     return reduce(lambda x, y: x*y, list_num)</span></span><br><span class=\"line\"><span class=\"comment\"># print multiply_list_lambda(a)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # filter-sequence find odd num del rest</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_odd(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     return n % 2 == 1</span></span><br><span class=\"line\"><span class=\"comment\"># print filter(is_odd, a)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># sequence = ['A', '', None, '  ']</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def not_empty(s):</span></span><br><span class=\"line\"><span class=\"comment\">#     return s and s.strip()</span></span><br><span class=\"line\"><span class=\"comment\"># print filter(not_empty, sequence)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># find all prime number in 0-99 and print the calculate times</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from math import sqrt</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># list_1 = []</span></span><br><span class=\"line\"><span class=\"comment\"># list_2 = []</span></span><br><span class=\"line\"><span class=\"comment\"># list_3 = []</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_prime(number):</span></span><br><span class=\"line\"><span class=\"comment\">#     flag = True</span></span><br><span class=\"line\"><span class=\"comment\">#     time = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     global list_1</span></span><br><span class=\"line\"><span class=\"comment\">#     if number == 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return flag</span></span><br><span class=\"line\"><span class=\"comment\">#     elif number &lt; 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return False</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(2, number):</span></span><br><span class=\"line\"><span class=\"comment\">#         if number % i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             flag = False</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#             break</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     list_1.append(time)</span></span><br><span class=\"line\"><span class=\"comment\">#     return flag</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_prime_second(number):</span></span><br><span class=\"line\"><span class=\"comment\">#     flag = True</span></span><br><span class=\"line\"><span class=\"comment\">#     time = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     global list_2</span></span><br><span class=\"line\"><span class=\"comment\">#     if number == 2:</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#         return flag</span></span><br><span class=\"line\"><span class=\"comment\">#     elif number &lt; 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return False</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(2, number/2):</span></span><br><span class=\"line\"><span class=\"comment\">#         if number % i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             flag = False</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#             break</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             pass</span></span><br><span class=\"line\"><span class=\"comment\">#     list_2.append(time)</span></span><br><span class=\"line\"><span class=\"comment\">#     return flag</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def is_prime_three(number):</span></span><br><span class=\"line\"><span class=\"comment\">#     flag = True</span></span><br><span class=\"line\"><span class=\"comment\">#     time = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     if number == 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return flag</span></span><br><span class=\"line\"><span class=\"comment\">#     elif number &lt; 2:</span></span><br><span class=\"line\"><span class=\"comment\">#         return False</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(2, int(sqrt(number))):</span></span><br><span class=\"line\"><span class=\"comment\">#         if number % i == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#             flag = False</span></span><br><span class=\"line\"><span class=\"comment\">#             time += 1</span></span><br><span class=\"line\"><span class=\"comment\">#             break</span></span><br><span class=\"line\"><span class=\"comment\">#         else:</span></span><br><span class=\"line\"><span class=\"comment\">#             pass</span></span><br><span class=\"line\"><span class=\"comment\">#     list_3.append(time)</span></span><br><span class=\"line\"><span class=\"comment\">#     return flag</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def add(x, y):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x + y</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(0, 99):</span></span><br><span class=\"line\"><span class=\"comment\">#     is_prime(i)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(0, 99):</span></span><br><span class=\"line\"><span class=\"comment\">#     is_prime_second(i)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(0, 99):</span></span><br><span class=\"line\"><span class=\"comment\">#     is_prime_three(i)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The prime of sequence is:\", filter(is_prime, range(0, 99))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Method one cal times:\", reduce(add, list_1)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The prime of sequence is:\", filter(is_prime_second, range(0, 99))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Method two cal times:\", reduce(add, list_2)</span></span><br><span class=\"line\"><span class=\"comment\"># print \"The prime of sequence is:\", filter(is_prime_three, range(0, 99))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Method three cal times:\", reduce(add, list_3)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># chapter 6</span></span><br><span class=\"line\"><span class=\"comment\"># function as a value return :closure program</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def lazy_sum(*args):</span></span><br><span class=\"line\"><span class=\"comment\">#     def sum_test():</span></span><br><span class=\"line\"><span class=\"comment\">#         ax = 0</span></span><br><span class=\"line\"><span class=\"comment\">#         for n in args:</span></span><br><span class=\"line\"><span class=\"comment\">#             ax += n</span></span><br><span class=\"line\"><span class=\"comment\">#         return ax</span></span><br><span class=\"line\"><span class=\"comment\">#     return sum_test</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># f = lazy_sum(1, 3, 5, 7)</span></span><br><span class=\"line\"><span class=\"comment\"># print f()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def count():</span></span><br><span class=\"line\"><span class=\"comment\">#     fs = []</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(1, 4):</span></span><br><span class=\"line\"><span class=\"comment\">#         def f():</span></span><br><span class=\"line\"><span class=\"comment\">#             return i*i</span></span><br><span class=\"line\"><span class=\"comment\">#         fs.append(f)</span></span><br><span class=\"line\"><span class=\"comment\">#     return fs</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># f1, f2, f3 = count()</span></span><br><span class=\"line\"><span class=\"comment\"># print f1()</span></span><br><span class=\"line\"><span class=\"comment\"># print f2()</span></span><br><span class=\"line\"><span class=\"comment\"># print f3()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># lambda function unnamed</span></span><br><span class=\"line\"><span class=\"comment\"># calculate f(x)=x^2</span></span><br><span class=\"line\"><span class=\"comment\"># print map(lambda x: x*x, [1, 2, 3, 4])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def f(x):</span></span><br><span class=\"line\"><span class=\"comment\">#     return x*x</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print map(f, [1, 2, 3, 4])</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # decorator</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def now():</span></span><br><span class=\"line\"><span class=\"comment\">#     print'2016-9-1'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># g = now</span></span><br><span class=\"line\"><span class=\"comment\"># print g()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'now function name:', now.__name__, 'g function name:', g.__name__</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # example 1</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def log_decorator(func):  # decorator</span></span><br><span class=\"line\"><span class=\"comment\">#     def wrapper(*args, **kw):</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'call %s():' % func.__name__</span></span><br><span class=\"line\"><span class=\"comment\">#         return func(*args, **kw)</span></span><br><span class=\"line\"><span class=\"comment\">#     return wrapper</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># @log_decorator</span></span><br><span class=\"line\"><span class=\"comment\"># def now_next():</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     print '2016-10-1'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># now_next()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # example 2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def log_decorator(text):</span></span><br><span class=\"line\"><span class=\"comment\">#     def decorator(func):</span></span><br><span class=\"line\"><span class=\"comment\">#         def wrapper(*args, **kw):</span></span><br><span class=\"line\"><span class=\"comment\">#             print '%s %s():' % (text, func.__name__)</span></span><br><span class=\"line\"><span class=\"comment\">#             return func(*args, **kw)</span></span><br><span class=\"line\"><span class=\"comment\">#         return wrapper</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'run decorator'</span></span><br><span class=\"line\"><span class=\"comment\">#     return decorator</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># @log_decorator('execute')</span></span><br><span class=\"line\"><span class=\"comment\"># def now():</span></span><br><span class=\"line\"><span class=\"comment\">#     print '2016-10-1'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># now()</span></span><br><span class=\"line\"><span class=\"comment\"># run sequence:log_decorator()-wrapper()- return func()[now()]- now()-return wrapper- decorator()-return decorator</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># produce and consumer multi threading</span></span><br><span class=\"line\"><span class=\"comment\"># multi processing Unix/Linux fork()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import os</span></span><br><span class=\"line\"><span class=\"comment\"># # window didn't include fork()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Process (%s) start.' % os.getpid()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># pid = os.fork()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if pid == 0:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"I am child process (%s) and my parent is %s.\", (os.getpid(), os.getppid())</span></span><br><span class=\"line\"><span class=\"comment\"># else:</span></span><br><span class=\"line\"><span class=\"comment\">#     print \"I am (%s) just created a child process (%s).\" % (os.getppid(), pid)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from multiprocessing import Process</span></span><br><span class=\"line\"><span class=\"comment\"># import os</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # child process run</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def child_run(name):</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'Run child process %s (%s)...' % (name, os.getpid())</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Parent process %s ' % os.getpid()</span></span><br><span class=\"line\"><span class=\"comment\"># p = Process(target=child_run, args=('test',))</span></span><br><span class=\"line\"><span class=\"comment\"># print \"Process will start.\"</span></span><br><span class=\"line\"><span class=\"comment\"># p.start()</span></span><br><span class=\"line\"><span class=\"comment\"># p.join()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Process kill'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from multiprocessing import Process, Queue</span></span><br><span class=\"line\"><span class=\"comment\"># import os, time, random</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def write(q):</span></span><br><span class=\"line\"><span class=\"comment\">#     for value in ['A', 'B', 'C', 'D', 'E']:</span></span><br><span class=\"line\"><span class=\"comment\">#         print \"Put %s to queue\" % value</span></span><br><span class=\"line\"><span class=\"comment\">#         q.put(value)</span></span><br><span class=\"line\"><span class=\"comment\">#         time.sleep(random.random())</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def read(q):</span></span><br><span class=\"line\"><span class=\"comment\">#     while True:</span></span><br><span class=\"line\"><span class=\"comment\">#         value = q.get(True)</span></span><br><span class=\"line\"><span class=\"comment\">#         print \"Get %s from queue.\" % value</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\">#     q = Queue()</span></span><br><span class=\"line\"><span class=\"comment\">#     pw = Process(target=write, args=(q,))</span></span><br><span class=\"line\"><span class=\"comment\">#     pr = Process(target=read, args=(q,))</span></span><br><span class=\"line\"><span class=\"comment\"># # reading and writing</span></span><br><span class=\"line\"><span class=\"comment\">#     pw .start()</span></span><br><span class=\"line\"><span class=\"comment\">#     pr.start()</span></span><br><span class=\"line\"><span class=\"comment\"># # waiting pw end. A, B, C, D, E write finished</span></span><br><span class=\"line\"><span class=\"comment\">#     pw.join()</span></span><br><span class=\"line\"><span class=\"comment\"># # pr is endless a loop,must be terminate</span></span><br><span class=\"line\"><span class=\"comment\">#     pr.terminate()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # threading thread POSIX</span></span><br><span class=\"line\"><span class=\"comment\"># import time,threading</span></span><br><span class=\"line\"><span class=\"comment\"># # new thread execute</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def loop():</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'thread %s is running...' % threading.current_thread().name</span></span><br><span class=\"line\"><span class=\"comment\">#     n = 0</span></span><br><span class=\"line\"><span class=\"comment\">#     while n &lt; 5:</span></span><br><span class=\"line\"><span class=\"comment\">#         n += 1</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'thread %s &gt;&gt;&gt; %s' % (threading.current_thread().name, n)</span></span><br><span class=\"line\"><span class=\"comment\">#         time.sleep(1)</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'thread %s ended.' % threading.current_thread().name</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print 'thread %s is running...' % threading.current_thread().name</span></span><br><span class=\"line\"><span class=\"comment\"># # built thread object using Thread</span></span><br><span class=\"line\"><span class=\"comment\"># t = threading.Thread(target=loop, name='LoopThread')</span></span><br><span class=\"line\"><span class=\"comment\"># t.start()</span></span><br><span class=\"line\"><span class=\"comment\"># t.join()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'thread %s ended.' % threading.current_thread().name</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Lock:Process copy variable,Thread share one variable</span></span><br><span class=\"line\"><span class=\"comment\"># example how Thread change one variable</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import time, threading</span></span><br><span class=\"line\"><span class=\"comment\"># # this in my bank savings</span></span><br><span class=\"line\"><span class=\"comment\"># balance = 0</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def change_it(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     global balance</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     balance += n</span></span><br><span class=\"line\"><span class=\"comment\">#     balance -= n</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def run_thread(n):</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(100000):</span></span><br><span class=\"line\"><span class=\"comment\">#         change_it(n)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># t1 = threading.Thread(target=run_thread, args=(5,))</span></span><br><span class=\"line\"><span class=\"comment\"># t2 = threading.Thread(target=run_thread, args=(8,))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># t1.start()</span></span><br><span class=\"line\"><span class=\"comment\"># t2.start()</span></span><br><span class=\"line\"><span class=\"comment\"># t1.join()</span></span><br><span class=\"line\"><span class=\"comment\"># t2.join()</span></span><br><span class=\"line\"><span class=\"comment\"># print balance</span></span><br><span class=\"line\"><span class=\"comment\"># import threading, Queue, time</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># class Consumer(threading.Thread):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, queue):</span></span><br><span class=\"line\"><span class=\"comment\">#         threading.Thread.__init__(self)</span></span><br><span class=\"line\"><span class=\"comment\">#         self.__queue = queue</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     def run(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         while True:</span></span><br><span class=\"line\"><span class=\"comment\">#             msg = self.__queue.get()</span></span><br><span class=\"line\"><span class=\"comment\">#             if isinstance(msg, str) and msg == 'quit':</span></span><br><span class=\"line\"><span class=\"comment\">#                 break</span></span><br><span class=\"line\"><span class=\"comment\">#             print \"I am thread, and i received %s\" % msg</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'bye'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def Producer():</span></span><br><span class=\"line\"><span class=\"comment\">#     queue = Queue.Queue()</span></span><br><span class=\"line\"><span class=\"comment\">#     worker = Consumer(queue)</span></span><br><span class=\"line\"><span class=\"comment\">#     worker.start()</span></span><br><span class=\"line\"><span class=\"comment\">#     start_time = time.time()</span></span><br><span class=\"line\"><span class=\"comment\">#     while time.time()-start_time &lt; 5:</span></span><br><span class=\"line\"><span class=\"comment\">#         queue.put('something at %s' % time.time())</span></span><br><span class=\"line\"><span class=\"comment\">#         time.sleep(1)</span></span><br><span class=\"line\"><span class=\"comment\">#     queue.put('quit')</span></span><br><span class=\"line\"><span class=\"comment\">#     worker.join()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\">#     Producer()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import threading, zipfile</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># class AsyncZip(threading.Thread):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, infile, outfile):</span></span><br><span class=\"line\"><span class=\"comment\">#         threading.Thread.__init__(self)</span></span><br><span class=\"line\"><span class=\"comment\">#         self.infile = infile</span></span><br><span class=\"line\"><span class=\"comment\">#         self.outfile = outfile</span></span><br><span class=\"line\"><span class=\"comment\">#     def run(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         f = zipfile.ZipFile(self.outfile, 'w', zipfile.ZIP_DEFLATED)</span></span><br><span class=\"line\"><span class=\"comment\">#         f.write(self.infile)</span></span><br><span class=\"line\"><span class=\"comment\">#         f.close()</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'Finished background zip of: ', self.infile</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># background = AsyncZip('mydata.txt', 'myarchive.zip')</span></span><br><span class=\"line\"><span class=\"comment\"># background.start()</span></span><br><span class=\"line\"><span class=\"comment\"># print 'The main program continues to run in foreground.'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># background.join()    # Wait for the background task to finish</span></span><br><span class=\"line\"><span class=\"comment\"># print 'Main program waited until background was done.'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def TrimFuc(strs):</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     head=0</span></span><br><span class=\"line\"><span class=\"comment\">#     tail=len(strs)</span></span><br><span class=\"line\"><span class=\"comment\">#     while(head&lt;tail and (strs[head].isspace() or strs[head]==\"\\x00\")):</span></span><br><span class=\"line\"><span class=\"comment\">#            head += 1</span></span><br><span class=\"line\"><span class=\"comment\">#     if head == tail:</span></span><br><span class=\"line\"><span class=\"comment\">#            return \"\"</span></span><br><span class=\"line\"><span class=\"comment\">#     while(strs[tail-1].isspace() or strs[tail-1]==\"\\x00\"):</span></span><br><span class=\"line\"><span class=\"comment\">#            tail -= 1</span></span><br><span class=\"line\"><span class=\"comment\">#     return strs[head:tail]</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># strs = ' hello,world\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># strs1 = 'hello,world\\n'</span></span><br><span class=\"line\"><span class=\"comment\"># print strs</span></span><br><span class=\"line\"><span class=\"comment\"># print '-----------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print TrimFuc(strs)</span></span><br><span class=\"line\"><span class=\"comment\"># print TrimFuc(strs1)</span></span><br><span class=\"line\"><span class=\"comment\"># print '-----------------'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># # regular expression</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># import re</span></span><br><span class=\"line\"><span class=\"comment\"># # match success will return a object of match else return None</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^\\d&#123;3&#125;\\-\\d&#123;3,8&#125;$', '010-12345')</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^\\d&#123;3&#125;\\-\\d&#123;3,8&#125;$', '010 12345')</span></span><br><span class=\"line\"><span class=\"comment\"># print '-----------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># # split string with reExp and common</span></span><br><span class=\"line\"><span class=\"comment\"># print re.split(r'\\s+', 'a b   c')</span></span><br><span class=\"line\"><span class=\"comment\"># print 'ab    c'.split()</span></span><br><span class=\"line\"><span class=\"comment\"># print re.split(r'[\\s\\,]+', 'a,b, c  d')</span></span><br><span class=\"line\"><span class=\"comment\"># print re.split(r'[\\s\\,\\;]+', 'a,b;;  c  d')</span></span><br><span class=\"line\"><span class=\"comment\"># # group substring</span></span><br><span class=\"line\"><span class=\"comment\"># m = re.match(r'^(\\d&#123;3&#125;)-(\\d&#123;3,8&#125;)$', '010-12345')</span></span><br><span class=\"line\"><span class=\"comment\"># print m</span></span><br><span class=\"line\"><span class=\"comment\"># print m.group(0)</span></span><br><span class=\"line\"><span class=\"comment\"># print m.group(1)</span></span><br><span class=\"line\"><span class=\"comment\"># print m.group(2)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^(\\d+)(0*)$', '102300').groups()</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'^(\\d+?)(0*)$', '102300').groups()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># re_telephone = re.compile(r'^(\\d&#123;3&#125;)-(\\d&#123;3,8&#125;)$')</span></span><br><span class=\"line\"><span class=\"comment\"># print re_telephone.match('010-8086').groups()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print'--------------------------------------'</span></span><br><span class=\"line\"><span class=\"comment\"># print re.match(r'[a-z]', 'a44')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># json</span></span><br><span class=\"line\"><span class=\"comment\"># import json</span></span><br><span class=\"line\"><span class=\"comment\"># obj = [[1, 2, 3], 1992, 6.12, 'Sam', &#123;'key': (4, 5, 6), 'Tom': (7, 8, 9)&#125;]</span></span><br><span class=\"line\"><span class=\"comment\"># encode_json = json.dumps(obj)</span></span><br><span class=\"line\"><span class=\"comment\"># print repr(obj)</span></span><br><span class=\"line\"><span class=\"comment\"># print encode_json</span></span><br><span class=\"line\"><span class=\"comment\"># print 'encode_json_type', type(encode_json)</span></span><br><span class=\"line\"><span class=\"comment\"># decode_json = json.loads(encode_json)</span></span><br><span class=\"line\"><span class=\"comment\"># print 'decode_json_type', type(decode_json)</span></span><br><span class=\"line\"><span class=\"comment\"># print decode_json[4]['key']</span></span><br><span class=\"line\"><span class=\"comment\"># print decode_json</span></span><br><span class=\"line\"><span class=\"comment\"># import re</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># fields = \"oracle_username=xiaweihua\"</span></span><br><span class=\"line\"><span class=\"comment\"># print re.sub('oracle_username=', '', fields)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># file_t = open('hello.data', 'w')</span></span><br><span class=\"line\"><span class=\"comment\"># for line in range(0, 9):</span></span><br><span class=\"line\"><span class=\"comment\">#     file_t.write(str(line)+'\\n')</span></span><br><span class=\"line\"><span class=\"comment\"># file_t.close()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># file_r = open('hello.data', 'r')</span></span><br><span class=\"line\"><span class=\"comment\"># print '--------'</span></span><br><span class=\"line\"><span class=\"comment\"># for line in range(0, 9):</span></span><br><span class=\"line\"><span class=\"comment\">#     print file_r.readline()</span></span><br><span class=\"line\"><span class=\"comment\">#     print '---------'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># file_r.close()</span></span><br><span class=\"line\"><span class=\"comment\"># conn = cx_Oracle.connect('themis', 'themis', '192.168.1.60/testdb')</span></span><br><span class=\"line\"><span class=\"comment\"># dsn_tns = cx_Oracle.makedsn('themis', 'themis', '192.168.1.60/testdb')</span></span><br><span class=\"line\"><span class=\"comment\"># c = conn.cursor()</span></span><br><span class=\"line\"><span class=\"comment\"># data = c.execute('desc t_redlist')</span></span><br><span class=\"line\"><span class=\"comment\"># print  data.fetchall()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># encoding decoding formal</span></span><br><span class=\"line\"><span class=\"comment\"># tup = ('abc', '123', '\\xce\\xf7\\xb0\\xb2')</span></span><br><span class=\"line\"><span class=\"comment\"># print tup[2].decode('gbk')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># from random import randint</span></span><br><span class=\"line\"><span class=\"comment\"># from time import sleep, ctime</span></span><br><span class=\"line\"><span class=\"comment\"># from Queue import Queue</span></span><br><span class=\"line\"><span class=\"comment\"># import threading</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># class MyThread(threading.Thread):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, func, args, name=''):</span></span><br><span class=\"line\"><span class=\"comment\">#         threading.Thread.__init__(self)</span></span><br><span class=\"line\"><span class=\"comment\">#         self.name = name</span></span><br><span class=\"line\"><span class=\"comment\">#         self.func = func</span></span><br><span class=\"line\"><span class=\"comment\">#         self.args = args</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     def get_result(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         return self.res</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     def run(self):</span></span><br><span class=\"line\"><span class=\"comment\">#         print 'starting', self.name, 'at', ctime()</span></span><br><span class=\"line\"><span class=\"comment\">#         self.res = self.func(*self.args)</span></span><br><span class=\"line\"><span class=\"comment\">#         print self.name, 'finished at:', ctime()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def write_queue(queue):</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'produce apple for queue...'</span></span><br><span class=\"line\"><span class=\"comment\">#     queue.put('apple', 1)</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'apple number now is:', queue.qsize()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def read_queue(queue):</span></span><br><span class=\"line\"><span class=\"comment\">#     val = queue.get(1)</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'consume a %s from queue...' % val</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'apple number now is:', queue.qsize()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def writer(queue, loops):</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(loops):</span></span><br><span class=\"line\"><span class=\"comment\">#         write_queue(queue)</span></span><br><span class=\"line\"><span class=\"comment\">#         sleep(randint(1, 3))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def reader(queue, loops):</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in range(loops):</span></span><br><span class=\"line\"><span class=\"comment\">#         read_queue(queue)</span></span><br><span class=\"line\"><span class=\"comment\">#         sleep(randint(2, 5))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># funcs = [writer, reader]</span></span><br><span class=\"line\"><span class=\"comment\"># nfuncs = range(len(funcs))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># def main():</span></span><br><span class=\"line\"><span class=\"comment\">#     nloops = randint(2, 5)</span></span><br><span class=\"line\"><span class=\"comment\">#     q = Queue(32)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     threads = []</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in nfuncs:</span></span><br><span class=\"line\"><span class=\"comment\">#         t = MyThread(funcs[i], (q, nloops), funcs[i].__name__)</span></span><br><span class=\"line\"><span class=\"comment\">#         threads.append(t)</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in nfuncs:</span></span><br><span class=\"line\"><span class=\"comment\">#         threads[i].start()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     for i in nfuncs:</span></span><br><span class=\"line\"><span class=\"comment\">#         threads[i].join()</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#     print 'all done'</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># if __name__ == '__main__':</span></span><br><span class=\"line\"><span class=\"comment\">#     main()</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># transform dictionary to XML</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> xml.etree.ElementTree <span class=\"keyword\">import</span> Element, SubElement, tostring</span><br><span class=\"line\"><span class=\"keyword\">from</span> xml.dom.minidom <span class=\"keyword\">import</span> parseString</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># BOOKs = &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#     '013269937': &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#         'title': 'Core Python Programming',</span></span><br><span class=\"line\"><span class=\"comment\">#         'edition': 2,</span></span><br><span class=\"line\"><span class=\"comment\">#         'year': 2006,</span></span><br><span class=\"line\"><span class=\"comment\">#     &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">#     '0132356139': &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#         'title': 'Python web development with Django',</span></span><br><span class=\"line\"><span class=\"comment\">#         'authors': 'Jeff Forcier:Paul Bissex:Wesley Chun',</span></span><br><span class=\"line\"><span class=\"comment\">#         'year': 2009,</span></span><br><span class=\"line\"><span class=\"comment\">#     &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">#     '0137143419': &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#         'title': 'Python Fundamentals',</span></span><br><span class=\"line\"><span class=\"comment\">#         'year': 2009,</span></span><br><span class=\"line\"><span class=\"comment\">#     &#125;,</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"><span class=\"comment\"># books = Element('books')</span></span><br><span class=\"line\"><span class=\"comment\"># for isbn, info in BOOKs.iteritems():</span></span><br><span class=\"line\"><span class=\"comment\">#     book = SubElement(books, 'book')</span></span><br><span class=\"line\"><span class=\"comment\">#     info.setdefault('authors', 'Wesley Chun')</span></span><br><span class=\"line\"><span class=\"comment\">#     info.setdefault('edition', 1)</span></span><br><span class=\"line\"><span class=\"comment\">#     for key, val in info.iteritems():</span></span><br><span class=\"line\"><span class=\"comment\">#         SubElement(book, key).text = ', '.join(str(val).split(':'))</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># xml = tostring(books)</span></span><br><span class=\"line\"><span class=\"comment\"># print '****Raw XML****'</span></span><br><span class=\"line\"><span class=\"comment\"># print xml</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '\\n***Pretty Printed XML'</span></span><br><span class=\"line\"><span class=\"comment\"># dom = parseString(xml)</span></span><br><span class=\"line\"><span class=\"comment\"># print dom.toprettyxml('    ')</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '***Flat Structure***'</span></span><br><span class=\"line\"><span class=\"comment\"># for elmt in books.iter():</span></span><br><span class=\"line\"><span class=\"comment\">#     print elmt.tag, '-', elmt.text</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># print '\\n****Titles Only****'</span></span><br><span class=\"line\"><span class=\"comment\"># for book in books.findall('.//title'):</span></span><br><span class=\"line\"><span class=\"comment\">#     print book.text</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">pointfile = open(<span class=\"string\">'test.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">pointfile.write(<span class=\"string\">'Hello, world'</span>)</span><br><span class=\"line\">pointfile.close()</span><br><span class=\"line\"></span><br><span class=\"line\">file_read = open(<span class=\"string\">'test.txt'</span>, <span class=\"string\">'r'</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> file_read.read(<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> file_read.read()</span><br><span class=\"line\"></span><br><span class=\"line\">write_again = open(<span class=\"string\">'test.txt'</span>, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">write_again.write(<span class=\"string\">'write again.'</span>)</span><br><span class=\"line\">write_again.close()</span><br></pre></td></tr></table></figure>\n<p>版权声明：本文为博主制作文章，转载时注明，谢谢。</p>"},{"title":"Python解析XML的方法，用于简单对象访问协议（SOAP）","date":"2016-09-16T05:09:04.000Z","_content":"\n### 预备知识\nPython解析XML三种方法及优缺点\n1.SAX (simple API for XML )     需要用户实现回调函数（handler）\n2.DOM(Document Object Model)    DOM需要将XML数据映射到内存中的树，比较慢，比较耗内存\n3.ElementTree(元素树)            轻量级的DOM 代码可用性好，速度快，消耗内存少\n\n<!-- more -->\n### 使用ElementTree解析XML\ncountry_data.xml\n```XML\n<?xml version=\"1.0\"?>\n<data>\n    <country name=\"Liechtenstein\">\n        <rank>1</rank>\n        <year>2008</year>\n        <gdppc>141100</gdppc>\n        <neighbor name=\"Austria\" direction=\"E\"/>\n        <neighbor name=\"Switzerland\" direction=\"W\"/>\n    </country>\n    <country name=\"Singapore\">\n        <rank>4</rank>\n        <year>2011</year>\n        <gdppc>59900</gdppc>\n        <neighbor name=\"Malaysia\" direction=\"N\"/>\n    </country>\n    <country name=\"Panama\">\n        <rank>68</rank>\n        <year>2011</year>\n        <gdppc>13600</gdppc>\n        <neighbor name=\"Costa Rica\" direction=\"W\"/>\n        <neighbor name=\"Colombia\" direction=\"E\"/>\n    </country>\n</data>\n```\n增加，删除，查询，修改等基本功能Python都能够提供支持。下面有简单举例，具体操作API文档有详细例子。\n为实现简单对象访问协议SOAP相关业务，应能够读取XML文件，根据业务要求，配合整个系统，修改XML，或发送或保存为XML文件。\n完成实际的需求即可。\n```Python\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\nimport xml.etree.ElementTree as ET\ntree = ET.parse('country_data.xml')\nroot_1 = tree.getroot()\nprint tostring(root_1)  //根元素data\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。","source":"_posts/Python解析XML的方法.md","raw":"---\ntitle: Python解析XML的方法，用于简单对象访问协议（SOAP）\ndate: 2016-9-16 13:09:04\ntags: [Python2.7,XML,WebService]\n---\n\n### 预备知识\nPython解析XML三种方法及优缺点\n1.SAX (simple API for XML )     需要用户实现回调函数（handler）\n2.DOM(Document Object Model)    DOM需要将XML数据映射到内存中的树，比较慢，比较耗内存\n3.ElementTree(元素树)            轻量级的DOM 代码可用性好，速度快，消耗内存少\n\n<!-- more -->\n### 使用ElementTree解析XML\ncountry_data.xml\n```XML\n<?xml version=\"1.0\"?>\n<data>\n    <country name=\"Liechtenstein\">\n        <rank>1</rank>\n        <year>2008</year>\n        <gdppc>141100</gdppc>\n        <neighbor name=\"Austria\" direction=\"E\"/>\n        <neighbor name=\"Switzerland\" direction=\"W\"/>\n    </country>\n    <country name=\"Singapore\">\n        <rank>4</rank>\n        <year>2011</year>\n        <gdppc>59900</gdppc>\n        <neighbor name=\"Malaysia\" direction=\"N\"/>\n    </country>\n    <country name=\"Panama\">\n        <rank>68</rank>\n        <year>2011</year>\n        <gdppc>13600</gdppc>\n        <neighbor name=\"Costa Rica\" direction=\"W\"/>\n        <neighbor name=\"Colombia\" direction=\"E\"/>\n    </country>\n</data>\n```\n增加，删除，查询，修改等基本功能Python都能够提供支持。下面有简单举例，具体操作API文档有详细例子。\n为实现简单对象访问协议SOAP相关业务，应能够读取XML文件，根据业务要求，配合整个系统，修改XML，或发送或保存为XML文件。\n完成实际的需求即可。\n```Python\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\nimport xml.etree.ElementTree as ET\ntree = ET.parse('country_data.xml')\nroot_1 = tree.getroot()\nprint tostring(root_1)  //根元素data\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。","slug":"Python解析XML的方法","published":1,"updated":"2018-05-02T10:50:24.144Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g6o0009v4nb59w7r4pi","content":"<h3 id=\"预备知识\"><a href=\"#预备知识\" class=\"headerlink\" title=\"预备知识\"></a>预备知识</h3><p>Python解析XML三种方法及优缺点<br>1.SAX (simple API for XML )     需要用户实现回调函数（handler）<br>2.DOM(Document Object Model)    DOM需要将XML数据映射到内存中的树，比较慢，比较耗内存<br>3.ElementTree(元素树)            轻量级的DOM 代码可用性好，速度快，消耗内存少</p>\n<a id=\"more\"></a>\n<h3 id=\"使用ElementTree解析XML\"><a href=\"#使用ElementTree解析XML\" class=\"headerlink\" title=\"使用ElementTree解析XML\"></a>使用ElementTree解析XML</h3><p>country_data.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">data</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">country</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Liechtenstein\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rank</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">rank</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">year</span>&gt;</span>2008<span class=\"tag\">&lt;/<span class=\"name\">year</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gdppc</span>&gt;</span>141100<span class=\"tag\">&lt;/<span class=\"name\">gdppc</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Austria\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"E\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Switzerland\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"W\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">country</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">country</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Singapore\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rank</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">rank</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">year</span>&gt;</span>2011<span class=\"tag\">&lt;/<span class=\"name\">year</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gdppc</span>&gt;</span>59900<span class=\"tag\">&lt;/<span class=\"name\">gdppc</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Malaysia\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"N\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">country</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">country</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Panama\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rank</span>&gt;</span>68<span class=\"tag\">&lt;/<span class=\"name\">rank</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">year</span>&gt;</span>2011<span class=\"tag\">&lt;/<span class=\"name\">year</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gdppc</span>&gt;</span>13600<span class=\"tag\">&lt;/<span class=\"name\">gdppc</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Costa Rica\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"W\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Colombia\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"E\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">country</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">data</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>增加，删除，查询，修改等基本功能Python都能够提供支持。下面有简单举例，具体操作API文档有详细例子。<br>为实现简单对象访问协议SOAP相关业务，应能够读取XML文件，根据业务要求，配合整个系统，修改XML，或发送或保存为XML文件。<br>完成实际的需求即可。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.etree.ElementTree <span class=\"keyword\">as</span> ET</span><br><span class=\"line\">tree = ET.parse(<span class=\"string\">'country_data.xml'</span>)</span><br><span class=\"line\">root_1 = tree.getroot()</span><br><span class=\"line\"><span class=\"keyword\">print</span> tostring(root_1)  //根元素data</span><br></pre></td></tr></table></figure></p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"预备知识\"><a href=\"#预备知识\" class=\"headerlink\" title=\"预备知识\"></a>预备知识</h3><p>Python解析XML三种方法及优缺点<br>1.SAX (simple API for XML )     需要用户实现回调函数（handler）<br>2.DOM(Document Object Model)    DOM需要将XML数据映射到内存中的树，比较慢，比较耗内存<br>3.ElementTree(元素树)            轻量级的DOM 代码可用性好，速度快，消耗内存少</p>","more":"<h3 id=\"使用ElementTree解析XML\"><a href=\"#使用ElementTree解析XML\" class=\"headerlink\" title=\"使用ElementTree解析XML\"></a>使用ElementTree解析XML</h3><p>country_data.xml<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">data</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">country</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Liechtenstein\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rank</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">rank</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">year</span>&gt;</span>2008<span class=\"tag\">&lt;/<span class=\"name\">year</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gdppc</span>&gt;</span>141100<span class=\"tag\">&lt;/<span class=\"name\">gdppc</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Austria\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"E\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Switzerland\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"W\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">country</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">country</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Singapore\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rank</span>&gt;</span>4<span class=\"tag\">&lt;/<span class=\"name\">rank</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">year</span>&gt;</span>2011<span class=\"tag\">&lt;/<span class=\"name\">year</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gdppc</span>&gt;</span>59900<span class=\"tag\">&lt;/<span class=\"name\">gdppc</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Malaysia\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"N\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">country</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">country</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Panama\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">rank</span>&gt;</span>68<span class=\"tag\">&lt;/<span class=\"name\">rank</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">year</span>&gt;</span>2011<span class=\"tag\">&lt;/<span class=\"name\">year</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">gdppc</span>&gt;</span>13600<span class=\"tag\">&lt;/<span class=\"name\">gdppc</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Costa Rica\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"W\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">neighbor</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Colombia\"</span> <span class=\"attr\">direction</span>=<span class=\"string\">\"E\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">country</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">data</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>增加，删除，查询，修改等基本功能Python都能够提供支持。下面有简单举例，具体操作API文档有详细例子。<br>为实现简单对象访问协议SOAP相关业务，应能够读取XML文件，根据业务要求，配合整个系统，修改XML，或发送或保存为XML文件。<br>完成实际的需求即可。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.etree.ElementTree <span class=\"keyword\">as</span> ET</span><br><span class=\"line\">tree = ET.parse(<span class=\"string\">'country_data.xml'</span>)</span><br><span class=\"line\">root_1 = tree.getroot()</span><br><span class=\"line\"><span class=\"keyword\">print</span> tostring(root_1)  //根元素data</span><br></pre></td></tr></table></figure></p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>"},{"title":"Flask get start.","date":"2018-06-04T05:15:04.000Z","_content":"很高兴加入书山府，迎来了新的挑战。Flask Python3 单元测试....\n\n### Python3 升级\n公司的业务需要从PHP业务升级到Python3 Flask.早点接触实际项目对于学习新生事物是直接的，在这里我不打算把所有Python3与Python2的\n语法区别全部列出来，采取大方向学习主要的知识点，小地方多接触不同点，在这里记录下来，作为每天学习的心得。\n\n```python3\nfrom flask import render_template\n# render_template 渲染模板\n\n```\n<!-- more -->\n","source":"_posts/flask.md","raw":"---\ntitle: Flask get start.\ndate: 2018-6-4 13:15:04\ntags: [Python3, flask]\n---\n很高兴加入书山府，迎来了新的挑战。Flask Python3 单元测试....\n\n### Python3 升级\n公司的业务需要从PHP业务升级到Python3 Flask.早点接触实际项目对于学习新生事物是直接的，在这里我不打算把所有Python3与Python2的\n语法区别全部列出来，采取大方向学习主要的知识点，小地方多接触不同点，在这里记录下来，作为每天学习的心得。\n\n```python3\nfrom flask import render_template\n# render_template 渲染模板\n\n```\n<!-- more -->\n","slug":"flask","published":1,"updated":"2018-06-04T07:58:33.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g6t000av4nb34gwja1e","content":"<p>很高兴加入书山府，迎来了新的挑战。Flask Python3 单元测试….</p>\n<h3 id=\"Python3-升级\"><a href=\"#Python3-升级\" class=\"headerlink\" title=\"Python3 升级\"></a>Python3 升级</h3><p>公司的业务需要从PHP业务升级到Python3 Flask.早点接触实际项目对于学习新生事物是直接的，在这里我不打算把所有Python3与Python2的<br>语法区别全部列出来，采取大方向学习主要的知识点，小地方多接触不同点，在这里记录下来，作为每天学习的心得。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import render_template</span><br><span class=\"line\"># render_template 渲染模板</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n","site":{"data":{}},"excerpt":"<p>很高兴加入书山府，迎来了新的挑战。Flask Python3 单元测试….</p>\n<h3 id=\"Python3-升级\"><a href=\"#Python3-升级\" class=\"headerlink\" title=\"Python3 升级\"></a>Python3 升级</h3><p>公司的业务需要从PHP业务升级到Python3 Flask.早点接触实际项目对于学习新生事物是直接的，在这里我不打算把所有Python3与Python2的<br>语法区别全部列出来，采取大方向学习主要的知识点，小地方多接触不同点，在这里记录下来，作为每天学习的心得。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from flask import render_template</span><br><span class=\"line\"># render_template 渲染模板</span><br></pre></td></tr></table></figure>","more":""},{"title":"Hexo入门","date":"2016-01-05T05:09:04.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!-- more -->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hexo入门\ndate: 2016-1-5 13:09:04\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n<!-- more -->\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2018-05-02T10:53:19.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g71000cv4nbtjh91wrf","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>"},{"title":"leetcode猛撸","date":"2018-05-10T05:09:04.000Z","_content":"为了应对不同笔试中的语言问题，现采取C/C++/Python/Java来掌握不同笔试题的知识点。\n\n### 1.两数之和 Python\n1.给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。\n你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。\n示例:\n```bash\n给定 nums = [2, 7, 11, 15], target = 9\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n```\n```python\nclass Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        list_len = len(nums)\n        for i in range(0, list_len):\n            for j in range(i + 1, list_len):\n                if (nums[i] + nums[j] == target):\n                    # print [i, j]\n                    return [i, j]\n\n# nums = [3, 2, 4]\n# target = 6\n# obj = Solution()\n# obj.twoSum(nums, target)\n\n```\n<!-- more -->\n### 2.两数相加  Python\n给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。\n你可以假设除了数字 0 之外，这两个数字都不会以零开头。\n示例：\n```python\n输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n输出：7 -> 0 -> 8\n原因：342 + 465 = 807\n```\n\n```python\n# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def addTwoNumbers(self, l1, l2):\n        \"\"\"\n        :type l1: ListNode\n        :type l2: ListNode\n        :rtype: ListNode\n        \"\"\"\n        cur1 = ListNode(0)\n        cur2 = cur1\n        while True:\n            if (l1 is not None) & (l2 is not None):\n                if l1.val + l2.val + cur2.val >= 10:\n                    carry_bit = (l1.val + l2.val + cur2.val) / 10\n                    base_bit = (l1.val + l2.val + cur2.val) % 10\n                    cur2.val = base_bit\n                    cur2.next = ListNode(0)\n                    cur2 = cur2.next\n                    cur2.val = carry_bit\n                else:\n                    increament = l1.val + l2.val\n                    cur2.val += increament\n                    if (l1.next is not None) & (l2.next is not None):\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                    elif (l1.next is None) & (l2.next is None):\n                        pass\n                    else:\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                l1 = l1.next\n                l2 = l2.next\n            elif (l1 is not None) & (l2 is None):\n                if cur2.val + l1.val >= 10:\n                    carry_bit = (cur2.val + l1.val) / 10\n                    base_bit = (cur2.val + l1.val) % 10\n                    cur2.val = base_bit\n                    cur2.next = ListNode(0)\n                    cur2 = cur2.next\n                    cur2.val = carry_bit\n                else:\n                    cur2.val = cur2.val + l1.val\n                    if l1.next is not None:\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                    else:\n                        pass\n                l1 = l1.next\n            elif (l1 is None) & (l2 is not None):\n                if cur2.val + l2.val >= 10:\n                    carry_bit = (cur2.val + l2.val) / 10\n                    base_bit = (cur2.val + l2.val) % 10\n                    cur2.val = base_bit\n                    cur2.next = ListNode(0)\n                    cur2 = cur2.next\n                    cur2.val = carry_bit\n                else:\n                    cur2.val = cur2.val + l2.val\n                    if l2.next is not None:\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                    else:\n                        pass\n                l2 = l2.next\n            else:\n                break\n        return cur1\n\n\nclass LinkedList(object):\n    def create(self, lst):\n        head = ListNode(lst[0])\n        cur = head\n        for i in range(1, len(lst)):\n            cur.next = ListNode(lst[i])\n            cur = cur.next\n        return head\n\n```\n","source":"_posts/leetCode.md","raw":"---\ntitle: leetcode猛撸\ndate: 2018-5-10 13:09:04\ntags: [leetcode, Python2.7]\n---\n为了应对不同笔试中的语言问题，现采取C/C++/Python/Java来掌握不同笔试题的知识点。\n\n### 1.两数之和 Python\n1.给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。\n你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。\n示例:\n```bash\n给定 nums = [2, 7, 11, 15], target = 9\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n```\n```python\nclass Solution(object):\n    def twoSum(self, nums, target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        list_len = len(nums)\n        for i in range(0, list_len):\n            for j in range(i + 1, list_len):\n                if (nums[i] + nums[j] == target):\n                    # print [i, j]\n                    return [i, j]\n\n# nums = [3, 2, 4]\n# target = 6\n# obj = Solution()\n# obj.twoSum(nums, target)\n\n```\n<!-- more -->\n### 2.两数相加  Python\n给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。\n你可以假设除了数字 0 之外，这两个数字都不会以零开头。\n示例：\n```python\n输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n输出：7 -> 0 -> 8\n原因：342 + 465 = 807\n```\n\n```python\n# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def addTwoNumbers(self, l1, l2):\n        \"\"\"\n        :type l1: ListNode\n        :type l2: ListNode\n        :rtype: ListNode\n        \"\"\"\n        cur1 = ListNode(0)\n        cur2 = cur1\n        while True:\n            if (l1 is not None) & (l2 is not None):\n                if l1.val + l2.val + cur2.val >= 10:\n                    carry_bit = (l1.val + l2.val + cur2.val) / 10\n                    base_bit = (l1.val + l2.val + cur2.val) % 10\n                    cur2.val = base_bit\n                    cur2.next = ListNode(0)\n                    cur2 = cur2.next\n                    cur2.val = carry_bit\n                else:\n                    increament = l1.val + l2.val\n                    cur2.val += increament\n                    if (l1.next is not None) & (l2.next is not None):\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                    elif (l1.next is None) & (l2.next is None):\n                        pass\n                    else:\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                l1 = l1.next\n                l2 = l2.next\n            elif (l1 is not None) & (l2 is None):\n                if cur2.val + l1.val >= 10:\n                    carry_bit = (cur2.val + l1.val) / 10\n                    base_bit = (cur2.val + l1.val) % 10\n                    cur2.val = base_bit\n                    cur2.next = ListNode(0)\n                    cur2 = cur2.next\n                    cur2.val = carry_bit\n                else:\n                    cur2.val = cur2.val + l1.val\n                    if l1.next is not None:\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                    else:\n                        pass\n                l1 = l1.next\n            elif (l1 is None) & (l2 is not None):\n                if cur2.val + l2.val >= 10:\n                    carry_bit = (cur2.val + l2.val) / 10\n                    base_bit = (cur2.val + l2.val) % 10\n                    cur2.val = base_bit\n                    cur2.next = ListNode(0)\n                    cur2 = cur2.next\n                    cur2.val = carry_bit\n                else:\n                    cur2.val = cur2.val + l2.val\n                    if l2.next is not None:\n                        cur2.next = ListNode(0)\n                        cur2 = cur2.next\n                    else:\n                        pass\n                l2 = l2.next\n            else:\n                break\n        return cur1\n\n\nclass LinkedList(object):\n    def create(self, lst):\n        head = ListNode(lst[0])\n        cur = head\n        for i in range(1, len(lst)):\n            cur.next = ListNode(lst[i])\n            cur = cur.next\n        return head\n\n```\n","slug":"leetCode","published":1,"updated":"2018-05-24T08:35:43.595Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g79000ev4nbkdsf2eev","content":"<p>为了应对不同笔试中的语言问题，现采取C/C++/Python/Java来掌握不同笔试题的知识点。</p>\n<h3 id=\"1-两数之和-Python\"><a href=\"#1-两数之和-Python\" class=\"headerlink\" title=\"1.两数之和 Python\"></a>1.两数之和 Python</h3><p>1.给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。<br>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。<br>示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定 nums = [2, 7, 11, 15], target = 9</span><br><span class=\"line\">因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class=\"line\">所以返回 [0, 1]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">twoSum</span><span class=\"params\">(self, nums, target)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        :type nums: List[int]</span></span><br><span class=\"line\"><span class=\"string\">        :type target: int</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: List[int]</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        list_len = len(nums)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, list_len):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i + <span class=\"number\">1</span>, list_len):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[i] + nums[j] == target):</span><br><span class=\"line\">                    <span class=\"comment\"># print [i, j]</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> [i, j]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nums = [3, 2, 4]</span></span><br><span class=\"line\"><span class=\"comment\"># target = 6</span></span><br><span class=\"line\"><span class=\"comment\"># obj = Solution()</span></span><br><span class=\"line\"><span class=\"comment\"># obj.twoSum(nums, target)</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"2-两数相加-Python\"><a href=\"#2-两数相加-Python\" class=\"headerlink\" title=\"2.两数相加  Python\"></a>2.两数相加  Python</h3><p>给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。<br>你可以假设除了数字 0 之外，这两个数字都不会以零开头。<br>示例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class=\"line\">输出：7 -&gt; 0 -&gt; 8</span><br><span class=\"line\">原因：<span class=\"number\">342</span> + <span class=\"number\">465</span> = <span class=\"number\">807</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"># class ListNode(object):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, x):</span></span><br><span class=\"line\"><span class=\"comment\">#         self.val = x</span></span><br><span class=\"line\"><span class=\"comment\">#         self.next = None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addTwoNumbers</span><span class=\"params\">(self, l1, l2)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        :type l1: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        :type l2: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        cur1 = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">        cur2 = cur1</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (l1 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>) &amp; (l2 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> l1.val + l2.val + cur2.val &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    carry_bit = (l1.val + l2.val + cur2.val) / <span class=\"number\">10</span></span><br><span class=\"line\">                    base_bit = (l1.val + l2.val + cur2.val) % <span class=\"number\">10</span></span><br><span class=\"line\">                    cur2.val = base_bit</span><br><span class=\"line\">                    cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                    cur2 = cur2.next</span><br><span class=\"line\">                    cur2.val = carry_bit</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    increament = l1.val + l2.val</span><br><span class=\"line\">                    cur2.val += increament</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (l1.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>) &amp; (l2.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> (l1.next <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>) &amp; (l2.next <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                l1 = l1.next</span><br><span class=\"line\">                l2 = l2.next</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> (l1 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>) &amp; (l2 <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> cur2.val + l1.val &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    carry_bit = (cur2.val + l1.val) / <span class=\"number\">10</span></span><br><span class=\"line\">                    base_bit = (cur2.val + l1.val) % <span class=\"number\">10</span></span><br><span class=\"line\">                    cur2.val = base_bit</span><br><span class=\"line\">                    cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                    cur2 = cur2.next</span><br><span class=\"line\">                    cur2.val = carry_bit</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    cur2.val = cur2.val + l1.val</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> l1.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>:</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">                l1 = l1.next</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> (l1 <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>) &amp; (l2 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> cur2.val + l2.val &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    carry_bit = (cur2.val + l2.val) / <span class=\"number\">10</span></span><br><span class=\"line\">                    base_bit = (cur2.val + l2.val) % <span class=\"number\">10</span></span><br><span class=\"line\">                    cur2.val = base_bit</span><br><span class=\"line\">                    cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                    cur2 = cur2.next</span><br><span class=\"line\">                    cur2.val = carry_bit</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    cur2.val = cur2.val + l2.val</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> l2.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>:</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">                l2 = l2.next</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> cur1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkedList</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create</span><span class=\"params\">(self, lst)</span>:</span></span><br><span class=\"line\">        head = ListNode(lst[<span class=\"number\">0</span>])</span><br><span class=\"line\">        cur = head</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(lst)):</span><br><span class=\"line\">            cur.next = ListNode(lst[i])</span><br><span class=\"line\">            cur = cur.next</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>为了应对不同笔试中的语言问题，现采取C/C++/Python/Java来掌握不同笔试题的知识点。</p>\n<h3 id=\"1-两数之和-Python\"><a href=\"#1-两数之和-Python\" class=\"headerlink\" title=\"1.两数之和 Python\"></a>1.两数之和 Python</h3><p>1.给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。<br>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。<br>示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">给定 nums = [2, 7, 11, 15], target = 9</span><br><span class=\"line\">因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class=\"line\">所以返回 [0, 1]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">twoSum</span><span class=\"params\">(self, nums, target)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        :type nums: List[int]</span></span><br><span class=\"line\"><span class=\"string\">        :type target: int</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: List[int]</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        list_len = len(nums)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, list_len):</span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(i + <span class=\"number\">1</span>, list_len):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[i] + nums[j] == target):</span><br><span class=\"line\">                    <span class=\"comment\"># print [i, j]</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span> [i, j]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nums = [3, 2, 4]</span></span><br><span class=\"line\"><span class=\"comment\"># target = 6</span></span><br><span class=\"line\"><span class=\"comment\"># obj = Solution()</span></span><br><span class=\"line\"><span class=\"comment\"># obj.twoSum(nums, target)</span></span><br></pre></td></tr></table></figure>","more":"<h3 id=\"2-两数相加-Python\"><a href=\"#2-两数相加-Python\" class=\"headerlink\" title=\"2.两数相加  Python\"></a>2.两数相加  Python</h3><p>给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。<br>你可以假设除了数字 0 之外，这两个数字都不会以零开头。<br>示例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class=\"line\">输出：7 -&gt; 0 -&gt; 8</span><br><span class=\"line\">原因：<span class=\"number\">342</span> + <span class=\"number\">465</span> = <span class=\"number\">807</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Definition for singly-linked list.</span></span><br><span class=\"line\"><span class=\"comment\"># class ListNode(object):</span></span><br><span class=\"line\"><span class=\"comment\">#     def __init__(self, x):</span></span><br><span class=\"line\"><span class=\"comment\">#         self.val = x</span></span><br><span class=\"line\"><span class=\"comment\">#         self.next = None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addTwoNumbers</span><span class=\"params\">(self, l1, l2)</span>:</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        :type l1: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        :type l2: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        :rtype: ListNode</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        cur1 = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">        cur2 = cur1</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (l1 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>) &amp; (l2 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> l1.val + l2.val + cur2.val &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    carry_bit = (l1.val + l2.val + cur2.val) / <span class=\"number\">10</span></span><br><span class=\"line\">                    base_bit = (l1.val + l2.val + cur2.val) % <span class=\"number\">10</span></span><br><span class=\"line\">                    cur2.val = base_bit</span><br><span class=\"line\">                    cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                    cur2 = cur2.next</span><br><span class=\"line\">                    cur2.val = carry_bit</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    increament = l1.val + l2.val</span><br><span class=\"line\">                    cur2.val += increament</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (l1.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>) &amp; (l2.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> (l1.next <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>) &amp; (l2.next <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                l1 = l1.next</span><br><span class=\"line\">                l2 = l2.next</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> (l1 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>) &amp; (l2 <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> cur2.val + l1.val &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    carry_bit = (cur2.val + l1.val) / <span class=\"number\">10</span></span><br><span class=\"line\">                    base_bit = (cur2.val + l1.val) % <span class=\"number\">10</span></span><br><span class=\"line\">                    cur2.val = base_bit</span><br><span class=\"line\">                    cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                    cur2 = cur2.next</span><br><span class=\"line\">                    cur2.val = carry_bit</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    cur2.val = cur2.val + l1.val</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> l1.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>:</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">                l1 = l1.next</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> (l1 <span class=\"keyword\">is</span> <span class=\"keyword\">None</span>) &amp; (l2 <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>):</span><br><span class=\"line\">                <span class=\"keyword\">if</span> cur2.val + l2.val &gt;= <span class=\"number\">10</span>:</span><br><span class=\"line\">                    carry_bit = (cur2.val + l2.val) / <span class=\"number\">10</span></span><br><span class=\"line\">                    base_bit = (cur2.val + l2.val) % <span class=\"number\">10</span></span><br><span class=\"line\">                    cur2.val = base_bit</span><br><span class=\"line\">                    cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                    cur2 = cur2.next</span><br><span class=\"line\">                    cur2.val = carry_bit</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    cur2.val = cur2.val + l2.val</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> l2.next <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>:</span><br><span class=\"line\">                        cur2.next = ListNode(<span class=\"number\">0</span>)</span><br><span class=\"line\">                        cur2 = cur2.next</span><br><span class=\"line\">                    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">pass</span></span><br><span class=\"line\">                l2 = l2.next</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> cur1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LinkedList</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create</span><span class=\"params\">(self, lst)</span>:</span></span><br><span class=\"line\">        head = ListNode(lst[<span class=\"number\">0</span>])</span><br><span class=\"line\">        cur = head</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, len(lst)):</span><br><span class=\"line\">            cur.next = ListNode(lst[i])</span><br><span class=\"line\">            cur = cur.next</span><br><span class=\"line\">        <span class=\"keyword\">return</span> head</span><br></pre></td></tr></table></figure>"},{"title":"套接字socket在Python中的用法测试","date":"2016-11-10T05:09:04.000Z","_content":"本部分介绍 socket — Low-level networking interface   偏底层的接口\n区别于 socketserver  — A framework for network   框架\n## 从计算机网络开始\nOSI七层协议：物理层，数据链路层，网络层，运输层，会话层，表示层，应用层\nTCP/IP的体系结构：网络接口层，网际层IP，运输层（TCP或UDP），应用层（TELNET,FTP,SMTP）\n五层协议体系结构：物理层，数据链路层，网络层，运输层，应用层\n套接字=IP地址 + 端口 + TCP协议或UDP协议  进程与进程之间的网络通信方式或者本机不同进程通过文件系统之间的通信方式\n\n套接字家族选择（socket family）\n基于文件的套接字：单机套接字，使用文件系统作基础，AF_UNIX或者AF_LOCAL\n基于网路的套接字：不同主机进程之间通信的套接字，AF_INET和AP_INET6 （AF_INET是用于IPV4,而AF_INET6是用于IPV6）\n套接字传输数据类型选择（type)\nTCP协议：通信前需要建立连接，连接是可靠的。使用的套接字类型是SOCK_STREAM\nUDP协议：无需连接就能通信，速度快，可靠性不高。传输用户数据报格式UDP的数据。使用的套接字类型是SOCK_DGRAM\n\n由于套接字创建以后归属与一个进程。因此，在操作系统课本中有进程的状态与转换（王道计算机操作系统第28页）\n一个服务端进程的状态如下：创建—>就绪—>运行—>阻塞（一直while循环等待客户端）—>运行（收到请求链接并响应 三次握手）->终止（关闭服务停止运行）\n<!-- more -->\n### 套接字超时注意事项\nTCP协议位于传输层，提供可靠的字节流服务Byte Stream Service。由于在用TCP协议，因此要三次握手建立连接，四次挥手关闭连接。\n如果由于三次握手是需要在一定的时间范围内完成的动作，如果没有完成就超时了。或者三次握手之后，其他通信操作没有及时完成就会出现超时。此时就要做出相应的操作，例如重新执行动作，否则就会失败。\n套接字对象可以是以下三种模式之一：阻塞，非阻塞或超时。默认情况下，套接字创建后处于阻塞模式，但可以通过调用 setdefaulttimeout() 来更改。\n在 阻塞模式 中，操作阻塞直到完成或系统返回错误（例如连接超时）。\n在 非阻塞模式 中，如果无法立即完成操作，那么操作将失败（错误是与系统相关的错误）：来自 select 的函数可用于知道套接字何时可用于读取或写入。\n在 超时模式 中，如果无法在为套接字指定的超时（它们引发 timeout 异常）或系统返回错误时无法完成操作，则操作将失败。\n\n<!-- more -->\n\n### 使用TCP协议套接字用Python2.7实现单线程聊天程序和多线程程序\n``` python\n#仅支持IPV4\n#server.py\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : server.py\n# @Software: PyCharm\nimport socket\n\nHOST = '127.0.0.1'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket.bind(ADDR)\ntcp_socket.listen(5)\n\nwhile True:\n    print \"waiting for connection...\"\n    tcp_connection, tcp_address = tcp_socket.accept()\n    print 'connected from:', tcp_address\n    while True:\n        data = tcp_connection.recv(BUFSIZ)\n        if not data:\n            break\n        print 'Jack:' + data\n        data = raw_input('send message> ')\n        tcp_connection.sendall(data)\n    tcp_connection.close()\ntcp_socket.close()\n\n```\n\n``` python\n#client.py\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : client.py\n# @Software: PyCharm\nimport socket\n\nHOST = 'localhost'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket_client.connect(ADDR)\n\nwhile True:\n    data = raw_input('send message> ')\n    tcp_socket_client.send(data)\n    data = tcp_socket_client.recv(BUFSIZ)\n    if not data:\n        break\n    print 'Ethan:' + data\ntcp_socket_client.close()\n```\n先打开server,再打开client。之后client输入你好，server再输入你也好啊。如此反复即可。要实现类似QQ的聊天。需要多线程或多进程。\n``` bash\n# server\nwaiting for connection...\nconnected from: ('127.0.0.1', 63922)\nJack:你好\nsend message> 你也好啊\n```\n``` bash\n# client\nsend message> 你好\nEthan:你也好啊\nsend message> \n```\n\n### 多线程聊天程序\n四个线程，server和client都有两个线程，第一个线程是发送消息，第二个线程是接收消息。\n``` python\n# server.py\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : server.py\n# @Software: PyCharm\n\nimport socket\nimport thread\n\nHOST = '127.0.0.1'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket.bind(ADDR)\ntcp_socket.listen(5)\n\nprint \"waiting for connection...\"\ntcp_connection, tcp_address = tcp_socket.accept()\nprint 'connected from:', tcp_address\n\n\ndef send_msg_thread():\n    while True:\n        msg = raw_input()\n        tcp_connection.sendall(msg)\n\n\ndef recv_msg_thread():\n    while True:\n        data = tcp_connection.recv(BUFSIZ)\n        if not data:\n            break\n        print 'Jack:' + data\n\ntry:\n    thread.start_new_thread(send_msg_thread, ())\n    thread.start_new_thread(recv_msg_thread, ())\nexcept:\n    print \"Error: unable to start thread\"\nwhile 1:\n    pass\n\n```\n``` python\n# client.py \n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : server.py\n# @Software: PyCharm\n\nimport socket\nimport thread\n\nHOST = 'localhost'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket_client.connect(ADDR)\n\n\ndef send_msg_thread():\n    while True:\n        msg = raw_input()\n        tcp_socket_client.send(msg)\n\n\ndef recv_msg_thread():\n    while True:\n        data = tcp_socket_client.recv(BUFSIZ)\n        if not data:\n            break\n        print 'Ethan:' + data\n\ntry:\n    thread.start_new_thread(send_msg_thread, ())\n    thread.start_new_thread(recv_msg_thread, ())\nexcept:\n    print \"Error: unable to start thread\"\n# tcp_socket_client.close()\nwhile 1:\n    pass\n\n```\n\n``` python\n# server\nwaiting for connection...\nconnected from: ('127.0.0.1', 59918)\n你好， 多线程聊天程序了解一下~~\nJack:兄贵真皮，程序写的溜溜的...\n```\n\n``` python\n# client\nEthan:你好， 多线程聊天程序了解一下~~\n兄贵真皮，程序写的溜溜的...\n```\n\n版权所有 转载注明。Thank you\n\n\n\n\n","source":"_posts/socketInPython.md","raw":"---\ntitle: 套接字socket在Python中的用法测试\ndate: 2016-11-10 13:09:04\ntags: [Python2.7, socket, 多线程]\n---\n本部分介绍 socket — Low-level networking interface   偏底层的接口\n区别于 socketserver  — A framework for network   框架\n## 从计算机网络开始\nOSI七层协议：物理层，数据链路层，网络层，运输层，会话层，表示层，应用层\nTCP/IP的体系结构：网络接口层，网际层IP，运输层（TCP或UDP），应用层（TELNET,FTP,SMTP）\n五层协议体系结构：物理层，数据链路层，网络层，运输层，应用层\n套接字=IP地址 + 端口 + TCP协议或UDP协议  进程与进程之间的网络通信方式或者本机不同进程通过文件系统之间的通信方式\n\n套接字家族选择（socket family）\n基于文件的套接字：单机套接字，使用文件系统作基础，AF_UNIX或者AF_LOCAL\n基于网路的套接字：不同主机进程之间通信的套接字，AF_INET和AP_INET6 （AF_INET是用于IPV4,而AF_INET6是用于IPV6）\n套接字传输数据类型选择（type)\nTCP协议：通信前需要建立连接，连接是可靠的。使用的套接字类型是SOCK_STREAM\nUDP协议：无需连接就能通信，速度快，可靠性不高。传输用户数据报格式UDP的数据。使用的套接字类型是SOCK_DGRAM\n\n由于套接字创建以后归属与一个进程。因此，在操作系统课本中有进程的状态与转换（王道计算机操作系统第28页）\n一个服务端进程的状态如下：创建—>就绪—>运行—>阻塞（一直while循环等待客户端）—>运行（收到请求链接并响应 三次握手）->终止（关闭服务停止运行）\n<!-- more -->\n### 套接字超时注意事项\nTCP协议位于传输层，提供可靠的字节流服务Byte Stream Service。由于在用TCP协议，因此要三次握手建立连接，四次挥手关闭连接。\n如果由于三次握手是需要在一定的时间范围内完成的动作，如果没有完成就超时了。或者三次握手之后，其他通信操作没有及时完成就会出现超时。此时就要做出相应的操作，例如重新执行动作，否则就会失败。\n套接字对象可以是以下三种模式之一：阻塞，非阻塞或超时。默认情况下，套接字创建后处于阻塞模式，但可以通过调用 setdefaulttimeout() 来更改。\n在 阻塞模式 中，操作阻塞直到完成或系统返回错误（例如连接超时）。\n在 非阻塞模式 中，如果无法立即完成操作，那么操作将失败（错误是与系统相关的错误）：来自 select 的函数可用于知道套接字何时可用于读取或写入。\n在 超时模式 中，如果无法在为套接字指定的超时（它们引发 timeout 异常）或系统返回错误时无法完成操作，则操作将失败。\n\n<!-- more -->\n\n### 使用TCP协议套接字用Python2.7实现单线程聊天程序和多线程程序\n``` python\n#仅支持IPV4\n#server.py\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : server.py\n# @Software: PyCharm\nimport socket\n\nHOST = '127.0.0.1'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket.bind(ADDR)\ntcp_socket.listen(5)\n\nwhile True:\n    print \"waiting for connection...\"\n    tcp_connection, tcp_address = tcp_socket.accept()\n    print 'connected from:', tcp_address\n    while True:\n        data = tcp_connection.recv(BUFSIZ)\n        if not data:\n            break\n        print 'Jack:' + data\n        data = raw_input('send message> ')\n        tcp_connection.sendall(data)\n    tcp_connection.close()\ntcp_socket.close()\n\n```\n\n``` python\n#client.py\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : client.py\n# @Software: PyCharm\nimport socket\n\nHOST = 'localhost'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket_client.connect(ADDR)\n\nwhile True:\n    data = raw_input('send message> ')\n    tcp_socket_client.send(data)\n    data = tcp_socket_client.recv(BUFSIZ)\n    if not data:\n        break\n    print 'Ethan:' + data\ntcp_socket_client.close()\n```\n先打开server,再打开client。之后client输入你好，server再输入你也好啊。如此反复即可。要实现类似QQ的聊天。需要多线程或多进程。\n``` bash\n# server\nwaiting for connection...\nconnected from: ('127.0.0.1', 63922)\nJack:你好\nsend message> 你也好啊\n```\n``` bash\n# client\nsend message> 你好\nEthan:你也好啊\nsend message> \n```\n\n### 多线程聊天程序\n四个线程，server和client都有两个线程，第一个线程是发送消息，第二个线程是接收消息。\n``` python\n# server.py\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : server.py\n# @Software: PyCharm\n\nimport socket\nimport thread\n\nHOST = '127.0.0.1'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket.bind(ADDR)\ntcp_socket.listen(5)\n\nprint \"waiting for connection...\"\ntcp_connection, tcp_address = tcp_socket.accept()\nprint 'connected from:', tcp_address\n\n\ndef send_msg_thread():\n    while True:\n        msg = raw_input()\n        tcp_connection.sendall(msg)\n\n\ndef recv_msg_thread():\n    while True:\n        data = tcp_connection.recv(BUFSIZ)\n        if not data:\n            break\n        print 'Jack:' + data\n\ntry:\n    thread.start_new_thread(send_msg_thread, ())\n    thread.start_new_thread(recv_msg_thread, ())\nexcept:\n    print \"Error: unable to start thread\"\nwhile 1:\n    pass\n\n```\n``` python\n# client.py \n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\n# @Time    : 2017/5/18 22:52\n# @Author  : Ethan Sha\n# @File    : server.py\n# @Software: PyCharm\n\nimport socket\nimport thread\n\nHOST = 'localhost'\nPORT = 21567\nBUFSIZ = 1024\nADDR = (HOST, PORT)\n\ntcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ntcp_socket_client.connect(ADDR)\n\n\ndef send_msg_thread():\n    while True:\n        msg = raw_input()\n        tcp_socket_client.send(msg)\n\n\ndef recv_msg_thread():\n    while True:\n        data = tcp_socket_client.recv(BUFSIZ)\n        if not data:\n            break\n        print 'Ethan:' + data\n\ntry:\n    thread.start_new_thread(send_msg_thread, ())\n    thread.start_new_thread(recv_msg_thread, ())\nexcept:\n    print \"Error: unable to start thread\"\n# tcp_socket_client.close()\nwhile 1:\n    pass\n\n```\n\n``` python\n# server\nwaiting for connection...\nconnected from: ('127.0.0.1', 59918)\n你好， 多线程聊天程序了解一下~~\nJack:兄贵真皮，程序写的溜溜的...\n```\n\n``` python\n# client\nEthan:你好， 多线程聊天程序了解一下~~\n兄贵真皮，程序写的溜溜的...\n```\n\n版权所有 转载注明。Thank you\n\n\n\n\n","slug":"socketInPython","published":1,"updated":"2018-05-22T01:37:40.463Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g7j000gv4nbvih0m8t0","content":"<p>本部分介绍 socket — Low-level networking interface   偏底层的接口<br>区别于 socketserver  — A framework for network   框架</p>\n<h2 id=\"从计算机网络开始\"><a href=\"#从计算机网络开始\" class=\"headerlink\" title=\"从计算机网络开始\"></a>从计算机网络开始</h2><p>OSI七层协议：物理层，数据链路层，网络层，运输层，会话层，表示层，应用层<br>TCP/IP的体系结构：网络接口层，网际层IP，运输层（TCP或UDP），应用层（TELNET,FTP,SMTP）<br>五层协议体系结构：物理层，数据链路层，网络层，运输层，应用层<br>套接字=IP地址 + 端口 + TCP协议或UDP协议  进程与进程之间的网络通信方式或者本机不同进程通过文件系统之间的通信方式</p>\n<p>套接字家族选择（socket family）<br>基于文件的套接字：单机套接字，使用文件系统作基础，AF_UNIX或者AF_LOCAL<br>基于网路的套接字：不同主机进程之间通信的套接字，AF_INET和AP_INET6 （AF_INET是用于IPV4,而AF_INET6是用于IPV6）<br>套接字传输数据类型选择（type)<br>TCP协议：通信前需要建立连接，连接是可靠的。使用的套接字类型是SOCK_STREAM<br>UDP协议：无需连接就能通信，速度快，可靠性不高。传输用户数据报格式UDP的数据。使用的套接字类型是SOCK_DGRAM</p>\n<p>由于套接字创建以后归属与一个进程。因此，在操作系统课本中有进程的状态与转换（王道计算机操作系统第28页）<br>一个服务端进程的状态如下：创建—&gt;就绪—&gt;运行—&gt;阻塞（一直while循环等待客户端）—&gt;运行（收到请求链接并响应 三次握手）-&gt;终止（关闭服务停止运行）<br><a id=\"more\"></a></p>\n<h3 id=\"套接字超时注意事项\"><a href=\"#套接字超时注意事项\" class=\"headerlink\" title=\"套接字超时注意事项\"></a>套接字超时注意事项</h3><p>TCP协议位于传输层，提供可靠的字节流服务Byte Stream Service。由于在用TCP协议，因此要三次握手建立连接，四次挥手关闭连接。<br>如果由于三次握手是需要在一定的时间范围内完成的动作，如果没有完成就超时了。或者三次握手之后，其他通信操作没有及时完成就会出现超时。此时就要做出相应的操作，例如重新执行动作，否则就会失败。<br>套接字对象可以是以下三种模式之一：阻塞，非阻塞或超时。默认情况下，套接字创建后处于阻塞模式，但可以通过调用 setdefaulttimeout() 来更改。<br>在 阻塞模式 中，操作阻塞直到完成或系统返回错误（例如连接超时）。<br>在 非阻塞模式 中，如果无法立即完成操作，那么操作将失败（错误是与系统相关的错误）：来自 select 的函数可用于知道套接字何时可用于读取或写入。<br>在 超时模式 中，如果无法在为套接字指定的超时（它们引发 timeout 异常）或系统返回错误时无法完成操作，则操作将失败。</p>\n<!-- more -->\n<h3 id=\"使用TCP协议套接字用Python2-7实现单线程聊天程序和多线程程序\"><a href=\"#使用TCP协议套接字用Python2-7实现单线程聊天程序和多线程程序\" class=\"headerlink\" title=\"使用TCP协议套接字用Python2.7实现单线程聊天程序和多线程程序\"></a>使用TCP协议套接字用Python2.7实现单线程聊天程序和多线程程序</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#仅支持IPV4</span></span><br><span class=\"line\"><span class=\"comment\">#server.py</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : server.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket.bind(ADDR)</span><br><span class=\"line\">tcp_socket.listen(<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"waiting for connection...\"</span></span><br><span class=\"line\">    tcp_connection, tcp_address = tcp_socket.accept()</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'connected from:'</span>, tcp_address</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcp_connection.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Jack:'</span> + data</span><br><span class=\"line\">        data = raw_input(<span class=\"string\">'send message&gt; '</span>)</span><br><span class=\"line\">        tcp_connection.sendall(data)</span><br><span class=\"line\">    tcp_connection.close()</span><br><span class=\"line\">tcp_socket.close()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#client.py</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : client.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'localhost'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket_client.connect(ADDR)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    data = raw_input(<span class=\"string\">'send message&gt; '</span>)</span><br><span class=\"line\">    tcp_socket_client.send(data)</span><br><span class=\"line\">    data = tcp_socket_client.recv(BUFSIZ)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'Ethan:'</span> + data</span><br><span class=\"line\">tcp_socket_client.close()</span><br></pre></td></tr></table></figure>\n<p>先打开server,再打开client。之后client输入你好，server再输入你也好啊。如此反复即可。要实现类似QQ的聊天。需要多线程或多进程。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># server</span></span><br><span class=\"line\">waiting <span class=\"keyword\">for</span> connection...</span><br><span class=\"line\">connected from: (<span class=\"string\">'127.0.0.1'</span>, 63922)</span><br><span class=\"line\">Jack:你好</span><br><span class=\"line\">send message&gt; 你也好啊</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># client</span></span><br><span class=\"line\">send message&gt; 你好</span><br><span class=\"line\">Ethan:你也好啊</span><br><span class=\"line\">send message&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多线程聊天程序\"><a href=\"#多线程聊天程序\" class=\"headerlink\" title=\"多线程聊天程序\"></a>多线程聊天程序</h3><p>四个线程，server和client都有两个线程，第一个线程是发送消息，第二个线程是接收消息。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># server.py</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : server.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> thread</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket.bind(ADDR)</span><br><span class=\"line\">tcp_socket.listen(<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"waiting for connection...\"</span></span><br><span class=\"line\">tcp_connection, tcp_address = tcp_socket.accept()</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'connected from:'</span>, tcp_address</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        msg = raw_input()</span><br><span class=\"line\">        tcp_connection.sendall(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">recv_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcp_connection.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Jack:'</span> + data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    thread.start_new_thread(send_msg_thread, ())</span><br><span class=\"line\">    thread.start_new_thread(recv_msg_thread, ())</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"Error: unable to start thread\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># client.py </span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : server.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> thread</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'localhost'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket_client.connect(ADDR)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        msg = raw_input()</span><br><span class=\"line\">        tcp_socket_client.send(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">recv_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcp_socket_client.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Ethan:'</span> + data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    thread.start_new_thread(send_msg_thread, ())</span><br><span class=\"line\">    thread.start_new_thread(recv_msg_thread, ())</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"Error: unable to start thread\"</span></span><br><span class=\"line\"><span class=\"comment\"># tcp_socket_client.close()</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># server</span></span><br><span class=\"line\">waiting <span class=\"keyword\">for</span> connection...</span><br><span class=\"line\">connected <span class=\"keyword\">from</span>: (<span class=\"string\">'127.0.0.1'</span>, <span class=\"number\">59918</span>)</span><br><span class=\"line\">你好， 多线程聊天程序了解一下~~</span><br><span class=\"line\">Jack:兄贵真皮，程序写的溜溜的...</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># client</span></span><br><span class=\"line\">Ethan:你好， 多线程聊天程序了解一下~~</span><br><span class=\"line\">兄贵真皮，程序写的溜溜的...</span><br></pre></td></tr></table></figure>\n<p>版权所有 转载注明。Thank you</p>\n","site":{"data":{}},"excerpt":"<p>本部分介绍 socket — Low-level networking interface   偏底层的接口<br>区别于 socketserver  — A framework for network   框架</p>\n<h2 id=\"从计算机网络开始\"><a href=\"#从计算机网络开始\" class=\"headerlink\" title=\"从计算机网络开始\"></a>从计算机网络开始</h2><p>OSI七层协议：物理层，数据链路层，网络层，运输层，会话层，表示层，应用层<br>TCP/IP的体系结构：网络接口层，网际层IP，运输层（TCP或UDP），应用层（TELNET,FTP,SMTP）<br>五层协议体系结构：物理层，数据链路层，网络层，运输层，应用层<br>套接字=IP地址 + 端口 + TCP协议或UDP协议  进程与进程之间的网络通信方式或者本机不同进程通过文件系统之间的通信方式</p>\n<p>套接字家族选择（socket family）<br>基于文件的套接字：单机套接字，使用文件系统作基础，AF_UNIX或者AF_LOCAL<br>基于网路的套接字：不同主机进程之间通信的套接字，AF_INET和AP_INET6 （AF_INET是用于IPV4,而AF_INET6是用于IPV6）<br>套接字传输数据类型选择（type)<br>TCP协议：通信前需要建立连接，连接是可靠的。使用的套接字类型是SOCK_STREAM<br>UDP协议：无需连接就能通信，速度快，可靠性不高。传输用户数据报格式UDP的数据。使用的套接字类型是SOCK_DGRAM</p>\n<p>由于套接字创建以后归属与一个进程。因此，在操作系统课本中有进程的状态与转换（王道计算机操作系统第28页）<br>一个服务端进程的状态如下：创建—&gt;就绪—&gt;运行—&gt;阻塞（一直while循环等待客户端）—&gt;运行（收到请求链接并响应 三次握手）-&gt;终止（关闭服务停止运行）<br>","more":"</p>\n<h3 id=\"套接字超时注意事项\"><a href=\"#套接字超时注意事项\" class=\"headerlink\" title=\"套接字超时注意事项\"></a>套接字超时注意事项</h3><p>TCP协议位于传输层，提供可靠的字节流服务Byte Stream Service。由于在用TCP协议，因此要三次握手建立连接，四次挥手关闭连接。<br>如果由于三次握手是需要在一定的时间范围内完成的动作，如果没有完成就超时了。或者三次握手之后，其他通信操作没有及时完成就会出现超时。此时就要做出相应的操作，例如重新执行动作，否则就会失败。<br>套接字对象可以是以下三种模式之一：阻塞，非阻塞或超时。默认情况下，套接字创建后处于阻塞模式，但可以通过调用 setdefaulttimeout() 来更改。<br>在 阻塞模式 中，操作阻塞直到完成或系统返回错误（例如连接超时）。<br>在 非阻塞模式 中，如果无法立即完成操作，那么操作将失败（错误是与系统相关的错误）：来自 select 的函数可用于知道套接字何时可用于读取或写入。<br>在 超时模式 中，如果无法在为套接字指定的超时（它们引发 timeout 异常）或系统返回错误时无法完成操作，则操作将失败。</p>\n<!-- more -->\n<h3 id=\"使用TCP协议套接字用Python2-7实现单线程聊天程序和多线程程序\"><a href=\"#使用TCP协议套接字用Python2-7实现单线程聊天程序和多线程程序\" class=\"headerlink\" title=\"使用TCP协议套接字用Python2.7实现单线程聊天程序和多线程程序\"></a>使用TCP协议套接字用Python2.7实现单线程聊天程序和多线程程序</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#仅支持IPV4</span></span><br><span class=\"line\"><span class=\"comment\">#server.py</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : server.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket.bind(ADDR)</span><br><span class=\"line\">tcp_socket.listen(<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"waiting for connection...\"</span></span><br><span class=\"line\">    tcp_connection, tcp_address = tcp_socket.accept()</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'connected from:'</span>, tcp_address</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcp_connection.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Jack:'</span> + data</span><br><span class=\"line\">        data = raw_input(<span class=\"string\">'send message&gt; '</span>)</span><br><span class=\"line\">        tcp_connection.sendall(data)</span><br><span class=\"line\">    tcp_connection.close()</span><br><span class=\"line\">tcp_socket.close()</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#client.py</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : client.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'localhost'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket_client.connect(ADDR)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">    data = raw_input(<span class=\"string\">'send message&gt; '</span>)</span><br><span class=\"line\">    tcp_socket_client.send(data)</span><br><span class=\"line\">    data = tcp_socket_client.recv(BUFSIZ)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'Ethan:'</span> + data</span><br><span class=\"line\">tcp_socket_client.close()</span><br></pre></td></tr></table></figure>\n<p>先打开server,再打开client。之后client输入你好，server再输入你也好啊。如此反复即可。要实现类似QQ的聊天。需要多线程或多进程。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># server</span></span><br><span class=\"line\">waiting <span class=\"keyword\">for</span> connection...</span><br><span class=\"line\">connected from: (<span class=\"string\">'127.0.0.1'</span>, 63922)</span><br><span class=\"line\">Jack:你好</span><br><span class=\"line\">send message&gt; 你也好啊</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># client</span></span><br><span class=\"line\">send message&gt; 你好</span><br><span class=\"line\">Ethan:你也好啊</span><br><span class=\"line\">send message&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"多线程聊天程序\"><a href=\"#多线程聊天程序\" class=\"headerlink\" title=\"多线程聊天程序\"></a>多线程聊天程序</h3><p>四个线程，server和client都有两个线程，第一个线程是发送消息，第二个线程是接收消息。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># server.py</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : server.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> thread</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'127.0.0.1'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket.bind(ADDR)</span><br><span class=\"line\">tcp_socket.listen(<span class=\"number\">5</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">\"waiting for connection...\"</span></span><br><span class=\"line\">tcp_connection, tcp_address = tcp_socket.accept()</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"string\">'connected from:'</span>, tcp_address</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        msg = raw_input()</span><br><span class=\"line\">        tcp_connection.sendall(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">recv_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcp_connection.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Jack:'</span> + data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    thread.start_new_thread(send_msg_thread, ())</span><br><span class=\"line\">    thread.start_new_thread(recv_msg_thread, ())</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"Error: unable to start thread\"</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># client.py </span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @Time    : 2017/5/18 22:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author  : Ethan Sha</span></span><br><span class=\"line\"><span class=\"comment\"># @File    : server.py</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> thread</span><br><span class=\"line\"></span><br><span class=\"line\">HOST = <span class=\"string\">'localhost'</span></span><br><span class=\"line\">PORT = <span class=\"number\">21567</span></span><br><span class=\"line\">BUFSIZ = <span class=\"number\">1024</span></span><br><span class=\"line\">ADDR = (HOST, PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">tcp_socket_client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">tcp_socket_client.connect(ADDR)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        msg = raw_input()</span><br><span class=\"line\">        tcp_socket_client.send(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">recv_msg_thread</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        data = tcp_socket_client.recv(BUFSIZ)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Ethan:'</span> + data</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    thread.start_new_thread(send_msg_thread, ())</span><br><span class=\"line\">    thread.start_new_thread(recv_msg_thread, ())</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">\"Error: unable to start thread\"</span></span><br><span class=\"line\"><span class=\"comment\"># tcp_socket_client.close()</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># server</span></span><br><span class=\"line\">waiting <span class=\"keyword\">for</span> connection...</span><br><span class=\"line\">connected <span class=\"keyword\">from</span>: (<span class=\"string\">'127.0.0.1'</span>, <span class=\"number\">59918</span>)</span><br><span class=\"line\">你好， 多线程聊天程序了解一下~~</span><br><span class=\"line\">Jack:兄贵真皮，程序写的溜溜的...</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># client</span></span><br><span class=\"line\">Ethan:你好， 多线程聊天程序了解一下~~</span><br><span class=\"line\">兄贵真皮，程序写的溜溜的...</span><br></pre></td></tr></table></figure>\n<p>版权所有 转载注明。Thank you</p>"},{"title":"使用ubuntu,kafka,zookeeper搭建集群服务器","date":"2017-02-01T05:09:04.000Z","_content":"本文将粗略描述一台电脑或者多台电脑搭建集群服务器。以此提供分布式发布订阅消息系统，大数据hadoop，简单的机器学习等多种服务需要的运行环境。\n环境与工具：Windows 10、vmware 14 Pro、ubuntu 16LTS、kafka_2.11-0.11.0.0、zookeeper-3.4.5、xshell5\n配置：8G内存、256G固态、 1T机械、 GTX 850、Intel i5-CPU\nkafka：一种高吞吐量的分布式发布订阅消息系统\nzookeeper：分布式应用程序协调服务，是Hadoop和Hbase的重要组件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。\n## 安装ubuntu16，JDK，kafka，zookeeper并配置vmware 14 pro\n在虚拟机中安装ubuntu16. [下载ubuntu](https://www.ubuntu.com/download/desktop)\n安装完毕后，进入登录界面，此时登录的是安装时注册的用户。\n接着创建root用户,再登入root\n``` bash\nwh136@ubuntu:~$ sudo passwd root\nEnter new UNIX password: \nRetype new UNIX password:\nwh136@ubuntu:~$ su\nroot@ubuntu:/#\n```\n<!-- more -->\n并配置网络，使ubuntu有独立IP地址，也能连接互联网。方便安装JDK,kafka,zookeeper\n配置网络\n![配置网络](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1c1N2lkS1dlbUpyOVNB.jpg)\n![配置网络](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2dWZ1Y5TktSQUZ3UDFJ.jpg)\n![网关](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV09NdTFtQ2VYNzEycTNp.jpg)\n\n### 互相ping测试网络\n![windows ping ubuntu](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1l1UlZTWkhhUml4QmNq.jpg)\n![ubuntu ping windows](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2ZtbnpNb0NNbFNTU2tv.jpg)\n网络互通。\n\n然后再回到ubunutu安装SSH服务，最后使用xshell5连接到ubunutu\n``` bash\nwh136@ubuntu:~$ sudo apt-get install openssh-server    //安装SSH服务\nwh136@ubuntu:~$ sudo ps -e |grep ssh        //检查SSH是否启动 有sshd则启动了\nwh136@ubuntu:~$ sudo service ssh start      //启动SSH服务\n```\n![xshell连接ubuntu](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV25kZVB5SEdmcVJydjdC.jpg)\n这样就搭建了第一台服务器，你想搭几台都可以，只要电脑硬件足够好。给每个虚拟机分配足够多的硬件资源就行。\n注意！在使用完毕后，先把虚拟机中的服务器关闭，再关闭电脑。不能随意关闭，否则有可能造成文件丢失，虚拟机中的系统出现故障。\n\n### 安装JDK\n通过ppa(源) 方式安装JDK.(可以通过 apt-get upgrade 方式方便获得jdk的升级)\n``` bash\nroot@ubuntu:/# sudo add-apt-repository ppa:webupd8team/java         //添加ppa 添加仓库源：\nroot@ubuntu:/# sudo apt-get update                                  //更新软件包列表\nroot@ubuntu:/# sudo apt-get install oracle-java8-installer          //安装Oracle-java-installer \nroot@ubuntu:/# sudo update-java-alternatives -s java-8-oracle       //设置系统默认jdk\nroot@ubuntu:/# java -version                                        //测试jdk是否安装成功\nroot@ubuntu:/# javac -version\n```\n### 安装kafka,zookeeper（配置比较麻烦，暂时放一放）\n``` bash\nroot@ubuntu:/# cd /usr/local\nroot@ubuntu:/usr/local# wget https://archive.apache.org/dist/zookeeper/zookeeper-3.4.5/zookeeper-3.4.5.tar.gz   //注意zookeeper的版本号。后续有些操作会有差别。\nroot@ubuntu:/usr/local# wget http://archive.apache.org/dist/kafka/0.11.0.0/kafka_2.11-0.11.0.0.tgz\nroot@ubuntu:/usr/local# ls\nbin  etc  games  include  kafka_2.11-0.11.0.0.tgz  lib  man  sbin  share  src   zookeeper-3.4.5.tar.gz\nroot@ubuntu:/usr/local# tar -xzvf kafka_2.11-1.0.0.tgz   //解压\nroot@ubuntu:/usr/local# tar -xzvf zookeeper-3.4.5.tar.gz\nroot@ubuntu:/usr/local# cd conf                          //配置\nroot@ubuntu:/usr/local# cp zoo_sample.cfg zoo.cfg\n..... //配置待续\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。\n\n\n\n","source":"_posts/使用ubuntu,kafka,zookeeper搭建集群服务器.md","raw":"---\ntitle: 使用ubuntu,kafka,zookeeper搭建集群服务器\ndate: 2017-2-1 13:09:04\ntags: [集群服务器,分布式,Vmware虚拟机,Linux]\n---\n本文将粗略描述一台电脑或者多台电脑搭建集群服务器。以此提供分布式发布订阅消息系统，大数据hadoop，简单的机器学习等多种服务需要的运行环境。\n环境与工具：Windows 10、vmware 14 Pro、ubuntu 16LTS、kafka_2.11-0.11.0.0、zookeeper-3.4.5、xshell5\n配置：8G内存、256G固态、 1T机械、 GTX 850、Intel i5-CPU\nkafka：一种高吞吐量的分布式发布订阅消息系统\nzookeeper：分布式应用程序协调服务，是Hadoop和Hbase的重要组件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。\n## 安装ubuntu16，JDK，kafka，zookeeper并配置vmware 14 pro\n在虚拟机中安装ubuntu16. [下载ubuntu](https://www.ubuntu.com/download/desktop)\n安装完毕后，进入登录界面，此时登录的是安装时注册的用户。\n接着创建root用户,再登入root\n``` bash\nwh136@ubuntu:~$ sudo passwd root\nEnter new UNIX password: \nRetype new UNIX password:\nwh136@ubuntu:~$ su\nroot@ubuntu:/#\n```\n<!-- more -->\n并配置网络，使ubuntu有独立IP地址，也能连接互联网。方便安装JDK,kafka,zookeeper\n配置网络\n![配置网络](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1c1N2lkS1dlbUpyOVNB.jpg)\n![配置网络](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2dWZ1Y5TktSQUZ3UDFJ.jpg)\n![网关](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV09NdTFtQ2VYNzEycTNp.jpg)\n\n### 互相ping测试网络\n![windows ping ubuntu](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1l1UlZTWkhhUml4QmNq.jpg)\n![ubuntu ping windows](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2ZtbnpNb0NNbFNTU2tv.jpg)\n网络互通。\n\n然后再回到ubunutu安装SSH服务，最后使用xshell5连接到ubunutu\n``` bash\nwh136@ubuntu:~$ sudo apt-get install openssh-server    //安装SSH服务\nwh136@ubuntu:~$ sudo ps -e |grep ssh        //检查SSH是否启动 有sshd则启动了\nwh136@ubuntu:~$ sudo service ssh start      //启动SSH服务\n```\n![xshell连接ubuntu](https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV25kZVB5SEdmcVJydjdC.jpg)\n这样就搭建了第一台服务器，你想搭几台都可以，只要电脑硬件足够好。给每个虚拟机分配足够多的硬件资源就行。\n注意！在使用完毕后，先把虚拟机中的服务器关闭，再关闭电脑。不能随意关闭，否则有可能造成文件丢失，虚拟机中的系统出现故障。\n\n### 安装JDK\n通过ppa(源) 方式安装JDK.(可以通过 apt-get upgrade 方式方便获得jdk的升级)\n``` bash\nroot@ubuntu:/# sudo add-apt-repository ppa:webupd8team/java         //添加ppa 添加仓库源：\nroot@ubuntu:/# sudo apt-get update                                  //更新软件包列表\nroot@ubuntu:/# sudo apt-get install oracle-java8-installer          //安装Oracle-java-installer \nroot@ubuntu:/# sudo update-java-alternatives -s java-8-oracle       //设置系统默认jdk\nroot@ubuntu:/# java -version                                        //测试jdk是否安装成功\nroot@ubuntu:/# javac -version\n```\n### 安装kafka,zookeeper（配置比较麻烦，暂时放一放）\n``` bash\nroot@ubuntu:/# cd /usr/local\nroot@ubuntu:/usr/local# wget https://archive.apache.org/dist/zookeeper/zookeeper-3.4.5/zookeeper-3.4.5.tar.gz   //注意zookeeper的版本号。后续有些操作会有差别。\nroot@ubuntu:/usr/local# wget http://archive.apache.org/dist/kafka/0.11.0.0/kafka_2.11-0.11.0.0.tgz\nroot@ubuntu:/usr/local# ls\nbin  etc  games  include  kafka_2.11-0.11.0.0.tgz  lib  man  sbin  share  src   zookeeper-3.4.5.tar.gz\nroot@ubuntu:/usr/local# tar -xzvf kafka_2.11-1.0.0.tgz   //解压\nroot@ubuntu:/usr/local# tar -xzvf zookeeper-3.4.5.tar.gz\nroot@ubuntu:/usr/local# cd conf                          //配置\nroot@ubuntu:/usr/local# cp zoo_sample.cfg zoo.cfg\n..... //配置待续\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。\n\n\n\n","slug":"使用ubuntu,kafka,zookeeper搭建集群服务器","published":1,"updated":"2018-05-02T13:32:20.310Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g7s000iv4nbajh5qt8e","content":"<p>本文将粗略描述一台电脑或者多台电脑搭建集群服务器。以此提供分布式发布订阅消息系统，大数据hadoop，简单的机器学习等多种服务需要的运行环境。<br>环境与工具：Windows 10、vmware 14 Pro、ubuntu 16LTS、kafka_2.11-0.11.0.0、zookeeper-3.4.5、xshell5<br>配置：8G内存、256G固态、 1T机械、 GTX 850、Intel i5-CPU<br>kafka：一种高吞吐量的分布式发布订阅消息系统<br>zookeeper：分布式应用程序协调服务，是Hadoop和Hbase的重要组件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。</p>\n<h2 id=\"安装ubuntu16，JDK，kafka，zookeeper并配置vmware-14-pro\"><a href=\"#安装ubuntu16，JDK，kafka，zookeeper并配置vmware-14-pro\" class=\"headerlink\" title=\"安装ubuntu16，JDK，kafka，zookeeper并配置vmware 14 pro\"></a>安装ubuntu16，JDK，kafka，zookeeper并配置vmware 14 pro</h2><p>在虚拟机中安装ubuntu16. <a href=\"https://www.ubuntu.com/download/desktop\" target=\"_blank\" rel=\"noopener\">下载ubuntu</a><br>安装完毕后，进入登录界面，此时登录的是安装时注册的用户。<br>接着创建root用户,再登入root<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wh136@ubuntu:~$ sudo passwd root</span><br><span class=\"line\">Enter new UNIX password: </span><br><span class=\"line\">Retype new UNIX password:</span><br><span class=\"line\">wh136@ubuntu:~$ su</span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>并配置网络，使ubuntu有独立IP地址，也能连接互联网。方便安装JDK,kafka,zookeeper<br>配置网络<br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1c1N2lkS1dlbUpyOVNB.jpg\" alt=\"配置网络\"><br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2dWZ1Y5TktSQUZ3UDFJ.jpg\" alt=\"配置网络\"><br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV09NdTFtQ2VYNzEycTNp.jpg\" alt=\"网关\"></p>\n<h3 id=\"互相ping测试网络\"><a href=\"#互相ping测试网络\" class=\"headerlink\" title=\"互相ping测试网络\"></a>互相ping测试网络</h3><p><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1l1UlZTWkhhUml4QmNq.jpg\" alt=\"windows ping ubuntu\"><br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2ZtbnpNb0NNbFNTU2tv.jpg\" alt=\"ubuntu ping windows\"><br>网络互通。</p>\n<p>然后再回到ubunutu安装SSH服务，最后使用xshell5连接到ubunutu<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wh136@ubuntu:~$ sudo apt-get install openssh-server    //安装SSH服务</span><br><span class=\"line\">wh136@ubuntu:~$ sudo ps -e |grep ssh        //检查SSH是否启动 有sshd则启动了</span><br><span class=\"line\">wh136@ubuntu:~$ sudo service ssh start      //启动SSH服务</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV25kZVB5SEdmcVJydjdC.jpg\" alt=\"xshell连接ubuntu\"><br>这样就搭建了第一台服务器，你想搭几台都可以，只要电脑硬件足够好。给每个虚拟机分配足够多的硬件资源就行。<br>注意！在使用完毕后，先把虚拟机中的服务器关闭，再关闭电脑。不能随意关闭，否则有可能造成文件丢失，虚拟机中的系统出现故障。</p>\n<h3 id=\"安装JDK\"><a href=\"#安装JDK\" class=\"headerlink\" title=\"安装JDK\"></a>安装JDK</h3><p>通过ppa(源) 方式安装JDK.(可以通过 apt-get upgrade 方式方便获得jdk的升级)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo add-apt-repository ppa:webupd8team/java         //添加ppa 添加仓库源：</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo apt-get update                                  //更新软件包列表</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo apt-get install oracle-java8-installer          //安装Oracle-java-installer </span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo update-java-alternatives -s java-8-oracle       //设置系统默认jdk</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># java -version                                        //测试jdk是否安装成功</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># javac -version</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"安装kafka-zookeeper（配置比较麻烦，暂时放一放）\"><a href=\"#安装kafka-zookeeper（配置比较麻烦，暂时放一放）\" class=\"headerlink\" title=\"安装kafka,zookeeper（配置比较麻烦，暂时放一放）\"></a>安装kafka,zookeeper（配置比较麻烦，暂时放一放）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/<span class=\"comment\"># cd /usr/local</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># wget https://archive.apache.org/dist/zookeeper/zookeeper-3.4.5/zookeeper-3.4.5.tar.gz   //注意zookeeper的版本号。后续有些操作会有差别。</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># wget http://archive.apache.org/dist/kafka/0.11.0.0/kafka_2.11-0.11.0.0.tgz</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># ls</span></span><br><span class=\"line\">bin  etc  games  include  kafka_2.11-0.11.0.0.tgz  lib  man  sbin  share  src   zookeeper-3.4.5.tar.gz</span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># tar -xzvf kafka_2.11-1.0.0.tgz   //解压</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># tar -xzvf zookeeper-3.4.5.tar.gz</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># cd conf                          //配置</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># cp zoo_sample.cfg zoo.cfg</span></span><br><span class=\"line\">..... //配置待续</span><br></pre></td></tr></table></figure>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<p>本文将粗略描述一台电脑或者多台电脑搭建集群服务器。以此提供分布式发布订阅消息系统，大数据hadoop，简单的机器学习等多种服务需要的运行环境。<br>环境与工具：Windows 10、vmware 14 Pro、ubuntu 16LTS、kafka_2.11-0.11.0.0、zookeeper-3.4.5、xshell5<br>配置：8G内存、256G固态、 1T机械、 GTX 850、Intel i5-CPU<br>kafka：一种高吞吐量的分布式发布订阅消息系统<br>zookeeper：分布式应用程序协调服务，是Hadoop和Hbase的重要组件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。</p>\n<h2 id=\"安装ubuntu16，JDK，kafka，zookeeper并配置vmware-14-pro\"><a href=\"#安装ubuntu16，JDK，kafka，zookeeper并配置vmware-14-pro\" class=\"headerlink\" title=\"安装ubuntu16，JDK，kafka，zookeeper并配置vmware 14 pro\"></a>安装ubuntu16，JDK，kafka，zookeeper并配置vmware 14 pro</h2><p>在虚拟机中安装ubuntu16. <a href=\"https://www.ubuntu.com/download/desktop\" target=\"_blank\" rel=\"noopener\">下载ubuntu</a><br>安装完毕后，进入登录界面，此时登录的是安装时注册的用户。<br>接着创建root用户,再登入root<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wh136@ubuntu:~$ sudo passwd root</span><br><span class=\"line\">Enter new UNIX password: </span><br><span class=\"line\">Retype new UNIX password:</span><br><span class=\"line\">wh136@ubuntu:~$ su</span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\">#</span></span><br></pre></td></tr></table></figure></p>","more":"<p>并配置网络，使ubuntu有独立IP地址，也能连接互联网。方便安装JDK,kafka,zookeeper<br>配置网络<br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1c1N2lkS1dlbUpyOVNB.jpg\" alt=\"配置网络\"><br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2dWZ1Y5TktSQUZ3UDFJ.jpg\" alt=\"配置网络\"><br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV09NdTFtQ2VYNzEycTNp.jpg\" alt=\"网关\"></p>\n<h3 id=\"互相ping测试网络\"><a href=\"#互相ping测试网络\" class=\"headerlink\" title=\"互相ping测试网络\"></a>互相ping测试网络</h3><p><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV1l1UlZTWkhhUml4QmNq.jpg\" alt=\"windows ping ubuntu\"><br><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV2ZtbnpNb0NNbFNTU2tv.jpg\" alt=\"ubuntu ping windows\"><br>网络互通。</p>\n<p>然后再回到ubunutu安装SSH服务，最后使用xshell5连接到ubunutu<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wh136@ubuntu:~$ sudo apt-get install openssh-server    //安装SSH服务</span><br><span class=\"line\">wh136@ubuntu:~$ sudo ps -e |grep ssh        //检查SSH是否启动 有sshd则启动了</span><br><span class=\"line\">wh136@ubuntu:~$ sudo service ssh start      //启动SSH服务</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://onedrive.gimhoy.com/1drv/aHR0cHM6Ly8xZHJ2Lm1zL3UvcyFBbmhUd09YVkZoTzRoV25kZVB5SEdmcVJydjdC.jpg\" alt=\"xshell连接ubuntu\"><br>这样就搭建了第一台服务器，你想搭几台都可以，只要电脑硬件足够好。给每个虚拟机分配足够多的硬件资源就行。<br>注意！在使用完毕后，先把虚拟机中的服务器关闭，再关闭电脑。不能随意关闭，否则有可能造成文件丢失，虚拟机中的系统出现故障。</p>\n<h3 id=\"安装JDK\"><a href=\"#安装JDK\" class=\"headerlink\" title=\"安装JDK\"></a>安装JDK</h3><p>通过ppa(源) 方式安装JDK.(可以通过 apt-get upgrade 方式方便获得jdk的升级)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo add-apt-repository ppa:webupd8team/java         //添加ppa 添加仓库源：</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo apt-get update                                  //更新软件包列表</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo apt-get install oracle-java8-installer          //安装Oracle-java-installer </span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># sudo update-java-alternatives -s java-8-oracle       //设置系统默认jdk</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># java -version                                        //测试jdk是否安装成功</span></span><br><span class=\"line\">root@ubuntu:/<span class=\"comment\"># javac -version</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"安装kafka-zookeeper（配置比较麻烦，暂时放一放）\"><a href=\"#安装kafka-zookeeper（配置比较麻烦，暂时放一放）\" class=\"headerlink\" title=\"安装kafka,zookeeper（配置比较麻烦，暂时放一放）\"></a>安装kafka,zookeeper（配置比较麻烦，暂时放一放）</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/<span class=\"comment\"># cd /usr/local</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># wget https://archive.apache.org/dist/zookeeper/zookeeper-3.4.5/zookeeper-3.4.5.tar.gz   //注意zookeeper的版本号。后续有些操作会有差别。</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># wget http://archive.apache.org/dist/kafka/0.11.0.0/kafka_2.11-0.11.0.0.tgz</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># ls</span></span><br><span class=\"line\">bin  etc  games  include  kafka_2.11-0.11.0.0.tgz  lib  man  sbin  share  src   zookeeper-3.4.5.tar.gz</span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># tar -xzvf kafka_2.11-1.0.0.tgz   //解压</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># tar -xzvf zookeeper-3.4.5.tar.gz</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># cd conf                          //配置</span></span><br><span class=\"line\">root@ubuntu:/usr/<span class=\"built_in\">local</span><span class=\"comment\"># cp zoo_sample.cfg zoo.cfg</span></span><br><span class=\"line\">..... //配置待续</span><br></pre></td></tr></table></figure>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>"},{"title":"协议分析和流量统计","date":"2016-06-10T05:09:04.000Z","_content":"## 协议与数据传输\n现如今社会。物联网的发展需要很多复杂的技术，尽管如此，人类需要更多便捷的自动化。\nFaceBook CEO Zuckerberg建立了自己的人工智能管家，他说：“每年我都会设定一个小目标，2016 年的是给家里弄个人工智能系统，就像钢铁侠里的贾维斯那样。这个人工智能系统它要能识别我的声音，这样能控制音乐、灯光、温度等等。另外，它还要能识别我亲戚朋友的脸，能自己给他们开门。如果我女儿 Max 房间里有任何异常状况，这个系统要第一时间通知我。除了用于生活，它还要能用于 VR 里的数据可视化工作....”\n不仅如此工业控制器系统的发展也是十分迅速。工业革命的道路上，工厂的机器人也要联网。然而安全问题一直是朦胧的状态。\n下面介绍一下对工业控制系统安全方向较强的学术团队的工作。\n哈尔滨工程大学灯塔实验室研究方向主要包括：人工智能及机器学习算法研究、工业控制信息系统安全研究、知识管理与仿真技术建模、信息隐藏与数字水印等\n[灯塔实验室](http://plcscan.org/blog/) 该网站上有一篇文章<<超过8800个工业物联网云中心暴露于公网－DTU数据中心态势感知报告>>\n本文将引入协议和数据传输方面的基础原理和工具。\n<!-- more -->\n## 引入正题 协议分析和流量统计\n在数据没有加密的情况下，无论是物联网还是工业控制系统，他们都需要交换数据，服从控制。在公有协议（TCP/IP协议族等）的基础上开发私有协议。通过抓包程序分析网络数据包的协议头和尾，从而了解信息和相关的数据包在产生和传输过程中的行为。\n如果数据被加密了，可以进行流量统计。因此要尝试攻击网站，数据库之类的都可以进行此类分析。\n### 基础原理和工具\n首先从日常开发着手，先介绍fiddler和wireshark两个同类抓包工具。\n当启动fiddler，fiddler将会把自己作为一个代理，所有的http请求在达到目标服务器之前都会经过fiddler，同样的，所有的http响应都会在返回客户端之前流经fiddler\n默认情况下，fiddler是不会捕获https会话的，所以需要自行设置。\n在某些情况下，fiddler抓包能力不如wireshark。wireshark配置比fiddler麻烦一些，如果不配代理，需要安装个Connectify来建立热点，然后再安装wireshark进行抓包，如果配置了代理，直接安装wireshark即可。\n\n版权声明：本文为博主原创文章，转载时注明，谢谢。\n\n\n","source":"_posts/协议分析和流量统计事关安全隐私.md","raw":"---\ntitle: 协议分析和流量统计\ndate: 2016-6-10 13:09:04\ntags: [抓包,fiddler&wireshark,协议分析,流量统计]\n---\n## 协议与数据传输\n现如今社会。物联网的发展需要很多复杂的技术，尽管如此，人类需要更多便捷的自动化。\nFaceBook CEO Zuckerberg建立了自己的人工智能管家，他说：“每年我都会设定一个小目标，2016 年的是给家里弄个人工智能系统，就像钢铁侠里的贾维斯那样。这个人工智能系统它要能识别我的声音，这样能控制音乐、灯光、温度等等。另外，它还要能识别我亲戚朋友的脸，能自己给他们开门。如果我女儿 Max 房间里有任何异常状况，这个系统要第一时间通知我。除了用于生活，它还要能用于 VR 里的数据可视化工作....”\n不仅如此工业控制器系统的发展也是十分迅速。工业革命的道路上，工厂的机器人也要联网。然而安全问题一直是朦胧的状态。\n下面介绍一下对工业控制系统安全方向较强的学术团队的工作。\n哈尔滨工程大学灯塔实验室研究方向主要包括：人工智能及机器学习算法研究、工业控制信息系统安全研究、知识管理与仿真技术建模、信息隐藏与数字水印等\n[灯塔实验室](http://plcscan.org/blog/) 该网站上有一篇文章<<超过8800个工业物联网云中心暴露于公网－DTU数据中心态势感知报告>>\n本文将引入协议和数据传输方面的基础原理和工具。\n<!-- more -->\n## 引入正题 协议分析和流量统计\n在数据没有加密的情况下，无论是物联网还是工业控制系统，他们都需要交换数据，服从控制。在公有协议（TCP/IP协议族等）的基础上开发私有协议。通过抓包程序分析网络数据包的协议头和尾，从而了解信息和相关的数据包在产生和传输过程中的行为。\n如果数据被加密了，可以进行流量统计。因此要尝试攻击网站，数据库之类的都可以进行此类分析。\n### 基础原理和工具\n首先从日常开发着手，先介绍fiddler和wireshark两个同类抓包工具。\n当启动fiddler，fiddler将会把自己作为一个代理，所有的http请求在达到目标服务器之前都会经过fiddler，同样的，所有的http响应都会在返回客户端之前流经fiddler\n默认情况下，fiddler是不会捕获https会话的，所以需要自行设置。\n在某些情况下，fiddler抓包能力不如wireshark。wireshark配置比fiddler麻烦一些，如果不配代理，需要安装个Connectify来建立热点，然后再安装wireshark进行抓包，如果配置了代理，直接安装wireshark即可。\n\n版权声明：本文为博主原创文章，转载时注明，谢谢。\n\n\n","slug":"协议分析和流量统计事关安全隐私","published":1,"updated":"2018-05-02T10:51:08.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g80000kv4nb48ahtp36","content":"<h2 id=\"协议与数据传输\"><a href=\"#协议与数据传输\" class=\"headerlink\" title=\"协议与数据传输\"></a>协议与数据传输</h2><p>现如今社会。物联网的发展需要很多复杂的技术，尽管如此，人类需要更多便捷的自动化。<br>FaceBook CEO Zuckerberg建立了自己的人工智能管家，他说：“每年我都会设定一个小目标，2016 年的是给家里弄个人工智能系统，就像钢铁侠里的贾维斯那样。这个人工智能系统它要能识别我的声音，这样能控制音乐、灯光、温度等等。另外，它还要能识别我亲戚朋友的脸，能自己给他们开门。如果我女儿 Max 房间里有任何异常状况，这个系统要第一时间通知我。除了用于生活，它还要能用于 VR 里的数据可视化工作….”<br>不仅如此工业控制器系统的发展也是十分迅速。工业革命的道路上，工厂的机器人也要联网。然而安全问题一直是朦胧的状态。<br>下面介绍一下对工业控制系统安全方向较强的学术团队的工作。<br>哈尔滨工程大学灯塔实验室研究方向主要包括：人工智能及机器学习算法研究、工业控制信息系统安全研究、知识管理与仿真技术建模、信息隐藏与数字水印等<br><a href=\"http://plcscan.org/blog/\" target=\"_blank\" rel=\"noopener\">灯塔实验室</a> 该网站上有一篇文章&lt;&lt;超过8800个工业物联网云中心暴露于公网－DTU数据中心态势感知报告&gt;&gt;<br>本文将引入协议和数据传输方面的基础原理和工具。<br><a id=\"more\"></a></p>\n<h2 id=\"引入正题-协议分析和流量统计\"><a href=\"#引入正题-协议分析和流量统计\" class=\"headerlink\" title=\"引入正题 协议分析和流量统计\"></a>引入正题 协议分析和流量统计</h2><p>在数据没有加密的情况下，无论是物联网还是工业控制系统，他们都需要交换数据，服从控制。在公有协议（TCP/IP协议族等）的基础上开发私有协议。通过抓包程序分析网络数据包的协议头和尾，从而了解信息和相关的数据包在产生和传输过程中的行为。<br>如果数据被加密了，可以进行流量统计。因此要尝试攻击网站，数据库之类的都可以进行此类分析。</p>\n<h3 id=\"基础原理和工具\"><a href=\"#基础原理和工具\" class=\"headerlink\" title=\"基础原理和工具\"></a>基础原理和工具</h3><p>首先从日常开发着手，先介绍fiddler和wireshark两个同类抓包工具。<br>当启动fiddler，fiddler将会把自己作为一个代理，所有的http请求在达到目标服务器之前都会经过fiddler，同样的，所有的http响应都会在返回客户端之前流经fiddler<br>默认情况下，fiddler是不会捕获https会话的，所以需要自行设置。<br>在某些情况下，fiddler抓包能力不如wireshark。wireshark配置比fiddler麻烦一些，如果不配代理，需要安装个Connectify来建立热点，然后再安装wireshark进行抓包，如果配置了代理，直接安装wireshark即可。</p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"协议与数据传输\"><a href=\"#协议与数据传输\" class=\"headerlink\" title=\"协议与数据传输\"></a>协议与数据传输</h2><p>现如今社会。物联网的发展需要很多复杂的技术，尽管如此，人类需要更多便捷的自动化。<br>FaceBook CEO Zuckerberg建立了自己的人工智能管家，他说：“每年我都会设定一个小目标，2016 年的是给家里弄个人工智能系统，就像钢铁侠里的贾维斯那样。这个人工智能系统它要能识别我的声音，这样能控制音乐、灯光、温度等等。另外，它还要能识别我亲戚朋友的脸，能自己给他们开门。如果我女儿 Max 房间里有任何异常状况，这个系统要第一时间通知我。除了用于生活，它还要能用于 VR 里的数据可视化工作….”<br>不仅如此工业控制器系统的发展也是十分迅速。工业革命的道路上，工厂的机器人也要联网。然而安全问题一直是朦胧的状态。<br>下面介绍一下对工业控制系统安全方向较强的学术团队的工作。<br>哈尔滨工程大学灯塔实验室研究方向主要包括：人工智能及机器学习算法研究、工业控制信息系统安全研究、知识管理与仿真技术建模、信息隐藏与数字水印等<br><a href=\"http://plcscan.org/blog/\" target=\"_blank\" rel=\"noopener\">灯塔实验室</a> 该网站上有一篇文章&lt;&lt;超过8800个工业物联网云中心暴露于公网－DTU数据中心态势感知报告&gt;&gt;<br>本文将引入协议和数据传输方面的基础原理和工具。<br>","more":"</p>\n<h2 id=\"引入正题-协议分析和流量统计\"><a href=\"#引入正题-协议分析和流量统计\" class=\"headerlink\" title=\"引入正题 协议分析和流量统计\"></a>引入正题 协议分析和流量统计</h2><p>在数据没有加密的情况下，无论是物联网还是工业控制系统，他们都需要交换数据，服从控制。在公有协议（TCP/IP协议族等）的基础上开发私有协议。通过抓包程序分析网络数据包的协议头和尾，从而了解信息和相关的数据包在产生和传输过程中的行为。<br>如果数据被加密了，可以进行流量统计。因此要尝试攻击网站，数据库之类的都可以进行此类分析。</p>\n<h3 id=\"基础原理和工具\"><a href=\"#基础原理和工具\" class=\"headerlink\" title=\"基础原理和工具\"></a>基础原理和工具</h3><p>首先从日常开发着手，先介绍fiddler和wireshark两个同类抓包工具。<br>当启动fiddler，fiddler将会把自己作为一个代理，所有的http请求在达到目标服务器之前都会经过fiddler，同样的，所有的http响应都会在返回客户端之前流经fiddler<br>默认情况下，fiddler是不会捕获https会话的，所以需要自行设置。<br>在某些情况下，fiddler抓包能力不如wireshark。wireshark配置比fiddler麻烦一些，如果不配代理，需要安装个Connectify来建立热点，然后再安装wireshark进行抓包，如果配置了代理，直接安装wireshark即可。</p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>"},{"title":"多进程扫描服务器","date":"2016-08-14T05:09:04.000Z","_content":"在电信十所服务器机房里管理众多的服务器，由于个别服务器(华为服务器)纽扣电池有问题，开机启动不正常，\n于是写出以下Python程序用于扫描服务器是否正常开机。\n### 预备知识\n需要扫描多个服务器的IP地址。并且只能使用Windows自带Ping.exe程序。\n于是用到以下Python模块：multiprocessing、subprocess、re\n这三个模块分别是多进程模块，子进程模块，正则表达式模块\n<!-- more -->\n```Python\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\nimport subprocess\nimport re\nfrom time import ctime\nimport multiprocessing\n\n\ndef ping_server(ip):\n    p = subprocess.Popen([\"PING.EXE\", ip], stdin=subprocess.PIPE,\n                         stdout=subprocess.PIPE,\n                         stderr=subprocess.PIPE,\n                         shell=True)\n    out = p.stdout.read().decode('gbk')\n    if re.search(\"TTL=64\", out) is not None:\n        print '%s' % ip, 'OK'\n    else:\n        print '%s' % ip, 'Failed!!!'\n\n\ndef main():\n    print 'Start at ', ctime()\n    process_list = []\n    args_ip = ['192.168.0.1', '192.168.80.3', '192.168.80.4', '192.168.80.100',\n               '192.168.1.60', '192.168.30.61', '192.168.30.62',\n               '192.168.30.63', '192.168.30.64', '192.168.30.82',\n               '192.168.30.81', '192.168.80.2']\n    for i in range(0, len(args_ip)):\n        p = multiprocessing.Process(target=ping_server, args=(args_ip[i],))\n        process_list.append(p)\n\n    for i in range(0, len(args_ip)):\n        process_list[i].start()\n\n    for i in range(0, len(args_ip)):\n        process_list[i].join()\n\n    print 'End at', ctime()\n\n\nif __name__ == '__main__':\n    main()\n```\n``` Python\nStart at  Sun Aug 29 21:02:13 2016\n192.168.0.1 OK\n192.168.80.3 OK\n192.168.80.4 OK\n192.168.1.60 OK\n192.168.80.100 OK\n192.168.30.62 OK\n192.168.80.2 Failed!!!\n192.168.30.64 OK\n192.168.30.63 OK\n192.168.30.82 OK\n192.168.30.61 OK\n192.168.30.81 Failed!!!\nEnd at Sun Aug 29 21:02:33 2016\n\n```\n\n### 结论与改进\n从结果可以看出某些服务器开机不正常，进而可以做进一步措施。本次扫描只是我们小组的服务器，其他小组还没去管理。\n如果服务器数量很多，有时候由于异步，打印会比较乱，这时候需要用到信号量中的经典问题生产者与消费者问题来同步进程。\n下一次改进待到合适再进行。\n\n版权声明：本文为博主原创文章，转载时注明，谢谢。","source":"_posts/多进程扫描服务器.md","raw":"---\ntitle: 多进程扫描服务器\ndate: 2016-8-14 13:09:04\ntags: [Python2.7,多进程]\n---\n在电信十所服务器机房里管理众多的服务器，由于个别服务器(华为服务器)纽扣电池有问题，开机启动不正常，\n于是写出以下Python程序用于扫描服务器是否正常开机。\n### 预备知识\n需要扫描多个服务器的IP地址。并且只能使用Windows自带Ping.exe程序。\n于是用到以下Python模块：multiprocessing、subprocess、re\n这三个模块分别是多进程模块，子进程模块，正则表达式模块\n<!-- more -->\n```Python\n#!/usr/bin/python 2.7\n# -*- coding: utf-8 -*-\nimport subprocess\nimport re\nfrom time import ctime\nimport multiprocessing\n\n\ndef ping_server(ip):\n    p = subprocess.Popen([\"PING.EXE\", ip], stdin=subprocess.PIPE,\n                         stdout=subprocess.PIPE,\n                         stderr=subprocess.PIPE,\n                         shell=True)\n    out = p.stdout.read().decode('gbk')\n    if re.search(\"TTL=64\", out) is not None:\n        print '%s' % ip, 'OK'\n    else:\n        print '%s' % ip, 'Failed!!!'\n\n\ndef main():\n    print 'Start at ', ctime()\n    process_list = []\n    args_ip = ['192.168.0.1', '192.168.80.3', '192.168.80.4', '192.168.80.100',\n               '192.168.1.60', '192.168.30.61', '192.168.30.62',\n               '192.168.30.63', '192.168.30.64', '192.168.30.82',\n               '192.168.30.81', '192.168.80.2']\n    for i in range(0, len(args_ip)):\n        p = multiprocessing.Process(target=ping_server, args=(args_ip[i],))\n        process_list.append(p)\n\n    for i in range(0, len(args_ip)):\n        process_list[i].start()\n\n    for i in range(0, len(args_ip)):\n        process_list[i].join()\n\n    print 'End at', ctime()\n\n\nif __name__ == '__main__':\n    main()\n```\n``` Python\nStart at  Sun Aug 29 21:02:13 2016\n192.168.0.1 OK\n192.168.80.3 OK\n192.168.80.4 OK\n192.168.1.60 OK\n192.168.80.100 OK\n192.168.30.62 OK\n192.168.80.2 Failed!!!\n192.168.30.64 OK\n192.168.30.63 OK\n192.168.30.82 OK\n192.168.30.61 OK\n192.168.30.81 Failed!!!\nEnd at Sun Aug 29 21:02:33 2016\n\n```\n\n### 结论与改进\n从结果可以看出某些服务器开机不正常，进而可以做进一步措施。本次扫描只是我们小组的服务器，其他小组还没去管理。\n如果服务器数量很多，有时候由于异步，打印会比较乱，这时候需要用到信号量中的经典问题生产者与消费者问题来同步进程。\n下一次改进待到合适再进行。\n\n版权声明：本文为博主原创文章，转载时注明，谢谢。","slug":"多进程扫描服务器","published":1,"updated":"2018-05-19T11:41:48.704Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g84000lv4nbf4g8fvpz","content":"<p>在电信十所服务器机房里管理众多的服务器，由于个别服务器(华为服务器)纽扣电池有问题，开机启动不正常，<br>于是写出以下Python程序用于扫描服务器是否正常开机。</p>\n<h3 id=\"预备知识\"><a href=\"#预备知识\" class=\"headerlink\" title=\"预备知识\"></a>预备知识</h3><p>需要扫描多个服务器的IP地址。并且只能使用Windows自带Ping.exe程序。<br>于是用到以下Python模块：multiprocessing、subprocess、re<br>这三个模块分别是多进程模块，子进程模块，正则表达式模块<br><a id=\"more\"></a><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> ctime</span><br><span class=\"line\"><span class=\"keyword\">import</span> multiprocessing</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ping_server</span><span class=\"params\">(ip)</span>:</span></span><br><span class=\"line\">    p = subprocess.Popen([<span class=\"string\">\"PING.EXE\"</span>, ip], stdin=subprocess.PIPE,</span><br><span class=\"line\">                         stdout=subprocess.PIPE,</span><br><span class=\"line\">                         stderr=subprocess.PIPE,</span><br><span class=\"line\">                         shell=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    out = p.stdout.read().decode(<span class=\"string\">'gbk'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> re.search(<span class=\"string\">\"TTL=64\"</span>, out) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'%s'</span> % ip, <span class=\"string\">'OK'</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'%s'</span> % ip, <span class=\"string\">'Failed!!!'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'Start at '</span>, ctime()</span><br><span class=\"line\">    process_list = []</span><br><span class=\"line\">    args_ip = [<span class=\"string\">'192.168.0.1'</span>, <span class=\"string\">'192.168.80.3'</span>, <span class=\"string\">'192.168.80.4'</span>, <span class=\"string\">'192.168.80.100'</span>,</span><br><span class=\"line\">               <span class=\"string\">'192.168.1.60'</span>, <span class=\"string\">'192.168.30.61'</span>, <span class=\"string\">'192.168.30.62'</span>,</span><br><span class=\"line\">               <span class=\"string\">'192.168.30.63'</span>, <span class=\"string\">'192.168.30.64'</span>, <span class=\"string\">'192.168.30.82'</span>,</span><br><span class=\"line\">               <span class=\"string\">'192.168.30.81'</span>, <span class=\"string\">'192.168.80.2'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(args_ip)):</span><br><span class=\"line\">        p = multiprocessing.Process(target=ping_server, args=(args_ip[i],))</span><br><span class=\"line\">        process_list.append(p)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(args_ip)):</span><br><span class=\"line\">        process_list[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(args_ip)):</span><br><span class=\"line\">        process_list[i].join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'End at'</span>, ctime()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Start at  Sun Aug <span class=\"number\">29</span> <span class=\"number\">21</span>:<span class=\"number\">02</span>:<span class=\"number\">13</span> <span class=\"number\">2016</span></span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.3</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.4</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.60</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.100</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.62</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.2</span> Failed!!!</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.64</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.63</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.82</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.61</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.81</span> Failed!!!</span><br><span class=\"line\">End at Sun Aug <span class=\"number\">29</span> <span class=\"number\">21</span>:<span class=\"number\">02</span>:<span class=\"number\">33</span> <span class=\"number\">2016</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"结论与改进\"><a href=\"#结论与改进\" class=\"headerlink\" title=\"结论与改进\"></a>结论与改进</h3><p>从结果可以看出某些服务器开机不正常，进而可以做进一步措施。本次扫描只是我们小组的服务器，其他小组还没去管理。<br>如果服务器数量很多，有时候由于异步，打印会比较乱，这时候需要用到信号量中的经典问题生产者与消费者问题来同步进程。<br>下一次改进待到合适再进行。</p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<p>在电信十所服务器机房里管理众多的服务器，由于个别服务器(华为服务器)纽扣电池有问题，开机启动不正常，<br>于是写出以下Python程序用于扫描服务器是否正常开机。</p>\n<h3 id=\"预备知识\"><a href=\"#预备知识\" class=\"headerlink\" title=\"预备知识\"></a>预备知识</h3><p>需要扫描多个服务器的IP地址。并且只能使用Windows自带Ping.exe程序。<br>于是用到以下Python模块：multiprocessing、subprocess、re<br>这三个模块分别是多进程模块，子进程模块，正则表达式模块<br>","more":"<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python 2.7</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> ctime</span><br><span class=\"line\"><span class=\"keyword\">import</span> multiprocessing</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ping_server</span><span class=\"params\">(ip)</span>:</span></span><br><span class=\"line\">    p = subprocess.Popen([<span class=\"string\">\"PING.EXE\"</span>, ip], stdin=subprocess.PIPE,</span><br><span class=\"line\">                         stdout=subprocess.PIPE,</span><br><span class=\"line\">                         stderr=subprocess.PIPE,</span><br><span class=\"line\">                         shell=<span class=\"keyword\">True</span>)</span><br><span class=\"line\">    out = p.stdout.read().decode(<span class=\"string\">'gbk'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> re.search(<span class=\"string\">\"TTL=64\"</span>, out) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'%s'</span> % ip, <span class=\"string\">'OK'</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'%s'</span> % ip, <span class=\"string\">'Failed!!!'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'Start at '</span>, ctime()</span><br><span class=\"line\">    process_list = []</span><br><span class=\"line\">    args_ip = [<span class=\"string\">'192.168.0.1'</span>, <span class=\"string\">'192.168.80.3'</span>, <span class=\"string\">'192.168.80.4'</span>, <span class=\"string\">'192.168.80.100'</span>,</span><br><span class=\"line\">               <span class=\"string\">'192.168.1.60'</span>, <span class=\"string\">'192.168.30.61'</span>, <span class=\"string\">'192.168.30.62'</span>,</span><br><span class=\"line\">               <span class=\"string\">'192.168.30.63'</span>, <span class=\"string\">'192.168.30.64'</span>, <span class=\"string\">'192.168.30.82'</span>,</span><br><span class=\"line\">               <span class=\"string\">'192.168.30.81'</span>, <span class=\"string\">'192.168.80.2'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(args_ip)):</span><br><span class=\"line\">        p = multiprocessing.Process(target=ping_server, args=(args_ip[i],))</span><br><span class=\"line\">        process_list.append(p)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(args_ip)):</span><br><span class=\"line\">        process_list[i].start()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, len(args_ip)):</span><br><span class=\"line\">        process_list[i].join()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'End at'</span>, ctime()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Start at  Sun Aug <span class=\"number\">29</span> <span class=\"number\">21</span>:<span class=\"number\">02</span>:<span class=\"number\">13</span> <span class=\"number\">2016</span></span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.1</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.3</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.4</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.60</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.100</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.62</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.80</span><span class=\"number\">.2</span> Failed!!!</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.64</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.63</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.82</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.61</span> OK</span><br><span class=\"line\"><span class=\"number\">192.168</span><span class=\"number\">.30</span><span class=\"number\">.81</span> Failed!!!</span><br><span class=\"line\">End at Sun Aug <span class=\"number\">29</span> <span class=\"number\">21</span>:<span class=\"number\">02</span>:<span class=\"number\">33</span> <span class=\"number\">2016</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"结论与改进\"><a href=\"#结论与改进\" class=\"headerlink\" title=\"结论与改进\"></a>结论与改进</h3><p>从结果可以看出某些服务器开机不正常，进而可以做进一步措施。本次扫描只是我们小组的服务器，其他小组还没去管理。<br>如果服务器数量很多，有时候由于异步，打印会比较乱，这时候需要用到信号量中的经典问题生产者与消费者问题来同步进程。<br>下一次改进待到合适再进行。</p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>"},{"title":"简单对象访问协议Simple Object Access Protocol(SOAP)","date":"2016-10-16T05:09:04.000Z","_content":"\n### 预备知识\nSimple Object Access Protocol是应用程序交换消息数据的一种协议，使用在web服务(Web Service),SOAP是其简写，\n由于非常容易与Service-oriented architecture(SOA)产生歧义，在2003年SOAP这种缩写被废止了。\n\n一个简单对象访问协议(Simple Object Access Protocol)的消息是一个普通的XML文档，并包含以下元素。\n1.一个信封元素Envelope element用于定义一个XML文档为简单对象访问协议(Simple Object Access Protocol)的消息。\n2.一个头元素header element包含头信息\n3.一个体元素body element包含呼叫和应答信息\n4.一个过错元素fault element包含问题和状态信息\n<!-- more -->\n简单对象访问协议Simple Object Access Protocol消息的结构\n```XML\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n\n<soap:Header>\n...\n</soap:Header>\n\n<soap:Body>\n...\n  <soap:Fault>\n  ...\n  </soap:Fault>\n</soap:Body>\n\n</soap:Envelope>\n```\n信封元素Envelope element包含Namespace命名空间和encodingStyle Attribute编码格式属性\n```XML\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n  ...\n  Message information goes here\n  ...\n</soap:Envelope>\n```\n\n该协议的消息结构具体信息：[简单对象访问协议](https://www.w3schools.com/xml/xml_soap.asp)\n\n在了解完该协议下消息的结构后，需要交换消息，可以使用应用层协议来传输消息，例如SMTP、HTTP、HTTPS。\n下面以HTTP协议为例，介绍向服务器发送请求股票(IBM股票)价格SOAP消息，服务器返回股票价格SOAP消息。\n### HTTP协议(Hypertext Transfer Protocol超文本传输协议)\nHTTP协议是基于TCP/IP协议族进行消息文本传输的协议，一个HTTP客户端连接一个HTTP服务器需要用[TCP协议](https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE)（传输控制协议Transmission Control Protocol）\n在建立连接之后，客户端可以向服务器发送HTTP请求消息。\n```\nPOST /item HTTP/1.1\nHost: 189.123.255.239\nContent-Type: text/plain\nContent-Length: 200\n```\n服务器收到请求并且该请求是正确的格式，向客户端发动响应，该响应包含一个状态码表明请求收到。\n```\n200 OK\nContent-Type: text/plain\nContent-Length: 200\n```\n### 简单对象访问协议绑定(SOAP Binding)\n通过简单对象访问协议绑定可以进行数据交换，该绑定的原理是使用传输协议（transport protocol）交换SOAP消息。\n大多数简单对象访问协议绑定（SOAP Binding）的实现模块提供了对HTTP、SMTP协议的绑定\nHTTP协议是同步的，并且被广泛的应用于生活中。一个SOAP HTTP请求限定了至少两个HTTP头（HTTP headers）Content-Type 和 Content-Length\nSMTP协议是异步的，是特殊情况下才用的特效解药。\nJava对SOAP的实现提供了一个对JMS协议（Java Messaging System）的绑定。\nPython对SOAP的实现，针对web服务(WebService)有soaplib库，但是在2011年官网停止对该库更新。并且转向另外一个库rpclib\n\n### Content-Type和Content-Length\nSOAP请求和响应的Content-Type头规定了MIME type，消息的MIME type和字符编码被用于规定XML体的请求、响应。\n```\nContent-Type: MIMEType; charset=character-encoding\n```\n例子\n```\nPOST /item HTTP/1.1\nContent-Type: application/soap+xml; charset=utf-8\n```\nSOAP请求和响应的Content-Length规定了请求、响应体中的字节数。\n```\nContent-Length: bytes\n```\n例子\n```\nPOST /item HTTP/1.1\nContent-Type: application/soap+xml; charset=utf-8\nContent-Length: 250\n```\n### 正式开始我们的主菜！股票价格SOAP消息\n一个含有股票名（IBM）的请求价格消息如下所示，在发送到服务端后，我们将收到SOAP股票价格消息，这个功能的命名空间定义在\"http://www.example.org/stock\".\nSOAP请求\n```\nPOST /InStock HTTP/1.1\nHost: www.example.org\nContent-Type: application/soap+xml; charset=utf-8\nContent-Length: nnn\n\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n\n<soap:Body xmlns:m=\"http://www.example.org/stock\">\n  <m:GetStockPrice>\n    <m:StockName>IBM</m:StockName>\n  </m:GetStockPrice>\n</soap:Body>\n\n</soap:Envelope>\n```\nSOAP响应\n```\nHTTP/1.1 200 OK\nContent-Type: application/soap+xml; charset=utf-8\nContent-Length: nnn\n\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n\n<soap:Body xmlns:m=\"http://www.example.org/stock\">\n  <m:GetStockPriceResponse>\n    <m:Price>34.5</m:Price>\n  </m:GetStockPriceResponse>\n</soap:Body>\n\n</soap:Envelope>\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。","source":"_posts/简单对象访问协议SOAP.md","raw":"---\ntitle: 简单对象访问协议Simple Object Access Protocol(SOAP)\ndate: 2016-10-16 13:09:04\ntags: [XML,HTTP协议,WebService]\n\n---\n\n### 预备知识\nSimple Object Access Protocol是应用程序交换消息数据的一种协议，使用在web服务(Web Service),SOAP是其简写，\n由于非常容易与Service-oriented architecture(SOA)产生歧义，在2003年SOAP这种缩写被废止了。\n\n一个简单对象访问协议(Simple Object Access Protocol)的消息是一个普通的XML文档，并包含以下元素。\n1.一个信封元素Envelope element用于定义一个XML文档为简单对象访问协议(Simple Object Access Protocol)的消息。\n2.一个头元素header element包含头信息\n3.一个体元素body element包含呼叫和应答信息\n4.一个过错元素fault element包含问题和状态信息\n<!-- more -->\n简单对象访问协议Simple Object Access Protocol消息的结构\n```XML\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n\n<soap:Header>\n...\n</soap:Header>\n\n<soap:Body>\n...\n  <soap:Fault>\n  ...\n  </soap:Fault>\n</soap:Body>\n\n</soap:Envelope>\n```\n信封元素Envelope element包含Namespace命名空间和encodingStyle Attribute编码格式属性\n```XML\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n  ...\n  Message information goes here\n  ...\n</soap:Envelope>\n```\n\n该协议的消息结构具体信息：[简单对象访问协议](https://www.w3schools.com/xml/xml_soap.asp)\n\n在了解完该协议下消息的结构后，需要交换消息，可以使用应用层协议来传输消息，例如SMTP、HTTP、HTTPS。\n下面以HTTP协议为例，介绍向服务器发送请求股票(IBM股票)价格SOAP消息，服务器返回股票价格SOAP消息。\n### HTTP协议(Hypertext Transfer Protocol超文本传输协议)\nHTTP协议是基于TCP/IP协议族进行消息文本传输的协议，一个HTTP客户端连接一个HTTP服务器需要用[TCP协议](https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE)（传输控制协议Transmission Control Protocol）\n在建立连接之后，客户端可以向服务器发送HTTP请求消息。\n```\nPOST /item HTTP/1.1\nHost: 189.123.255.239\nContent-Type: text/plain\nContent-Length: 200\n```\n服务器收到请求并且该请求是正确的格式，向客户端发动响应，该响应包含一个状态码表明请求收到。\n```\n200 OK\nContent-Type: text/plain\nContent-Length: 200\n```\n### 简单对象访问协议绑定(SOAP Binding)\n通过简单对象访问协议绑定可以进行数据交换，该绑定的原理是使用传输协议（transport protocol）交换SOAP消息。\n大多数简单对象访问协议绑定（SOAP Binding）的实现模块提供了对HTTP、SMTP协议的绑定\nHTTP协议是同步的，并且被广泛的应用于生活中。一个SOAP HTTP请求限定了至少两个HTTP头（HTTP headers）Content-Type 和 Content-Length\nSMTP协议是异步的，是特殊情况下才用的特效解药。\nJava对SOAP的实现提供了一个对JMS协议（Java Messaging System）的绑定。\nPython对SOAP的实现，针对web服务(WebService)有soaplib库，但是在2011年官网停止对该库更新。并且转向另外一个库rpclib\n\n### Content-Type和Content-Length\nSOAP请求和响应的Content-Type头规定了MIME type，消息的MIME type和字符编码被用于规定XML体的请求、响应。\n```\nContent-Type: MIMEType; charset=character-encoding\n```\n例子\n```\nPOST /item HTTP/1.1\nContent-Type: application/soap+xml; charset=utf-8\n```\nSOAP请求和响应的Content-Length规定了请求、响应体中的字节数。\n```\nContent-Length: bytes\n```\n例子\n```\nPOST /item HTTP/1.1\nContent-Type: application/soap+xml; charset=utf-8\nContent-Length: 250\n```\n### 正式开始我们的主菜！股票价格SOAP消息\n一个含有股票名（IBM）的请求价格消息如下所示，在发送到服务端后，我们将收到SOAP股票价格消息，这个功能的命名空间定义在\"http://www.example.org/stock\".\nSOAP请求\n```\nPOST /InStock HTTP/1.1\nHost: www.example.org\nContent-Type: application/soap+xml; charset=utf-8\nContent-Length: nnn\n\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n\n<soap:Body xmlns:m=\"http://www.example.org/stock\">\n  <m:GetStockPrice>\n    <m:StockName>IBM</m:StockName>\n  </m:GetStockPrice>\n</soap:Body>\n\n</soap:Envelope>\n```\nSOAP响应\n```\nHTTP/1.1 200 OK\nContent-Type: application/soap+xml; charset=utf-8\nContent-Length: nnn\n\n<?xml version=\"1.0\"?>\n\n<soap:Envelope\nxmlns:soap=\"http://www.w3.org/2003/05/soap-envelope/\"\nsoap:encodingStyle=\"http://www.w3.org/2003/05/soap-encoding\">\n\n<soap:Body xmlns:m=\"http://www.example.org/stock\">\n  <m:GetStockPriceResponse>\n    <m:Price>34.5</m:Price>\n  </m:GetStockPriceResponse>\n</soap:Body>\n\n</soap:Envelope>\n```\n版权声明：本文为博主原创文章，转载时注明，谢谢。","slug":"简单对象访问协议SOAP","published":1,"updated":"2018-05-02T10:50:24.079Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoxv5g87000mv4nbgnna9h80","content":"<h3 id=\"预备知识\"><a href=\"#预备知识\" class=\"headerlink\" title=\"预备知识\"></a>预备知识</h3><p>Simple Object Access Protocol是应用程序交换消息数据的一种协议，使用在web服务(Web Service),SOAP是其简写，<br>由于非常容易与Service-oriented architecture(SOA)产生歧义，在2003年SOAP这种缩写被废止了。</p>\n<p>一个简单对象访问协议(Simple Object Access Protocol)的消息是一个普通的XML文档，并包含以下元素。<br>1.一个信封元素Envelope element用于定义一个XML文档为简单对象访问协议(Simple Object Access Protocol)的消息。<br>2.一个头元素header element包含头信息<br>3.一个体元素body element包含呼叫和应答信息<br>4.一个过错元素fault element包含问题和状态信息<br><a id=\"more\"></a><br>简单对象访问协议Simple Object Access Protocol消息的结构<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\"?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Envelope</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:soap</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-envelope/\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">soap:encodingStyle</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-encoding\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Header</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Body</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">soap:Fault</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">soap:Fault</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>信封元素Envelope element包含Namespace命名空间和encodingStyle Attribute编码格式属性<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\"?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Envelope</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:soap</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-envelope/\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">soap:encodingStyle</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-encoding\"</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  Message information goes here</span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>该协议的消息结构具体信息：<a href=\"https://www.w3schools.com/xml/xml_soap.asp\" target=\"_blank\" rel=\"noopener\">简单对象访问协议</a></p>\n<p>在了解完该协议下消息的结构后，需要交换消息，可以使用应用层协议来传输消息，例如SMTP、HTTP、HTTPS。<br>下面以HTTP协议为例，介绍向服务器发送请求股票(IBM股票)价格SOAP消息，服务器返回股票价格SOAP消息。</p>\n<h3 id=\"HTTP协议-Hypertext-Transfer-Protocol超文本传输协议\"><a href=\"#HTTP协议-Hypertext-Transfer-Protocol超文本传输协议\" class=\"headerlink\" title=\"HTTP协议(Hypertext Transfer Protocol超文本传输协议)\"></a>HTTP协议(Hypertext Transfer Protocol超文本传输协议)</h3><p>HTTP协议是基于TCP/IP协议族进行消息文本传输的协议，一个HTTP客户端连接一个HTTP服务器需要用<a href=\"https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"noopener\">TCP协议</a>（传输控制协议Transmission Control Protocol）<br>在建立连接之后，客户端可以向服务器发送HTTP请求消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /item HTTP/1.1</span><br><span class=\"line\">Host: 189.123.255.239</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 200</span><br></pre></td></tr></table></figure></p>\n<p>服务器收到请求并且该请求是正确的格式，向客户端发动响应，该响应包含一个状态码表明请求收到。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">200 OK</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 200</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"简单对象访问协议绑定-SOAP-Binding\"><a href=\"#简单对象访问协议绑定-SOAP-Binding\" class=\"headerlink\" title=\"简单对象访问协议绑定(SOAP Binding)\"></a>简单对象访问协议绑定(SOAP Binding)</h3><p>通过简单对象访问协议绑定可以进行数据交换，该绑定的原理是使用传输协议（transport protocol）交换SOAP消息。<br>大多数简单对象访问协议绑定（SOAP Binding）的实现模块提供了对HTTP、SMTP协议的绑定<br>HTTP协议是同步的，并且被广泛的应用于生活中。一个SOAP HTTP请求限定了至少两个HTTP头（HTTP headers）Content-Type 和 Content-Length<br>SMTP协议是异步的，是特殊情况下才用的特效解药。<br>Java对SOAP的实现提供了一个对JMS协议（Java Messaging System）的绑定。<br>Python对SOAP的实现，针对web服务(WebService)有soaplib库，但是在2011年官网停止对该库更新。并且转向另外一个库rpclib</p>\n<h3 id=\"Content-Type和Content-Length\"><a href=\"#Content-Type和Content-Length\" class=\"headerlink\" title=\"Content-Type和Content-Length\"></a>Content-Type和Content-Length</h3><p>SOAP请求和响应的Content-Type头规定了MIME type，消息的MIME type和字符编码被用于规定XML体的请求、响应。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Type: MIMEType; charset=character-encoding</span><br></pre></td></tr></table></figure></p>\n<p>例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /item HTTP/1.1</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br></pre></td></tr></table></figure></p>\n<p>SOAP请求和响应的Content-Length规定了请求、响应体中的字节数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Length: bytes</span><br></pre></td></tr></table></figure></p>\n<p>例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /item HTTP/1.1</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br><span class=\"line\">Content-Length: 250</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"正式开始我们的主菜！股票价格SOAP消息\"><a href=\"#正式开始我们的主菜！股票价格SOAP消息\" class=\"headerlink\" title=\"正式开始我们的主菜！股票价格SOAP消息\"></a>正式开始我们的主菜！股票价格SOAP消息</h3><p>一个含有股票名（IBM）的请求价格消息如下所示，在发送到服务端后，我们将收到SOAP股票价格消息，这个功能的命名空间定义在”<a href=\"http://www.example.org/stock&quot;\" target=\"_blank\" rel=\"noopener\">http://www.example.org/stock&quot;</a>.<br>SOAP请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /InStock HTTP/1.1</span><br><span class=\"line\">Host: www.example.org</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br><span class=\"line\">Content-Length: nnn</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Envelope</span><br><span class=\"line\">xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope/&quot;</span><br><span class=\"line\">soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Body xmlns:m=&quot;http://www.example.org/stock&quot;&gt;</span><br><span class=\"line\">  &lt;m:GetStockPrice&gt;</span><br><span class=\"line\">    &lt;m:StockName&gt;IBM&lt;/m:StockName&gt;</span><br><span class=\"line\">  &lt;/m:GetStockPrice&gt;</span><br><span class=\"line\">&lt;/soap:Body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/soap:Envelope&gt;</span><br></pre></td></tr></table></figure></p>\n<p>SOAP响应<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br><span class=\"line\">Content-Length: nnn</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Envelope</span><br><span class=\"line\">xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope/&quot;</span><br><span class=\"line\">soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Body xmlns:m=&quot;http://www.example.org/stock&quot;&gt;</span><br><span class=\"line\">  &lt;m:GetStockPriceResponse&gt;</span><br><span class=\"line\">    &lt;m:Price&gt;34.5&lt;/m:Price&gt;</span><br><span class=\"line\">  &lt;/m:GetStockPriceResponse&gt;</span><br><span class=\"line\">&lt;/soap:Body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/soap:Envelope&gt;</span><br></pre></td></tr></table></figure></p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"预备知识\"><a href=\"#预备知识\" class=\"headerlink\" title=\"预备知识\"></a>预备知识</h3><p>Simple Object Access Protocol是应用程序交换消息数据的一种协议，使用在web服务(Web Service),SOAP是其简写，<br>由于非常容易与Service-oriented architecture(SOA)产生歧义，在2003年SOAP这种缩写被废止了。</p>\n<p>一个简单对象访问协议(Simple Object Access Protocol)的消息是一个普通的XML文档，并包含以下元素。<br>1.一个信封元素Envelope element用于定义一个XML文档为简单对象访问协议(Simple Object Access Protocol)的消息。<br>2.一个头元素header element包含头信息<br>3.一个体元素body element包含呼叫和应答信息<br>4.一个过错元素fault element包含问题和状态信息<br>","more":"<br>简单对象访问协议Simple Object Access Protocol消息的结构<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\"?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Envelope</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:soap</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-envelope/\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">soap:encodingStyle</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-encoding\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Header</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Header</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Body</span>&gt;</span></span><br><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">soap:Fault</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">soap:Fault</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>信封元素Envelope element包含Namespace命名空间和encodingStyle Attribute编码格式属性<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\"?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">soap:Envelope</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">xmlns:soap</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-envelope/\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"attr\">soap:encodingStyle</span>=<span class=\"string\">\"http://www.w3.org/2003/05/soap-encoding\"</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\">  Message information goes here</span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">soap:Envelope</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>该协议的消息结构具体信息：<a href=\"https://www.w3schools.com/xml/xml_soap.asp\" target=\"_blank\" rel=\"noopener\">简单对象访问协议</a></p>\n<p>在了解完该协议下消息的结构后，需要交换消息，可以使用应用层协议来传输消息，例如SMTP、HTTP、HTTPS。<br>下面以HTTP协议为例，介绍向服务器发送请求股票(IBM股票)价格SOAP消息，服务器返回股票价格SOAP消息。</p>\n<h3 id=\"HTTP协议-Hypertext-Transfer-Protocol超文本传输协议\"><a href=\"#HTTP协议-Hypertext-Transfer-Protocol超文本传输协议\" class=\"headerlink\" title=\"HTTP协议(Hypertext Transfer Protocol超文本传输协议)\"></a>HTTP协议(Hypertext Transfer Protocol超文本传输协议)</h3><p>HTTP协议是基于TCP/IP协议族进行消息文本传输的协议，一个HTTP客户端连接一个HTTP服务器需要用<a href=\"https://zh.wikipedia.org/wiki/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\" target=\"_blank\" rel=\"noopener\">TCP协议</a>（传输控制协议Transmission Control Protocol）<br>在建立连接之后，客户端可以向服务器发送HTTP请求消息。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /item HTTP/1.1</span><br><span class=\"line\">Host: 189.123.255.239</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 200</span><br></pre></td></tr></table></figure></p>\n<p>服务器收到请求并且该请求是正确的格式，向客户端发动响应，该响应包含一个状态码表明请求收到。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">200 OK</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 200</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"简单对象访问协议绑定-SOAP-Binding\"><a href=\"#简单对象访问协议绑定-SOAP-Binding\" class=\"headerlink\" title=\"简单对象访问协议绑定(SOAP Binding)\"></a>简单对象访问协议绑定(SOAP Binding)</h3><p>通过简单对象访问协议绑定可以进行数据交换，该绑定的原理是使用传输协议（transport protocol）交换SOAP消息。<br>大多数简单对象访问协议绑定（SOAP Binding）的实现模块提供了对HTTP、SMTP协议的绑定<br>HTTP协议是同步的，并且被广泛的应用于生活中。一个SOAP HTTP请求限定了至少两个HTTP头（HTTP headers）Content-Type 和 Content-Length<br>SMTP协议是异步的，是特殊情况下才用的特效解药。<br>Java对SOAP的实现提供了一个对JMS协议（Java Messaging System）的绑定。<br>Python对SOAP的实现，针对web服务(WebService)有soaplib库，但是在2011年官网停止对该库更新。并且转向另外一个库rpclib</p>\n<h3 id=\"Content-Type和Content-Length\"><a href=\"#Content-Type和Content-Length\" class=\"headerlink\" title=\"Content-Type和Content-Length\"></a>Content-Type和Content-Length</h3><p>SOAP请求和响应的Content-Type头规定了MIME type，消息的MIME type和字符编码被用于规定XML体的请求、响应。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Type: MIMEType; charset=character-encoding</span><br></pre></td></tr></table></figure></p>\n<p>例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /item HTTP/1.1</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br></pre></td></tr></table></figure></p>\n<p>SOAP请求和响应的Content-Length规定了请求、响应体中的字节数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Content-Length: bytes</span><br></pre></td></tr></table></figure></p>\n<p>例子<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /item HTTP/1.1</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br><span class=\"line\">Content-Length: 250</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"正式开始我们的主菜！股票价格SOAP消息\"><a href=\"#正式开始我们的主菜！股票价格SOAP消息\" class=\"headerlink\" title=\"正式开始我们的主菜！股票价格SOAP消息\"></a>正式开始我们的主菜！股票价格SOAP消息</h3><p>一个含有股票名（IBM）的请求价格消息如下所示，在发送到服务端后，我们将收到SOAP股票价格消息，这个功能的命名空间定义在”<a href=\"http://www.example.org/stock&quot;\" target=\"_blank\" rel=\"noopener\">http://www.example.org/stock&quot;</a>.<br>SOAP请求<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /InStock HTTP/1.1</span><br><span class=\"line\">Host: www.example.org</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br><span class=\"line\">Content-Length: nnn</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Envelope</span><br><span class=\"line\">xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope/&quot;</span><br><span class=\"line\">soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Body xmlns:m=&quot;http://www.example.org/stock&quot;&gt;</span><br><span class=\"line\">  &lt;m:GetStockPrice&gt;</span><br><span class=\"line\">    &lt;m:StockName&gt;IBM&lt;/m:StockName&gt;</span><br><span class=\"line\">  &lt;/m:GetStockPrice&gt;</span><br><span class=\"line\">&lt;/soap:Body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/soap:Envelope&gt;</span><br></pre></td></tr></table></figure></p>\n<p>SOAP响应<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Content-Type: application/soap+xml; charset=utf-8</span><br><span class=\"line\">Content-Length: nnn</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Envelope</span><br><span class=\"line\">xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope/&quot;</span><br><span class=\"line\">soap:encodingStyle=&quot;http://www.w3.org/2003/05/soap-encoding&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;soap:Body xmlns:m=&quot;http://www.example.org/stock&quot;&gt;</span><br><span class=\"line\">  &lt;m:GetStockPriceResponse&gt;</span><br><span class=\"line\">    &lt;m:Price&gt;34.5&lt;/m:Price&gt;</span><br><span class=\"line\">  &lt;/m:GetStockPriceResponse&gt;</span><br><span class=\"line\">&lt;/soap:Body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/soap:Envelope&gt;</span><br></pre></td></tr></table></figure></p>\n<p>版权声明：本文为博主原创文章，转载时注明，谢谢。</p>"},{"title":"计算机网络","date":"2018-05-15T05:09:04.000Z","_content":"## 《计算机网络》\n由于要面试H3C的网络操作系统软件开发工程师，于是翻开《计算机网络》，。\n复习下信道，频分复用，码分复用...默写OSI七层协议，物理层信噪比公式。\n\n<!-- more -->\nTCP/IP协议族中的TCP协议，IP协议，ICMP协议。\n以及能写从协议角度去分析数据传输过程的变化\n\n这些可能作为笔试题目考点。\n\n\n\n","source":"_posts/读谢希仁版计算机网络感悟.md","raw":"---\ntitle: 计算机网络\ndate: 2018-5-15 13:09:04\ntags: [读书笔记， 计算机网络]\n---\n## 《计算机网络》\n由于要面试H3C的网络操作系统软件开发工程师，于是翻开《计算机网络》，。\n复习下信道，频分复用，码分复用...默写OSI七层协议，物理层信噪比公式。\n\n<!-- more -->\nTCP/IP协议族中的TCP协议，IP协议，ICMP协议。\n以及能写从协议角度去分析数据传输过程的变化\n\n这些可能作为笔试题目考点。\n\n\n\n","slug":"读谢希仁版计算机网络感悟","published":1,"updated":"2023-08-15T14:43:40.815Z","_id":"cjoxv5g8f000pv4nb0qrvwudf","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"《计算机网络》\"><a href=\"#《计算机网络》\" class=\"headerlink\" title=\"《计算机网络》\"></a>《计算机网络》</h2><p>由于要面试H3C的网络操作系统软件开发工程师，于是翻开《计算机网络》，。<br>复习下信道，频分复用，码分复用…默写OSI七层协议，物理层信噪比公式。</p>\n<a id=\"more\"></a>\n<p>TCP/IP协议族中的TCP协议，IP协议，ICMP协议。<br>以及能写从协议角度去分析数据传输过程的变化</p>\n<p>这些可能作为笔试题目考点。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"《计算机网络》\"><a href=\"#《计算机网络》\" class=\"headerlink\" title=\"《计算机网络》\"></a>《计算机网络》</h2><p>由于要面试H3C的网络操作系统软件开发工程师，于是翻开《计算机网络》，。<br>复习下信道，频分复用，码分复用…默写OSI七层协议，物理层信噪比公式。</p>","more":"<p>TCP/IP协议族中的TCP协议，IP协议，ICMP协议。<br>以及能写从协议角度去分析数据传输过程的变化</p>\n<p>这些可能作为笔试题目考点。</p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjoxv5g550000v4nb8fpmrn57","tag_id":"cjoxv5g610003v4nbqj14zwk3","_id":"cjoxv5g6l0008v4nblmr0o4uc"},{"post_id":"cjoxv5g5u0002v4nbkpln2n9w","tag_id":"cjoxv5g6i0007v4nbw678bbzj","_id":"cjoxv5g76000dv4nb1okwh3sj"},{"post_id":"cjoxv5g660004v4nbhtlw2bc6","tag_id":"cjoxv5g6x000bv4nbemwg5qc2","_id":"cjoxv5g7o000hv4nbcz813ys0"},{"post_id":"cjoxv5g6a0005v4nbi7d6wexc","tag_id":"cjoxv5g7g000fv4nbb1rng8zp","_id":"cjoxv5g8d000ov4nbd3zdatik"},{"post_id":"cjoxv5g6a0005v4nbi7d6wexc","tag_id":"cjoxv5g7x000jv4nb8sva7j7x","_id":"cjoxv5g8j000qv4nbd41mfzj7"},{"post_id":"cjoxv5g6e0006v4nbgiqkvj1l","tag_id":"cjoxv5g8a000nv4nbrgrc7tpj","_id":"cjoxv5g8p000sv4nb1uhvdz3t"},{"post_id":"cjoxv5g6o0009v4nb59w7r4pi","tag_id":"cjoxv5g8a000nv4nbrgrc7tpj","_id":"cjoxv5g90000wv4nb6sjmrsz1"},{"post_id":"cjoxv5g6o0009v4nb59w7r4pi","tag_id":"cjoxv5g8s000tv4nbhwcgicmf","_id":"cjoxv5g92000xv4nb6qt8aueh"},{"post_id":"cjoxv5g6o0009v4nb59w7r4pi","tag_id":"cjoxv5g8u000uv4nbi9kckyhv","_id":"cjoxv5g96000zv4nbcjodagdk"},{"post_id":"cjoxv5g6t000av4nb34gwja1e","tag_id":"cjoxv5g8x000vv4nbk68q3kn6","_id":"cjoxv5g9c0011v4nbim4dbkkd"},{"post_id":"cjoxv5g6t000av4nb34gwja1e","tag_id":"cjoxv5g94000yv4nbujy3o4th","_id":"cjoxv5g9f0012v4nb6e8aedkp"},{"post_id":"cjoxv5g79000ev4nbkdsf2eev","tag_id":"cjoxv5g990010v4nb8rsgaqzk","_id":"cjoxv5g9n0015v4nbazgnvs6a"},{"post_id":"cjoxv5g79000ev4nbkdsf2eev","tag_id":"cjoxv5g8a000nv4nbrgrc7tpj","_id":"cjoxv5g9p0016v4nbst7uk6j8"},{"post_id":"cjoxv5g7j000gv4nbvih0m8t0","tag_id":"cjoxv5g8a000nv4nbrgrc7tpj","_id":"cjoxv5ga0001av4nbz9sqzsve"},{"post_id":"cjoxv5g7j000gv4nbvih0m8t0","tag_id":"cjoxv5g9s0017v4nbruwklqwi","_id":"cjoxv5ga3001bv4nb199mzq1g"},{"post_id":"cjoxv5g7j000gv4nbvih0m8t0","tag_id":"cjoxv5g9v0018v4nbew6o85d5","_id":"cjoxv5ga8001dv4nbvl1zgw3w"},{"post_id":"cjoxv5g7s000iv4nbajh5qt8e","tag_id":"cjoxv5g9y0019v4nb3v4xjqd7","_id":"cjoxv5gaj001hv4nbtnfmerzu"},{"post_id":"cjoxv5g7s000iv4nbajh5qt8e","tag_id":"cjoxv5ga5001cv4nb07ybii15","_id":"cjoxv5gal001iv4nb62fx2chw"},{"post_id":"cjoxv5g7s000iv4nbajh5qt8e","tag_id":"cjoxv5gab001ev4nbkmxevuyv","_id":"cjoxv5gaq001kv4nb2h4l4xny"},{"post_id":"cjoxv5g7s000iv4nbajh5qt8e","tag_id":"cjoxv5gad001fv4nb2pki4h6i","_id":"cjoxv5gau001lv4nb3vhp9ey6"},{"post_id":"cjoxv5g80000kv4nb48ahtp36","tag_id":"cjoxv5gag001gv4nbvj1eiwqz","_id":"cjoxv5gb6001pv4nb8ndtsbli"},{"post_id":"cjoxv5g80000kv4nb48ahtp36","tag_id":"cjoxv5gan001jv4nb3p0ukxuv","_id":"cjoxv5gb9001qv4nbgluj66z7"},{"post_id":"cjoxv5g80000kv4nb48ahtp36","tag_id":"cjoxv5gax001mv4nbahbagzq7","_id":"cjoxv5gbf001sv4nbu6fqamwi"},{"post_id":"cjoxv5g80000kv4nb48ahtp36","tag_id":"cjoxv5gb0001nv4nbsn53cxjw","_id":"cjoxv5gbh001tv4nbtdzf72b0"},{"post_id":"cjoxv5g84000lv4nbf4g8fvpz","tag_id":"cjoxv5g8a000nv4nbrgrc7tpj","_id":"cjoxv5gbn001vv4nbo6oe2tnp"},{"post_id":"cjoxv5g84000lv4nbf4g8fvpz","tag_id":"cjoxv5gbc001rv4nbc2z3163t","_id":"cjoxv5gbp001wv4nbw7p60505"},{"post_id":"cjoxv5g87000mv4nbgnna9h80","tag_id":"cjoxv5g8s000tv4nbhwcgicmf","_id":"cjoxv5gc00020v4nbnpmz1u56"},{"post_id":"cjoxv5g87000mv4nbgnna9h80","tag_id":"cjoxv5gbs001xv4nbjezd1dr1","_id":"cjoxv5gc20021v4nb76tazfgp"},{"post_id":"cjoxv5g87000mv4nbgnna9h80","tag_id":"cjoxv5g8u000uv4nbi9kckyhv","_id":"cjoxv5gc50022v4nb99jy6q9w"},{"post_id":"cjoxv5g8f000pv4nb0qrvwudf","tag_id":"cjoxv5gbx001zv4nblx84ripd","_id":"cjoxv5gc70023v4nb5xpgvipp"}],"Tag":[{"name":"面试日记","_id":"cjoxv5g610003v4nbqj14zwk3"},{"name":"CSS","_id":"cjoxv5g6i0007v4nbw678bbzj"},{"name":"HTML","_id":"cjoxv5g6x000bv4nbemwg5qc2"},{"name":"JavaScript","_id":"cjoxv5g7g000fv4nbb1rng8zp"},{"name":"面向对象程序设计","_id":"cjoxv5g7x000jv4nb8sva7j7x"},{"name":"Python2.7","_id":"cjoxv5g8a000nv4nbrgrc7tpj"},{"name":"XML","_id":"cjoxv5g8s000tv4nbhwcgicmf"},{"name":"WebService","_id":"cjoxv5g8u000uv4nbi9kckyhv"},{"name":"Python3","_id":"cjoxv5g8x000vv4nbk68q3kn6"},{"name":"flask","_id":"cjoxv5g94000yv4nbujy3o4th"},{"name":"leetcode","_id":"cjoxv5g990010v4nb8rsgaqzk"},{"name":"socket","_id":"cjoxv5g9s0017v4nbruwklqwi"},{"name":"多线程","_id":"cjoxv5g9v0018v4nbew6o85d5"},{"name":"集群服务器","_id":"cjoxv5g9y0019v4nb3v4xjqd7"},{"name":"分布式","_id":"cjoxv5ga5001cv4nb07ybii15"},{"name":"Vmware虚拟机","_id":"cjoxv5gab001ev4nbkmxevuyv"},{"name":"Linux","_id":"cjoxv5gad001fv4nb2pki4h6i"},{"name":"抓包","_id":"cjoxv5gag001gv4nbvj1eiwqz"},{"name":"fiddler&wireshark","_id":"cjoxv5gan001jv4nb3p0ukxuv"},{"name":"协议分析","_id":"cjoxv5gax001mv4nbahbagzq7"},{"name":"流量统计","_id":"cjoxv5gb0001nv4nbsn53cxjw"},{"name":"多进程","_id":"cjoxv5gbc001rv4nbc2z3163t"},{"name":"HTTP协议","_id":"cjoxv5gbs001xv4nbjezd1dr1"},{"name":"读书笔记， 计算机网络","_id":"cjoxv5gbx001zv4nblx84ripd"}]}}